{
  
    
        "post0": {
            "title": "CPT Progress",
            "content": "Idea . My CPT is a memory match game. The player is shown a certain number of closed cards, and when a player clicks on one of them, it gets revealed. The player can click another card, and if it matches, then the cards will be added to the score, otherwise, the cards flip back and the player will use their memory to get try to match as many as they can. My twist on this game is that some of the cards are junk foods that will deduct points if it gets matched. The purpose is to help the player to get more memory but encouraging them to memorize tiles, as well to help them identify what foods are healthy and which ones are not through the use of a point system, which encourages these behaviours for a larger amount of points. . Progress . I have made a python turtle program that can create game where you click on tiles to reveal a number that was randomly assigned to them while drawing the program. . from random import * from turtle import * screen = Screen() screen.bgcolor(&quot;orange&quot;) def tile(x, y): up() goto(x, y) down() color(&#39;black&#39;, &#39;light green&#39;) begin_fill() for count in range(4): forward(50) left(90) end_fill() def number(x, y): return int((x + 200) // 50 + ((y + 200) // 50) * 8) def coord(count): return (count % 8) * 50 - 200, (count // 8) * 50 - 200 def click(x, y): spot = number(x, y) mark = state[&#39;mark&#39;] if mark is None or mark == spot or tiles[mark] != tiles[spot]: state[&#39;mark&#39;] = spot else: hide[spot] = False hide[mark] = False state[&#39;mark&#39;] = None def draw(): clear() goto(0, 0) stamp() for count in range(64): if hide[count]: x, y = coord(count) tile(x, y) mark = state[&#39;mark&#39;] if mark is not None and hide[mark]: x, y = coord(mark) up() goto(x + 20, y+20) color(&#39;black&#39;) write(tiles[mark], font=(&#39;Arial&#39;, 30, &#39;normal&#39;)) update() ontimer(draw, 10) tiles = list(range(32)) * 2 state = {&#39;mark&#39;: None} hide = [True] * 64 shuffle(tiles) tracer(False) width(7) onscreenclick(click) draw() done() . Directions . This is obviously just a crude prototype. First of all, the tiles are not foods, second, there is a bug where a line will be drawn in the middle after matching. There is no score board, and the game doesn&#39;t have a database it can upload to for keeping track. The algorithm of iteration is not utilized. Still, this was a very good project which can be built on to make my CPT better. .",
            "url": "https://jasoxddd.github.io/FastProject2/2023/02/05/CPT-Progreaa.html",
            "relUrl": "/2023/02/05/CPT-Progreaa.html",
            "date": " • Feb 5, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "MCQ 2 Blog",
            "content": "My Results . 46/50 Q1: . . I did not consider that the code would change the max variable after it had already be set, which lead me to ignore the fact that if x is the max, the max would be set to z since y is not the max. In the future, I&#39;ll try to look over every line of the code slowly to make sure that I&#39;m not making any oversights. . Q10: . . I did not see the fact that this question is multi-select, and I saw that B is correct and moved on. In the future, I&#39;ll always check if a question is multi-select, as well as read all of the options carefully. . Q42: . . I misplaced III as part of the advertising process instead of the designing process. I will make sure to carefully consider if a certain item can be beneficial to an aspect of developing in the future. . Q49: . . I forgot that some programs will just be unanswerable with no solutions. I will keep this in mind. . Summary . The most pressing problem I have right now is not being careful enough and making mistakes. I will carefully do the problems, as well as checking them over. In addition, I will need to review some of the previous lessons, since as the results reveal, I need to recover some of my informations. .",
            "url": "https://jasoxddd.github.io/FastProject2/2023/01/29/Test-Blog.html",
            "relUrl": "/2023/01/29/Test-Blog.html",
            "date": " • Jan 29, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "CPT Individual Blog",
            "content": "The Blog . The Collegeboard Performance Task is an assessment of the skills of the APCSP curriculum, consisting of a video and a written response that demonstrate a program working, while describing its purpose and functionality, how it is managing complexity, utilizing algorithms and procedures, testing, and providing detailed descriptions to show proficiency in the project and AP CSP curriculum. . Our project is a Fruit-Ninja-esque game where foods will appear on the screen, and the player will identify the healthy foods and click them in a limited amount of time. Choosing the right ones increases the score and timer and vice versa. There will also be a sign-in feature for updating a leaderboard with scores. . For my personal addition to the project, I will be working on storing the leaderboard and sign in information. I will be creating a program that can send and recieve sign-in information and highscores to and from a database. This aims to give the player a reason to learn all the good foods and be better at reflexes, due to the wish to get a higher score, a competitive edge. I was in charge of that in my team&#39;s project last trimester, and I will do the same this time as well with the new experience and tools I&#39;ve learned. .",
            "url": "https://jasoxddd.github.io/FastProject2/2023/01/28/CPT-Individual-Blog.html",
            "relUrl": "/2023/01/28/CPT-Individual-Blog.html",
            "date": " • Jan 28, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "5.1 and 5.2 Blog",
            "content": "5.1 Blog . A beneficial effect would be a easier way to access the information through the internet, the downside is the loss of the ability to concentrate on extracting information slowly due to a reliance on quick information | A benefit would be faster communication and connection to others, the downside is the potential spread of misinformation which is hard to stop with the speed that information spreads. | A benefit would be greater production of industry due to automation, a downside would be the shifting of jobs due to the computer replacing some jobs and creating new ones. The issue with dopamine is definitely real, although it is usually not to the extent that the examples get. Most people would only see computer as a quick getaway, not a replacement of social life. Still, the attachment to games can distract people from things that are more useful. | 5.2 Blog . The way people empower themselves in a digital world is through gaining influence due to popularity on social media or other platforms, therefore, what you say are bound to have people backing you, thus making you more powerful. | People who are empowered can help by giving attention to the people who doesn&#39;t have as much power, giving them support and more power to them as well. | Red Tape do indeed block digital empowerment by blocking people off from certain ways to gain power through the internet. This is present in Del Norte as well, although to a less extent than others since the blockers at Del Norte is more lenient than others, which may just restrict people to certain websites alone. | 5.3 Blog . Algorithm Bias sometimes will train themselves to a certain type of audience, like how TicTok is geared towards teens and Facebook is geared toward Older People. These differencese can be seen in the type of content that gets recommended. Whereas Facebook focuses on longer articles, which older people are more likely to read, TicTok is more catered to short videos, which grab teenager&#39;s attention more often. This is all just the use of marketing towards the selected age group for more attention. It is not really harmful, except the diversity in the platforms are going to be low. | Virtual Assistants have female voices likely because it is selected to be desireble by a test. It&#39;s purpose was to appeal to more audiences, this might be potentially harmful as it may make women seem like just assistants. I should be corrected to having the user select a voice that they want on startup. It is in name of a good business though. | The Google algorithm will recommend you things that relates to the things that you&#39;ve searched up. This may cause to be stuck in your bubble where everything you search up will only result in results that thinks like you think, which is not good for a individual since it can lead to them developing a fixed mindset. Of course, this is acting in the business, because it wants you to click on results that fits you more. | Racist Computer The Owner does think that this is intentional, as he acts like the computer is deliberately avoiding him. | This probably happened because the database only included white people in it, which caused the algorithm to be only able to target white people | This is harmful, as it is excluding a whole group of people in their userbase, and it should be corrected. | This can be easily fixed by using a more variety of samples in the database that has equal representation of every race and gender. | . | . 5.4 Blog . APIs such as rapidAPI can help with crowd sourcing by providing us information that is taken from the people. This can be used to give us the information that we can&#39;t find and input by ourselves. I used a Youtube API, and it gave me information that I couldn&#39;t find by myself taken from the people. This is crowdsourcing in the sense that it gets its information from what others have inputed. | The biggest discovery was the fact that I can use github to restore to previous versions. I was able to recover my project a couple times using this. The knowledge that github stores the previous commits was pretty massive, since I realize how much data is really stored in these websites. | The 150 students could help with crowdsourcing by providing us feedback on our CPT by giving us inputs on how we can improve and the bugs that our programs can run into. They can also give ideas on what we could add to our games. | Crowdsourcing for the whole school is going to be tough, but it can give us a more diverse view and a significantly larger amounts of inputs. However, there is a larger risk of malicious inputs in forms of spam and wrong information. | .",
            "url": "https://jasoxddd.github.io/FastProject2/2023/01/27/Big-Ideas-response.html",
            "relUrl": "/2023/01/27/Big-Ideas-response.html",
            "date": " • Jan 27, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Collegeboard Scoring 3",
            "content": "Sample 1 . Catergory Score Comments . Purpose | 1 | The written response did both state the purpose and functionality of the program, and the program illustrates this purpose. | . Data Abstraction | 0 | The Data is shown being stored in a list, but the list is not shown to be accessed in the next part. | . Managing Complexity | 0 | There is a list, but it is not shown to be used to manage complexity, also, the program did not demonstrate how the program will be more complex without the use of the list. | . Procedural Abstraction | 1 | The program shows an procedure, and how it is used in the program. | . Algorithm Implementation | 1 | The program and how it demonstrates use of sequence, iteration, and selection, and demonstrates how it is called. | . Testing | 1 | The video and the response shows evidence of testing as well as demonstration of what would happen for all of the conditions. | . Total | 4/6 | . I did not notice that the response did not state how does the procedure contribute to the original program. I will be sure to avoid this mistake in the future. . Sample 2 . Catergory Score Comments . Purpose | 1 | The written response did both state the purpose and functionality of the program, and the program illustrates this purpose. | . Data Abstraction | 1 | The Data is shown being stored in a list, and is shown to be accessed in the next part. | . Managing Complexity | 1 | There is a list, and it is shown to be able to be used effectively to reduce the complexity needed for another program to have the same function | . Procedural Abstraction | 1 | The program shows an procedure, and how it is used in the program. | . Algorithm Implementation | 1 | The program and how it demonstrates use of sequence, iteration, and selection, and demonstrates how it is called. | . Testing | 1 | The video and the response shows evidence of testing as well as demonstration of what would happen for all of the conditions. | . Total | 6/6 | | . Sample 3 . Catergory Score Comments . Purpose | 1 | The written response did both state the purpose and functionality of the program, and the program illustrates this purpose. | . Data Abstraction | 0 | The Data is shown being stored in a list, but the list is not shown to be accessed in the next part, also, the description of the list stateList seems inaccurate, as stateList is only shown to be storing the state names, while the description described it as having the information in the more information dropDown as well. | . Managing Complexity | 0 | There is a list, but it is not shown to be used to manage complexity, and it does not describe how this program would be more complex without the use of this list. | . Procedural Abstraction | 0 | The program shows an procedure, but it does not have a parameter, nor does it have any calls of this procedure, and the program inaccurately describes the function of the procedure in that the procedure does not actually update the screen like the description said. | . Algorithm Implementation | 0 | The procedure did not demonstrate iteration. | . Testing | 0 | The procedure did not demonstrate the use of parameters, and it did not explain why the program produces the result when given th eparameters. | . Total | 1/6 | . I did not notice how the collegeboard also considered how the index value was set for the list of states and used that as part of why they deducted points, I will keep this in mind. . Sample 4 . Catergory Score Comments . Purpose | 1 | The written response did both state the purpose and functionality of the program, and the program illustrates this purpose. | . Data Abstraction | 1 | The Data is shown being stored in a list, and is shown to be accessed in the next part. | . Managing Complexity | 1 | There is a list, and it is shown to be able to be used effectively to reduce the complexity needed for another program to have the same function | . Procedural Abstraction | 1 | The program shows an procedure, and how it is used in the program. | . Algorithm Implementation | 1 | The program and how it demonstrates use of sequence, iteration, and selection, and demonstrates how it is called. | . Testing | 0 | The response did not indicate the specific arguments passed, nor does it indicate how the parameter is used, and it also did not describe how the result is formed. | . Total | 5/6 | | . Reflection . In this week&#39;s Scoring, I noticed how sometimes Collegeboard is very lenient with things, and sometimes they are very strict. I will notice in my project to specify how the procedure contributes to the overall program, as well as how the indices for a list is determined. Still, I think I&#39;m getting better at understanding what Collgeboard wants from me in the Create Performance Task, namely, . Clear answers that are detailed and specific to what is being asked. | An input that results in the program’s output and explain how | Have a list or lists that is used effectively to reduce the complexity | Describing how indices of a list is being determined by. | .",
            "url": "https://jasoxddd.github.io/FastProject2/2023/01/21/Collegeboard-Scoring-3.html",
            "relUrl": "/2023/01/21/Collegeboard-Scoring-3.html",
            "date": " • Jan 21, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Frontend Blog",
            "content": "Frontend Viewing . Frontend Code . What this view is . This table aims to provide people with information on the nutrients on the fastfood industry. With the adding, updating and deleting of the information of the food items. The table will be updated by using the top table to add fast food entries, and the bottom table for updating and deleting the entries . How the view works (or is going to work) . The view is made from a mix of html and javascript. The Insert New Food Item part can have inputs that can be used to create a food item and all of its nutrients. The button is linked to a javascript function that will place the food item into a backend server, which will then place the items into the table below. Currently this function still does not work, since this is still a prototype. In the future, I will try to make sending of the json to and from the backend server available. .",
            "url": "https://jasoxddd.github.io/FastProject2/2023/01/16/Frontend-Blog.html",
            "relUrl": "/2023/01/16/Frontend-Blog.html",
            "date": " • Jan 16, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Object Oriented Programming",
            "content": "Terms . Class a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | Object is a instance of a class/template there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor the &quot;init&quot; method in a Python class | . | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions @property decorator (aka getter) enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | . | @name.setter decorator (aka setter) enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | . | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot; allows setters and getters to work with more natural variable name (name, email ...) | . | . | . # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json from datetime import date # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password, classOf, dob): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self.classOf=classOf self.dob=dob self.age=self.calculate_age() # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # getter method for classOf def get_classOf(self): return self.classOf # setter method for classOf def set_classOf(self,classOf): self.classOf = classOf #getter method for DoB def get_dob(self): return self.dob # setter method for DoB and changing age def set_dob(self,dob): self.dob = dob self.age=self.calculate_age() def calculate_age(self): today = date.today() return today.year - self.dob.year - ((today.month, today.day) &lt; (self.dob.month, self.dob.day)) # getter method for age def get_age(self): return self.age # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;, classOf: &quot;{self.classOf}&quot;, dob: &quot;{self.dob}&quot;, age: &quot;{self.age}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; def __dir__(self): return [&quot;name&quot;, &quot;uid&quot;] # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: u = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;, classOf=1858, dob=date(1847,3,3)) # Find user print(&quot;print our user&quot;) print(u) # Change user print(&quot;changing our user&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u.set_classOf(1991) u.set_dob(date(1959,4,5)) # I have no idea lmao print(u) . print our user name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$0xc...&#34;, classOf: &#34;1858&#34;, dob: &#34;1847-03-03&#34;, age: &#34;175&#34; changing our user name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$eTM...&#34;, classOf: &#34;1991&#34;, dob: &#34;1959-04-05&#34;, age: &#34;63&#34; . Self-Created Class . Here is a class for fractions that I created, with functions for printing and getting variables and changing the built-in funtions for arithmetic methods . from math import * class Fraction: &quot;&quot;&quot;represents fractions&quot;&quot;&quot; def __init__(self, num, denom): &quot;&quot;&quot;Fraction(num,denom) -&gt; Fraction creates the fraction object representing num/denom&quot;&quot;&quot; if denom == 0: # raise an error if the denominator is zero raise ZeroDivisionError if num == 0: # set the fraction to 0/1 if numerator is 0 self.num = 0 self.denom = 1 return positive = True # keeps track of positivity if denom &lt; 0: # if denominator is negative, change it to positive and keeps track positive = not positive denom = -1 * denom if num &lt; 0: # do the same to numerator positive = not positive num = -1 * num self.num = int(num / gcd(num, denom)) # the gcd only works when both is positive self.denom = int(denom / gcd(num, denom)) if not positive: # change numerator to negative if positive is false self.num = -1 * self.num def set_numerator(self, num): &quot;&quot;&quot;Fraction.set_numerator(num) -&gt; None changes the numerator of the fraction&quot;&quot;&quot; self.__init__(num, self.denom) def get_numerator(self): &quot;&quot;&quot;Fraction.get_numerator() -&gt; int returns the numerator of the fraction&quot;&quot;&quot; return self.num def set_denominator(self, denom): &quot;&quot;&quot;Fraction.denominator(denom) -&gt; None changes the denominator of the fraction&quot;&quot;&quot; self.__init__(self.num, denom) def get_denominator(self): &quot;&quot;&quot;Fraction.get_denominator() -&gt; int returns the denominators of the fraction&quot;&quot;&quot; return self.denom def __str__(self): &quot;&quot;&quot;Fraction.__str__() -&gt; string returns a string representing the fraction&quot;&quot;&quot; return f&quot;{self.num}/{self.denom}&quot; def __float__(self): &quot;&quot;&quot;Fraction.__float__() -&gt; float returns a float representing the value of the fraction&quot;&quot;&quot; return self.num / self.denom def __add__(self, other): &quot;&quot;&quot;Fraction+Fraction -&gt; Fraction returns a Fraction that is the results of adding two together&quot;&quot;&quot; denomFinal = int(lcm(self.denom, other.denom)) numFinal = int(self.num * denomFinal / self.denom + other.num * denomFinal / other.denom) return Fraction(numFinal, denomFinal) def __sub__(self, other): &quot;&quot;&quot;Fraction-Fraction -&gt; Fraction returns a Fraction that is the results of subtraction one fraction from another&quot;&quot;&quot; denomFinal = int(lcm(self.denom, other.denom)) numFinal = int(self.num * denomFinal / self.denom - other.num * denomFinal / other.denom) return Fraction(numFinal, denomFinal) def __mul__(self, other): &quot;&quot;&quot;Fraction*Fraction -&gt; Fraction returns a Fraction that is the results of multiplying two together&quot;&quot;&quot; return Fraction(self.num * other.num, self.denom * other.denom) def __truediv__(self, other): &quot;&quot;&quot;Fraction/Fraction -&gt; Fraction returns a Fraction that is the results of dividing one fraction by another&quot;&quot;&quot; return Fraction(self.num * other.denom, self.denom * other.num) def __eq__(self, other): &quot;&quot;&quot;Fraction==Fraction -&gt; boolean returns a boolean saying if two fraction is equal to each other&quot;&quot;&quot; if self.num == other.num and self.denom == other.denom: return True else: return False a=Fraction(1,2) b=Fraction(2,3) print(a,b) print(a+b) print(b-a) print(a*b) print(b/a) print(float(a)) print(a.get_numerator()) print(b.get_denominator()) a.set_denominator(4) b.set_numerator(1) print(a,b) print(a==b) . 1/2 2/3 7/6 1/6 1/3 4/3 0.5 1 3 1/4 1/3 False .",
            "url": "https://jasoxddd.github.io/FastProject2/apcsp/2023/01/12/oop.html",
            "relUrl": "/apcsp/2023/01/12/oop.html",
            "date": " • Jan 12, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Collegeboard Grading 2",
            "content": "Sample 1 . Catergory Score . Purpose | 0 | . Data Abstraction | 1 | . Managing Complexity | 0 | . Procedural Abstraction | 0 | . Algorithm Implementation | 0 | . Testing | 1 | . Total | 2/6 | . The video and the written response do not demonstrate a creative purpose but merely restating the function of the program. The Input and the Output os also not clearly seperated in the purpose, giving it a 0. Data abstraction is apparent with the effective use of lists. The Code is not complex, and the response does not explain why it was complex. The algorithm of the evaluateGuess function uses the variable guess, but it is also used outside of the funciton. The response does not indicate why the algorithm demonstrate complexity. The algorithm demonstrates iteration, sequencing, and selection, but its description is not clear enough for it to be replicated. However, the program did demonstrate testing, with one wrong answers and win conditions, as well as clear description of what&#39;s being tested. . After reviewing the Collgeboard scoring, I noticed that Data Abstraction was given a 0, I graded it a 1 because I had not noticed that there was an unused list. I will be on the lookout for anything like this in the future. . Sample 2 . Catergory Score . Purpose | 1 | . Data Abstraction | 1 | . Managing Complexity | 1 | . Procedural Abstraction | 1 | . Algorithm Implementation | 1 | . Testing | 1 | . Total | 6/6 | . The written response reflect a clear purpose and the video demonstrates it well. The written response demonstrates that information is stored in one list, without any overflowing of variables, and also shows how it is used. The code does a good job with managing complexity here, with the use of wordlist to manage the words and use them. The program clearly shows a procedure and how it is used well. The procedure shows sequencing, selection(if), and iteration(while), and includes a detailed explanation of the procedure enough to recreate it from just the description. The program describes in detail what both testing sequences is used for and what happens in the program as those were run. All of this combined gives it a perfect score with 6/6 . My evaluation is the same as collegeboard&#39;s. . Sample 3 . Catergory Score . Purpose | 0 | . Data Abstraction | 1 | . Managing Complexity | 1 | . Procedural Abstraction | 1 | . Algorithm Implementation | 1 | . Testing | 1 | . Total | 5/6 | . The written response did not state the purpose but merrly stated the functionality of the program. The written response indicated that variables are stored in one list and that it&#39;s being used properly. The program does a nice job with managing complexity with its list to store the numbers and using them. The procedure is demonstrated well and suits the program&#39;s purpose. The procedure also have sequencing, selection(if-else if-else), and iteration(for), and includes a instruction detailed enough to replicate it from the description. The program describes in detail what both testing sequence is used for and why is the results intended. Only the purpose is lacking with a score of 5/6 . My evaluation is the same as collegeboard&#39;s . Sample 4 . Catergory Score . Purpose | 1 | . Data Abstraction | 0 | . Managing Complexity | 0 | . Procedural Abstraction | 1 | . Algorithm Implementation | 1 | . Testing | 0 | . Total | 3/6 | . The written response correctly indicated the purpose of the program instead of the functionality. The response shows how the data is stored but not how it is used, putting it off of the data abstraction method. The list mentioned did not help to manage complexity, only acting as a counter. The procedure uses a parameter and is used to complete parts of the procedure. The Algorithm has sequencing, selection(if) and iteration(repeat), and it describes the algorithm in enough detail to replicate it from scratch (pun not intended). The test cases are not explaned properly, with not the arguments but the conditions for each case. . My evaluation is the same as collegeboard&#39;s . Summary . Through these gradings, I learned of the following things. . It is important for the response to state the greater purpose of the program, not the functionality | All variables declared should be used in an effective way | If there is a easier way to do something, do it | The test cases should test how the program will respond to arguments, and not the conditions I&#39;ll keep these in mind as I do my performance task project. | .",
            "url": "https://jasoxddd.github.io/FastProject2/2023/01/12/collegeboard-scoring-2.html",
            "relUrl": "/2023/01/12/collegeboard-scoring-2.html",
            "date": " • Jan 12, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Algorithms and Logic",
            "content": "Algorithm . An algorithm typically means &#39;code&#39; that solves a problem. Designing an algorithm often requires you to learn the Tech first and then consider how you design your code and algorithms. Code design can take many iterations. . Truth Tables . My topic for this blog is Truth Tables. The illustration that follows displays the results of logical operators AND, OR, XOR, NOT versus binary 1 and 0. The output produces a &#39;Truth Table&#39;. . Exploring Truth Tables operations . Exploration of this topic requires searching the language for logical operators, then figuring out how to display condition and test result. . Bitwise operations for Truth Tables typically represent 1 - True and 0 - False. | Logical expression in iteration and selection statements result in True or False | . My objective is Truth Tables. But in my exploration I did both Truth Table and Expression syntax . print(&quot;OR&quot;) print( &quot;1 | 0 = &quot;, 1 | 0) print( &quot;~(1 | 0) = &quot;, ~(1 | 0) % 2) # 1 is an integer, not a bit so remainder (modulo) does trick print(&quot;AND&quot;) print( &quot;1 &amp; 0 = &quot;, 1 &amp; 0) print( &quot;~(1 &amp; 0) = &quot;, ~(1 &amp; 0) % 2) # modulo again print(&quot;XOR&quot;) print( &quot;1 ^ 1 = &quot;, 1 ^ 1) print() # Boolean Tests print(&quot;Boolean OR&quot;) print( &quot;True or False = &quot;, True or False) print(&quot;Boolean AND&quot;) print( &quot;True and False = &quot;, True and False) print(&quot;Boolean XOR&quot;) print( &quot;True != True = &quot;, True != True) . OR 1 | 0 = 1 ~(1 | 0) = 0 AND 1 &amp; 0 = 0 ~(1 &amp; 0) = 1 XOR 1 ^ 1 = 0 Boolean OR True or False = True Boolean AND True and False = False Boolean XOR True != True = True . Algorithm 1 . This algorithm focuses on small reusable procedures/functions (def) for bitwise tests. From the exploratory experience above it seems like a lot of typing would be necessary to represent possibilities. . import operator # functions for all comparisons, logical operations, mathematical operations and sequence operations # builds truth table def truth_options(): a_opts = [1, 0] b_opts = [1, 0] return [(a, b) for a in a_opts for b in b_opts] # double for permutes options # provides equivalent function lookup for bitwise using operator functions def bitwise_options(op): ops = {&#39;&amp;&#39;: operator.and_, &#39;|&#39;: operator.or_, &#39;^&#39;: operator.xor} return ops[op] # control/eval for bitwise operators, selection is based on number of operators def bitwise_eval(op, op2=&quot;&quot;): if op2 == &quot;&quot;: op_func = bitwise_options(op) print(f&quot;Bitwise {op}&quot;) for a, b in truth_options(): print(f&quot;{a} {op} {b} is {op_func(a, b)}&quot;) else: op2_func = bitwise_options(op2) print(f&quot;Bitwise {op}&quot;) for a, b in truth_options(): print(f&quot;{op}({a} {op2} {b}) is {(1, 0)[op2_func(a, b)]}&quot;) # opposite: index 0 returns 1, index 1 return 0 def method1(): bitwise_eval(&quot;&amp;&quot;) bitwise_eval(&quot;NAND&quot;, &quot;&amp;&quot;) bitwise_eval(&quot;|&quot;) bitwise_eval(&quot;NOR&quot;, &quot;|&quot;) bitwise_eval(&quot;^&quot;) # call bitwise evaluation of truth table if __name__ == &quot;__main__&quot;: print(&quot;***** Method 1 *****&quot;) method1() . ***** Method 1 ***** Bitwise &amp; 1 &amp; 1 is 1 1 &amp; 0 is 0 0 &amp; 1 is 0 0 &amp; 0 is 0 Bitwise NAND NAND(1 &amp; 1) is 0 NAND(1 &amp; 0) is 1 NAND(0 &amp; 1) is 1 NAND(0 &amp; 0) is 1 Bitwise | 1 | 1 is 1 1 | 0 is 1 0 | 1 is 1 0 | 0 is 0 Bitwise NOR NOR(1 | 1) is 0 NOR(1 | 0) is 0 NOR(0 | 1) is 0 NOR(0 | 0) is 1 Bitwise ^ 1 ^ 1 is 0 1 ^ 0 is 1 0 ^ 1 is 1 0 ^ 0 is 0 . Truth Table - Algorithm 2 . This algorithm above seemed to me to lose clarity with all the functions. The second attempt focuses on truth tables as a linear sequence, with loops for required repetitions. This seemed more understandable to me than my 1st attempt. . def method2(): truth_table = [[1,1], [1,0], [0,1], [0,0]] for a, b in truth_table: print(f&quot;and {a} &amp; {b}: {a &amp; b}&quot;) for a, b in truth_table: print(f&quot;nand ~({a} &amp; {b}): {((a &amp; b) + 1) % 2}&quot;) # warning: ~ negates entire integer without modulo for a, b in truth_table: print(f&quot;or {a} | {b}: {a | b}&quot;) for a, b in truth_table: print(f&quot;nor ~({a} | {b}): {((a | b) + 1) % 2}&quot;) # warning: see above for a, b in truth_table: print(f&quot;xor {a} ^ {b}: {a ^ b}&quot;) # call bitwise evaluation of truth table if __name__ == &quot;__main__&quot;: print(&quot;***** Method 2 *****&quot;) method2() . ***** Method 2 ***** and 1 &amp; 1: 1 and 1 &amp; 0: 0 and 0 &amp; 1: 0 and 0 &amp; 0: 0 nand ~(1 &amp; 1): 0 nand ~(1 &amp; 0): 1 nand ~(0 &amp; 1): 1 nand ~(0 &amp; 0): 1 or 1 | 1: 1 or 1 | 0: 1 or 0 | 1: 1 or 0 | 0: 0 nor ~(1 | 1): 0 nor ~(1 | 0): 0 nor ~(0 | 1): 0 nor ~(0 | 0): 1 xor 1 ^ 1: 0 xor 1 ^ 0: 1 xor 0 ^ 1: 1 xor 0 ^ 0: 0 . Extra: Order of Operators . A program showcasing that the and operator has higher hiearchy than the or operator, with (a and b) or c and a and b or c being equivalent . def method3(): truth_table = [[1,1], [1,0], [0,1], [0,0]] for i in [0,1]: for j in [0,1]: for k in [0,1]: print(str(i)+&quot; and &quot;+str(j)+&quot; or &quot;+str(k)+&quot;: &quot;+str(i&amp;j|k)) print(&quot;(&quot;+str(i)+&quot; and &quot;+str(j)+&quot;) or &quot;+str(k)+&quot;: &quot;+str((i&amp;j)|k)) print(str(i)+&quot; and (&quot;+str(j)+&quot; or &quot;+str(k)+&quot;): &quot;+str(i&amp;(j|k))) method3() . 0 and 0 or 0: 0 (0 and 0) or 0: 0 0 and (0 or 0): 0 0 and 0 or 1: 1 (0 and 0) or 1: 1 0 and (0 or 1): 0 0 and 1 or 0: 0 (0 and 1) or 0: 0 0 and (1 or 0): 0 0 and 1 or 1: 1 (0 and 1) or 1: 1 0 and (1 or 1): 0 1 and 0 or 0: 0 (1 and 0) or 0: 0 1 and (0 or 0): 0 1 and 0 or 1: 1 (1 and 0) or 1: 1 1 and (0 or 1): 1 1 and 1 or 0: 1 (1 and 1) or 0: 1 1 and (1 or 0): 1 1 and 1 or 1: 1 (1 and 1) or 1: 1 1 and (1 or 1): 1 . Linear Sequence of code . The order of executions is strictly from top to bottom. This is good for learning, but is typically a poor method for an Algorithm! This was my 1st exploration above. . Procedure (Function) . A Procedure is a set of code instructions that has been abstracted into logical parts. Each code abstraction is called &quot;Procedural Abstraction&quot;. . In Python, using procedures (def) means you are starting to write &quot;good&quot; code vs &quot;bad&quot; code, mostly in terms of reusability of logic. | A procedure needs to be activated or called, this is performed in the main selections above. | . Hacks . As we explore the algorithm Unit students will be designing lessons and homework. Each lesson will have Hacks. Here are some hacks that could go with the lesson above. The three weeks after Thanksgiving will be focused on this activity and build personal portfolio. . Try to build a Truth Table as shown above in Python, but switch to JavaScript... . Begin by showing understanding of problem using console.log, this problem can be done in Jupyter Notebook | Build a Truth Table in JavaScript showing output in HTML, this problem is best in FastPages | . Pick your Algorithmic hack, build in Python and JavaScript. Here are some ideas.. . Binary to Hexadecimal to Decimal conversions | Fibonacci | Palindrome | Other | . Come up with a Procedure/Function that show... . Data Abstraction | Procedural Abstraction | Algorithm using iteration and selection | Frontend / Backend, using an API and persistent storage | .",
            "url": "https://jasoxddd.github.io/FastProject2/2022/11/17/AP-logic-and-algos.html",
            "relUrl": "/2022/11/17/AP-logic-and-algos.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Big Idea 2 'Binary Numbers'",
            "content": "Binary Abstraction and Logic Gates . Concepts and Visualization Ideas . Multiply and Divide by 2 (Shift) . Shifting bits is a common computer operation Look for shift on w3schools . UI Concept/Design . n Right Shifts (divides by 2^n); n Left Shifts (mutliplies by 2^n) Add buttons for “«” and “ »” . Logic of Shift . . Elaboration of Shift . Arithmetic Shift . In an arithmetic shift, the bits that are shifted out of either end are discarded. In a left arithmetic shift, zeros are shifted in on the right; in a right arithmetic shift, the sign bit (the MSB in two’s complement) is shifted in on the left, thus preserving the sign of the operand. This example uses an 8-bit register, interpreted as two’s complement: In the first case, the leftmost digit was shifted past the end of the register, and a new 0 was shifted into the rightmost position. In the second case, the rightmost 1 was shifted out (perhaps into the carry flag), and a new 1 was copied into the leftmost position, preserving the sign of the number. . Unicode vs ASCII . Unicode can be UTF-8, 16 or 32, ASCII is preserved in Unicode. . Sample of Unicode characters. . UI Concept/Design . Original ASCII . The ASCII label in picture should be change based off of the type of evaluation you are doing. Bits displayed, label, and evaluation would be specific to evaluation type: . ASCII - 7 bits | UTF-8 | UTF-16 | UTF-32 | . Color Codes . Color code is a 24 bit abstraction. . 255 * 255 * 255 combinations of R, G, B . UI Design . by Anthony Vo 3 rows representing R, G, B Resulting color displayed in block . Logic Gates . Logic Gates can be simulated with 2 bits . Look for bitwise operators on w3schools . UI Concept . Logic Gates Establish check boxes for A / B on and off Show result of Boolean Expression using Gate visual . UI Design . by Kylie Scharf AB checkboxes with Submit button Table with Symbol, Description, and Result . Logic of Logic Gates . A logic gate can have two inputs (a,b) and by how changing these inputs it impacts the output(c). . There are four possible inputs: . 0 0 | 0 1 | 1 0 | 1 1 | . Understanding the output enables us to understand a logical expressions. All outputs are routed in Logic Gates (similar to how a language is routed in Latin). . AND is true for 1 1; NAND is true opposite of AND 0 0, 0 1, 1 0 | OR is true for 1 1, 0 1, 1 0, NOR is true opposite of OR 0 0 | XOR is true for 0 1, 1 0 | . Practical Application . . Unsigned Addition . Here we are requesting 3 rows of bits to simulate Math. This could be done with 4, 8, or 16 bits. . Initial UI Implementation . Action buttons for +1 and -1 Additional actions for Turn On and Turn Off . Unsigned Addition . . Signed Addition . Integers in most languages are int8, int16, int32, or int64. They typically reserve left most bit for sign. . Common concept for Integer Math . Positive number . Basic concept, but not typically used . Negative number . Inverting numbers, twos complement . Two’s complement allows adding for signed and unsigned numbers . Basic concept is to invert/negate bits to produce negative. This allows numbers to be added together for expected results. » and »&gt; have been adapted to handle signed and zero filled shifting. . Technical helpers . Algorithm in Jinja2 to limit Bits per row . 8 images per row by Kylie Scharf Modulo 8 algorithm add &lt;tr&gt; for every eight bits (code). . Binary Addition overview . CHAPTER 8 - Binary Addition and Two’s Complement Overview find by Val Wilson . Hacks .",
            "url": "https://jasoxddd.github.io/FastProject2/collegeboard/binary",
            "relUrl": "/collegeboard/binary",
            "date": " • Nov 16, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Blog of Night @ the Museum",
            "content": "This year was my first in-person Night at the Museum, and it was pretty fun! I arrived a bit late since I had a class prior, and I wasn’t able to see everything. Still, it was nice. . APCSA . I arrived at APCSA, there were a lot of good ones, and from what I can see there are a lot of quizzes, I played a couple of them. One of them is like an actual Kahoot quiz, so that’s pretty fun. The quiz showcased some questions at the right and options in colors at the right. When you get one right, you are able to get scores, with more streaks the more points. I played a couple rounds, and it was really nicely made. . Photography . I really like a lot of the photos, especially the ones that are of. I especially liked the black and white ones, they have a really nice atmosphere. This one about the sunset was pretty beautiful too, with the dark blue colors of the sky and the bright orange of the clouds and the setting sun. . 3D Animation . When I got here, the main tour is over, but I still saw all of the donuts and the rooms. One particular one is this one room render that was white on one side and all dark and green on the other. Really nice! I aslo liked the big display, which showed a women waking from her sleep, and then it shows the modeling process, and it really showed how much time went into the making . Future Projects . I would want to construct a card game at one of the pages, it will feature the normal cards with images and a set of rules and an AI that you can play against. I want to make that project. .",
            "url": "https://jasoxddd.github.io/FastProject2/2022/11/08/natm-post.html",
            "relUrl": "/2022/11/08/natm-post.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Blog of my Tri 1 Finals",
            "content": "Notice the lack of problems? That’s a reference to the fact that I got every question on the Tri 1 Finals correct without looking up anything. 50/50 let’s go .",
            "url": "https://jasoxddd.github.io/FastProject2/2022/11/07/test-blog.html",
            "relUrl": "/2022/11/07/test-blog.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Algorithms and Logic",
            "content": "Algorithm . An algorithm typically means &#39;code&#39; that solves a problem. Designing an algorithm often requires you to learn the Tech first and then consider how you design your code and algorithms. Code design can take many iterations. . Truth Tables . My topic for this blog is Truth Tables. The illustration that follows displays the results of logical operators AND, OR, XOR, NOT versus binary 1 and 0. The output produces a &#39;Truth Table&#39;. . Exploring Truth Tables operations . Exploration of this topic requires searching the language for logical operators, then figuring out how to display condition and test result. . Bitwise operations for Truth Tables typically represent 1 - True and 0 - False. | Logical expression in iteration and selection statements result in True or False | . My objective is Truth Tables. But in my exploration I did both Truth Table and Expression syntax . print(&quot;OR&quot;) print( &quot;1 | 0 = &quot;, 1 | 0) print( &quot;~(1 | 0) = &quot;, ~(1 | 0) % 2) # 1 is an integer, not a bit so remainder (modulo) does trick print(&quot;AND&quot;) print( &quot;1 &amp; 0 = &quot;, 1 &amp; 0) print( &quot;~(1 &amp; 0) = &quot;, ~(1 &amp; 0) % 2) # modulo again print(&quot;XOR&quot;) print( &quot;1 ^ 1 = &quot;, 1 ^ 1) print() # Boolean Tests print(&quot;Boolean OR&quot;) print( &quot;True or False = &quot;, True or False) print(&quot;Boolean AND&quot;) print( &quot;True and False = &quot;, True and False) print(&quot;Boolean XOR&quot;) print( &quot;True != True = &quot;, True != True) . OR 1 | 0 = 1 ~(1 | 0) = 0 AND 1 &amp; 0 = 0 ~(1 &amp; 0) = 1 XOR 1 ^ 1 = 0 Boolean OR True or False = True Boolean AND True and False = False Boolean XOR True != True = True . Algorithm 1 . This algorithm focuses on small reusable procedures/functions (def) for bitwise tests. From the exploratory experience above it seems like a lot of typing would be necessary to represent possibilities. . import operator # functions for all comparisons, logical operations, mathematical operations and sequence operations # builds truth table def truth_options(): a_opts = [1, 0] b_opts = [1, 0] return [(a, b) for a in a_opts for b in b_opts] # double for permutes options # provides equivalent function lookup for bitwise using operator functions def bitwise_options(op): ops = {&#39;&amp;&#39;: operator.and_, &#39;|&#39;: operator.or_, &#39;^&#39;: operator.xor} return ops[op] # control/eval for bitwise operators, selection is based on number of operators def bitwise_eval(op, op2=&quot;&quot;): if op2 == &quot;&quot;: op_func = bitwise_options(op) print(f&quot;Bitwise {op}&quot;) for a, b in truth_options(): print(f&quot;{a} {op} {b} is {op_func(a, b)}&quot;) else: op2_func = bitwise_options(op2) print(f&quot;Bitwise {op}&quot;) for a, b in truth_options(): print(f&quot;{op}({a} {op2} {b}) is {(1, 0)[op2_func(a, b)]}&quot;) # opposite: index 0 returns 1, index 1 return 0 def method1(): bitwise_eval(&quot;&amp;&quot;) bitwise_eval(&quot;NAND&quot;, &quot;&amp;&quot;) bitwise_eval(&quot;|&quot;) bitwise_eval(&quot;NOR&quot;, &quot;|&quot;) bitwise_eval(&quot;^&quot;) # call bitwise evaluation of truth table if __name__ == &quot;__main__&quot;: print(&quot;***** Method 1 *****&quot;) method1() . ***** Method 1 ***** Bitwise &amp; 1 &amp; 1 is 1 1 &amp; 0 is 0 0 &amp; 1 is 0 0 &amp; 0 is 0 Bitwise NAND NAND(1 &amp; 1) is 0 NAND(1 &amp; 0) is 1 NAND(0 &amp; 1) is 1 NAND(0 &amp; 0) is 1 Bitwise | 1 | 1 is 1 1 | 0 is 1 0 | 1 is 1 0 | 0 is 0 Bitwise NOR NOR(1 | 1) is 0 NOR(1 | 0) is 0 NOR(0 | 1) is 0 NOR(0 | 0) is 1 Bitwise ^ 1 ^ 1 is 0 1 ^ 0 is 1 0 ^ 1 is 1 0 ^ 0 is 0 . Truth Table - Algorithm 2 . This algorithm above seemed to me to lose clarity with all the functions. The second attempt focuses on truth tables as a linear sequence, with loops for required repetitions. This seemed more understandable to me than my 1st attempt. . def method2(): truth_table = [[1,1], [1,0], [0,1], [0,0]] for a, b in truth_table: print(f&quot;and {a} &amp; {b}: {a &amp; b}&quot;) for a, b in truth_table: print(f&quot;nand ~({a} &amp; {b}): {((a &amp; b) + 1) % 2}&quot;) # warning: ~ negates entire integer without modulo for a, b in truth_table: print(f&quot;or {a} | {b}: {a | b}&quot;) for a, b in truth_table: print(f&quot;nor ~({a} | {b}): {((a | b) + 1) % 2}&quot;) # warning: see above for a, b in truth_table: print(f&quot;xor {a} ^ {b}: {a ^ b}&quot;) # call bitwise evaluation of truth table if __name__ == &quot;__main__&quot;: print(&quot;***** Method 2 *****&quot;) method2() . ***** Method 2 ***** and 1 &amp; 1: 1 and 1 &amp; 0: 0 and 0 &amp; 1: 0 and 0 &amp; 0: 0 nand ~(1 &amp; 1): 0 nand ~(1 &amp; 0): 1 nand ~(0 &amp; 1): 1 nand ~(0 &amp; 0): 1 or 1 | 1: 1 or 1 | 0: 1 or 0 | 1: 1 or 0 | 0: 0 nor ~(1 | 1): 0 nor ~(1 | 0): 0 nor ~(0 | 1): 0 nor ~(0 | 0): 1 xor 1 ^ 1: 0 xor 1 ^ 0: 1 xor 0 ^ 1: 1 xor 0 ^ 0: 0 . Linear Sequence of code . The order of executions is strictly from top to bottom. This is good for learning, but is typically a poor method for an Algorithm! This was my 1st exploration above. . Procedure (Function) . A Procedure is a set of code instructions that has been abstracted into logical parts. Each code abstraction is called &quot;Procedural Abstraction&quot;. . In Python, using procedures (def) means you are starting to write &quot;good&quot; code vs &quot;bad&quot; code, mostly in terms of reusability of logic. | A procedure needs to be activated or called, this is performed in the main selections above. | . Hacks . As we explore the algorithm Unit students will be designing lessons and homework. Each lesson will have Hacks. Here are some hacks that could go with the lesson above. The three weeks after Thanksgiving will be focused on this activity and build personal portfolio. . Try to build a Truth Table as shown above in Python, but switch to JavaScript... . Begin by showing understanding of problem using console.log, this problem can be done in Jupyter Notebook | Build a Truth Table in JavaScript showing output in HTML, this problem is best in FastPages | . Pick your Algorithmic hack, build in Python and JavaScript. Here are some ideas.. . Binary to Hexadecimal to Decimal conversions | Fibonacci | Palindrome | Other | . Come up with a Procedure/Function that show... . Data Abstraction | Procedural Abstraction | Algorithm using iteration and selection | Frontend / Backend, using an API and persistent storage | .",
            "url": "https://jasoxddd.github.io/FastProject2/2022/11/07/AP-logic-and-algos.html",
            "relUrl": "/2022/11/07/AP-logic-and-algos.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Fetch of Youtube data with RapidAPI",
            "content": "A table created using the fetch function from javascript. ssjsjsj . . Thumbnail Title Creator Views Length .",
            "url": "https://jasoxddd.github.io/FastProject2/data/youtube",
            "relUrl": "/data/youtube",
            "date": " • Oct 15, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Simple Youtube API",
            "content": "Youtube API . Below is the python code that I used to extract data from the Youtube API . import requests # imports the module necessary for API import json # Below is the constants method = &#39;GET&#39; url = &#39;https://youtube138.p.rapidapi.com/search/&#39; params = { &quot;q&quot;: &#39;despacito&#39;, &quot;hl&quot;: &#39;en&#39;, &quot;gl&quot;: &#39;US&#39; } headers = { &#39;X-RapidAPI-Key&#39;: &#39;6615470177msh2eb9d9776c82332p163317jsn65585d1a22d9&#39;, &#39;X-RapidAPI-Host&#39;: &#39;youtube138.p.rapidapi.com&#39; } # Pull the response = requests.request(method, url, headers=headers,params=params) print(response.text) # End Rapid API Code json = response.json() . {&#34;contents&#34;:[{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /8Lwf4LCR2VmxD2JKiozRu7Lo2jGdnhRs42NawHmMN_xJ8TdW-30e3J9DhumEksivp1Esog4A=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCxoq-PAQeAdk_zyg8YS0JqA&#34;,&#34;title&#34;:&#34;Luis Fonsi&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;#LuisFonsi #Despacito #Imposible #Calypso #EchamelaCulpa #NadaEsImposible #NothingisImpossible #LF Music video by Luis u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:282,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /kJQP7kiw5Fk /mqdefault_6s.webp?du=3000&amp;sqp=CMSGk5oG&amp;rs=AOn4CLCGFxf7j81b92IfnQiqr-mJS45ZzQ&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:7983708275},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /kJQP7kiw5Fk /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBCg9eudi8DoM9M-qjPgJBGGkuIgA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /kJQP7kiw5Fk /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDMnrGS7UUfb2FyiKXj-RL4eGknVg&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi - Despacito ft. Daddy Yankee&#34;,&#34;videoId&#34;:&#34;kJQP7kiw5Fk&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /mEz4CxDP2HkZBDngPa9WDxVfYtcvBPgXPcT2efuF-iKdu2cCaNQmEFX7Q7KheT2TXUV5qF_H=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /taznetwork&#34;,&#34;channelId&#34;:&#34;UCJ6ERWrxZzb9Ua3oeRcIe0g&#34;,&#34;title&#34;:&#34;Taz Network&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Luis Fonsi u2012 Despacito Lyrics u270d ufe0f Ay, u00a1Fonsi! u00a1D.Y.! Ohhh, oh, no, oh, no, oh Hey, yeah! Dididiri Daddy, go! S u00ed, sabes que ya u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:241,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /gm3-m2CFVWM /mqdefault_6s.webp?du=3000&amp;sqp=CKfokpoG&amp;rs=AOn4CLDc-nOoXzvef6O-ZYdjH7u0Tid6Lg&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:25797923},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /gm3-m2CFVWM /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBdnMRJ4yJ6vHumS_nU46yxFLqRjQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /gm3-m2CFVWM /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDDVqxUl1l2I_vZGdTz650GR7VsyQ&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi u2012 Despacito (Lyrics / Lyric Video) ft. Daddy Yankee&#34;,&#34;videoId&#34;:&#34;gm3-m2CFVWM&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu9h4dcjYLH6dO_nC56ZnIWI8R0XiNURV7cz5DPgkQ=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /MasterDumb&#34;,&#34;channelId&#34;:&#34;UC_s5dj6ILpVm3KdSHwpx7zw&#34;,&#34;title&#34;:&#34;MasterDumb&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;No copyright infringement intended. For entertainment purposes only. All rights belong to the artist. Promo only Masterdumb u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:251,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /dr_GAJZviR0 /mqdefault_6s.webp?du=3000&amp;sqp=CJiIk5oG&amp;rs=AOn4CLCMMBIeljTjswZmyJBtUVB_tjlrGg&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:25451499},&#34;thumbnails&#34;:[{&#34;height&#34;:270,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /dr_GAJZviR0 /hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD5YIkR5KbMQOxTcaRoIxBF9Vm_6w&#34;,&#34;width&#34;:480}],&#34;title&#34;:&#34;Luis Fonsi, Daddy Yankee - Despacito ft. Justin Bieber&#34;,&#34;videoId&#34;:&#34;dr_GAJZviR0&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /8Lwf4LCR2VmxD2JKiozRu7Lo2jGdnhRs42NawHmMN_xJ8TdW-30e3J9DhumEksivp1Esog4A=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCxoq-PAQeAdk_zyg8YS0JqA&#34;,&#34;title&#34;:&#34;Luis Fonsi&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Luis Fonsi Despacito ft. Daddy Yankee (audio) LETRA: u00a1Ay! Fonsi DY Oh-oh Oh no, oh no Oh, eh-yeh (Daddy) Go! S u00ed, sabes que u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:229,&#34;movingThumbnails&#34;:null,&#34;publishedTimeText&#34;:&#34;4 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:1058091},&#34;thumbnails&#34;:[{&#34;height&#34;:270,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /2bHBUs-k3ac /hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLA02SrTWMxpzWcz0nTBfWQPiUsKjQ&#34;,&#34;width&#34;:480}],&#34;title&#34;:&#34;Luis Fonsi Despacito ft. Daddy Yankee (audio)&#34;,&#34;videoId&#34;:&#34;2bHBUs-k3ac&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /8Lwf4LCR2VmxD2JKiozRu7Lo2jGdnhRs42NawHmMN_xJ8TdW-30e3J9DhumEksivp1Esog4A=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCxoq-PAQeAdk_zyg8YS0JqA&#34;,&#34;title&#34;:&#34;Luis Fonsi&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Provided to YouTube by Universal Music Group Despacito u00b7 Luis Fonsi Despacito u2117 2017 Universal Music Latino Released on: u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:229,&#34;movingThumbnails&#34;:null,&#34;publishedTimeText&#34;:null,&#34;stats&#34;:{&#34;views&#34;:963742},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /t3IyUATcAbE /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLB8rLazbFNSKES97_IJvr6SM7ibsA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /t3IyUATcAbE /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLA8QW4FxJviimyOoDLmSbRD3g9-tw&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Despacito&#34;,&#34;videoId&#34;:&#34;t3IyUATcAbE&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /PXmGMkaOj09GwOg25CTAcctjhDW6AoufmBlykGN8ACK9llYlbReoBfyqqzTdkAwaXLwFlNv6q8U=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /channel /UCdR2fnIkKmDpAe7vDnVEBVQ&#34;,&#34;channelId&#34;:&#34;UCdR2fnIkKmDpAe7vDnVEBVQ&#34;,&#34;title&#34;:&#34;Fans Tiktok&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:null,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:14,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /_8NRJEAb4-s /mqdefault_6s.webp?du=3000&amp;sqp=CM76kpoG&amp;rs=AOn4CLDiQSri2-cfYZdIKoMgtLLtO5Bzmw&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 months ago&#34;,&#34;stats&#34;:{&#34;views&#34;:38965168},&#34;thumbnails&#34;:[{&#34;height&#34;:720,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /_8NRJEAb4-s /hq720_2.jpg?sqp=-oaymwEdCJYDENAFSFXyq4qpAw8IARUAAIhCcAHAAQbQAQE=&amp;rs=AOn4CLDNHzpzX_Is1LcknUd9-h5bymStmw&#34;,&#34;width&#34;:406}],&#34;title&#34;:&#34;(Despacito Magik Edit) New Chaljch Which one is more beautiful ud83e udd14 #tiktok&#34;,&#34;videoId&#34;:&#34;_8NRJEAb4-s&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /mEz4CxDP2HkZBDngPa9WDxVfYtcvBPgXPcT2efuF-iKdu2cCaNQmEFX7Q7KheT2TXUV5qF_H=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /taznetwork&#34;,&#34;channelId&#34;:&#34;UCJ6ERWrxZzb9Ua3oeRcIe0g&#34;,&#34;title&#34;:&#34;Taz Network&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Lyrics for Despacito - Justin Bieber [Intro: Justin Bieber] Come on over in my direction So thankful for that, it&#39;s such a blessin&#39;, yeah u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:231,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /whwe0KD_rGw /mqdefault_6s.webp?du=3000&amp;sqp=CNDzkpoG&amp;rs=AOn4CLB8AmM2nFDhaI4LmlK2-XxOvjtP_Q&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:348605411},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /whwe0KD_rGw /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAHpsL01E241DCvjgTvwUb2KlYvgQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /whwe0KD_rGw /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLB5VYQskPIpD-6g0uT7d1wYIhbVTg&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Justin Bieber u2013 Despacito (Lyrics) ud83c udfa4 ft. Luis Fonsi &amp; Daddy Yankee [Pop]&#34;,&#34;videoId&#34;:&#34;whwe0KD_rGw&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu-a8XFPIZ0-jBW6W8vSo22fMb3PgXQOT4rBlFPJFA=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /ThevoiceGlobal&#34;,&#34;channelId&#34;:&#34;UCJYtYkiGldqX6Ne938j-k2g&#34;,&#34;title&#34;:&#34;The Voice Global&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;The single &#34;Despacito &#34; has made history as the most frequently streamed song of all time. Therefore, we created a compilation u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:360,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /l6xuHunzqXk /mqdefault_6s.webp?du=3000&amp;sqp=CM2ck5oG&amp;rs=AOn4CLA1xa1vzLCsdkZdJCcYfDN7ZW5u3Q&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;3 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:5097354},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /l6xuHunzqXk /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBMaenQtNjDLaanEEA8VsqYc4SkFg&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /l6xuHunzqXk /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAWv0O4PFHKfZIlVQUg5gXKBQFmjQ&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;SURPRISING DESPACITO covers in The Voice&#34;,&#34;videoId&#34;:&#34;l6xuHunzqXk&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /VXVR9IKCRGRAtjdXcul8EcB2MoT1ZC7d8YMlkzVfB8Iuulf3WK5HA_h6BihPBe-OnpS4Fufrag=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCrDkAvwZum-UTjHmzDI2iIw&#34;,&#34;title&#34;:&#34;officialpsy&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;#PSY # uc2f8 uc774 #GANGNAMSTYLE # uac15 ub0a8 uc2a4 ud0c0 uc77c More about PSY@ http: / /www.youtube.com /officialpsy u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:253,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /9bZkp7q19f0 /mqdefault_6s.webp?du=3000&amp;sqp=CJr7kpoG&amp;rs=AOn4CLA6Tkr0my6OY1Bpm3vnD9q4h9Magg&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;10 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:4565812996},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /9bZkp7q19f0 /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC2ZQhOjkk_NTkfURgVv3PC9LljiA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /9bZkp7q19f0 /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCcjOO401gtXMFAu0GngeIwZOkO-Q&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;PSY - GANGNAM STYLE( uac15 ub0a8 uc2a4 ud0c0 uc77c) M /V&#34;,&#34;videoId&#34;:&#34;9bZkp7q19f0&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ZDUwYCA5WCGX1H46N10v4-rtfQu7V-kCKDj1lqEA75Q1jtyc_3Ls3m_YO8vkWx6LjyCSpeZ4=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /channel /UCgRHHDRlVfY7hWsCSaS7P4w&#34;,&#34;channelId&#34;:&#34;UCgRHHDRlVfY7hWsCSaS7P4w&#34;,&#34;title&#34;:&#34; u03c7 u03c1 u03b7 u03c3 u03c4 u03bf u03c2 u03b9 u03c9 u03b1 u03bd u03bd u03bf u03c5&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:null,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:508,&#34;movingThumbnails&#34;:null,&#34;publishedTimeText&#34;:&#34;2 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:9889097},&#34;thumbnails&#34;:[{&#34;height&#34;:270,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /dDtSsPRkxhE /hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD4r5EmI7EYxFTpeoiYt0ckycqZ8Q&#34;,&#34;width&#34;:480}],&#34;title&#34;:&#34;Despacito Dagostino Megamix Gigi Dag Modern Talking Cyndi Lauper Haddaway Luis Fonsi CyberBEATzz&#34;,&#34;videoId&#34;:&#34;dDtSsPRkxhE&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu_YL1E4Ki4V23BzH-J7qGBKDpI504KfrGukNoDqOg=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /Sermktena&#34;,&#34;channelId&#34;:&#34;UCN4XrI5xtgUlthdBsZE2Cjw&#34;,&#34;title&#34;:&#34;The Voice Legendary&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Names Contestants AND Songs: 1. Harrison Craig: &#34;Broken Vow &#34; 2. Ivan Stoyanov: &#34;Mercy &#34; 3. Naranchimeg.A: &#34;Piece by Piece &#34; 4.&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:1055,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /1Gv9uWFyuSI /mqdefault_6s.webp?du=3000&amp;sqp=CNDzkpoG&amp;rs=AOn4CLCFZCeSPVncsIuXxiCdC9mrqPpQYA&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;4 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:79457083},&#34;thumbnails&#34;:[{&#34;height&#34;:270,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /1Gv9uWFyuSI /hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDHMTf1fF_yZDf3y1ZrXzMhvP0w6A&#34;,&#34;width&#34;:480}],&#34;title&#34;:&#34;Top 10 performance Shocked coaches in The voice Audition 2018&#34;,&#34;videoId&#34;:&#34;1Gv9uWFyuSI&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu84cKgxyDPFJg6bB5-7-zHcDIrW01G7P66UzFJJLg=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /user /MusicTalentNow&#34;,&#34;channelId&#34;:&#34;UCDnEa2HC2eeT-cN3pAKnNTw&#34;,&#34;title&#34;:&#34;Top Viral Talent&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Holly Tandy - The X Factor UK 2017 - Full Audition Check out other auditions: u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:395,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /auf3-2wJacU /mqdefault_6s.webp?du=3000&amp;sqp=CIDYkpoG&amp;rs=AOn4CLA5ObLrdRY5kF1H16njMMXd1HxpOA&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;4 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:12001703},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /auf3-2wJacU /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBt041CWXgJFVGUlvDXTU6bUQoa3Q&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /auf3-2wJacU /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCx87o_jcMIGhaWj70PD-VBCQDFxQ&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;She Blows Everyone Away With DESPACITO Cover on X Factor | Live Show | The X Factor UK 2017&#34;,&#34;videoId&#34;:&#34;auf3-2wJacU&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /e64gAQf2QrACrdxA2FZEX0sDEwS7-17Wes8Fqdx8aLZeVySSTWRQRKTOHXNB0Q4jAO2-khvdqA=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UC-6czyMkxDi8E8akPl0c7_w&#34;,&#34;title&#34;:&#34;Enrique Iglesias&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Watch Enrique&#39;s new music video ME PASE: https: / /www.youtube.com /watch?v=JE9urbO7bNU On Tour with Ricky Martin and u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:287,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /NUsoVlDFqZg /mqdefault_6s.webp?du=3000&amp;sqp=CKDskpoG&amp;rs=AOn4CLDinGYgFx6bX0SESw51ml85t-3Ylw&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;8 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:3277518278},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /NUsoVlDFqZg /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC2DhAav-5VjyevId13lvNqMiX8Zg&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /NUsoVlDFqZg /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDcY66CwdRId3Prg6Wr6SB-cqxvRQ&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Enrique Iglesias - Bailando ft. Descemer Bueno, Gente De Zona (Espa u00f1ol)&#34;,&#34;videoId&#34;:&#34;NUsoVlDFqZg&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu8fFq2gGv13CF3cMp7x5ESBx-fJfWNwdczxbvpb=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /channel /UCCUVtsfEANJxpqBxPpPK1Mw&#34;,&#34;channelId&#34;:&#34;UCCUVtsfEANJxpqBxPpPK1Mw&#34;,&#34;title&#34;:&#34;PICTURE NEWS&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Cristiano Ronaldo vs Lionel Messi Transformation 2018 More Videos: The Rock Transformation 2018 | From 1 To 46 Years Old u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:386,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /5xyy2m_r_GM /mqdefault_6s.webp?du=3000&amp;sqp=CMbykpoG&amp;rs=AOn4CLAhvPxsHNr14rTtrwzS0VdsIgulKg&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;3 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:23573740},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /5xyy2m_r_GM /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAG6VPhp_6Vix2zD299EwLTYWVntQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /5xyy2m_r_GM /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAHG76H6kdyhKamEgUFVmkr0thUNA&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Cristiano Ronaldo vs Lionel Messi Transformation 2018 | Who is better?&#34;,&#34;videoId&#34;:&#34;5xyy2m_r_GM&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /8Lwf4LCR2VmxD2JKiozRu7Lo2jGdnhRs42NawHmMN_xJ8TdW-30e3J9DhumEksivp1Esog4A=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCxoq-PAQeAdk_zyg8YS0JqA&#34;,&#34;title&#34;:&#34;Luis Fonsi&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Music video by Luis Fonsi, Demi Lovato performing u00c9chame La Culpa. (C) 2017 UMG Recordings, Inc. http: / /vevo.ly /FgY9ro u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:211,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /TyHvyGVs42U /mqdefault_6s.webp?du=3000&amp;sqp=CLjykpoG&amp;rs=AOn4CLDerXOazTUQJ36SvSGxvRFhOsd--w&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;4 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:2226663517},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /TyHvyGVs42U /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC3sLxZ9CZdlOjy6HeaSTIe_CitAg&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /TyHvyGVs42U /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDHJXDrIoAXY2vlOohhGHil9nq5Sw&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi, Demi Lovato - u00c9chame La Culpa (Video Oficial)&#34;,&#34;videoId&#34;:&#34;TyHvyGVs42U&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu-2aHsgCF1dxC_vcWzZmsBsKZF714FY6s0UFVAwJQ=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /channel /UC6E6cSSQiC_bqaGoqauAVrg&#34;,&#34;channelId&#34;:&#34;UC6E6cSSQiC_bqaGoqauAVrg&#34;,&#34;title&#34;:&#34;jovy music&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;For those who kno hindi: Devnagri Luis Fonsi 1 = u0938 u093f u0938 u093e u092c u0947 u091c u0915 u0947 u092f u093e u092f u0947 u0935 u0942 u0928 u0930 u093e u0924 u094b u092e u093f u0930 u093e u0928 u094d u0926 u094b u0924 u0947 u0924 u0947 u0928 u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:263,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /B3_aSQWse1c /mqdefault_6s.webp?du=3000&amp;sqp=CMr7kpoG&amp;rs=AOn4CLBxvO9jLta5ajOTdaV-EUO4R21imw&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:4683804},&#34;thumbnails&#34;:[{&#34;height&#34;:270,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /B3_aSQWse1c /hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAfyc8hRAYg-VRGQW89d02ekgebjA&#34;,&#34;width&#34;:480}],&#34;title&#34;:&#34;Learn to Sing Despacito Slowed Down Boyce Avenue Version Spanish&#34;,&#34;videoId&#34;:&#34;B3_aSQWse1c&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /-kQJspgMMLTMI0EwBKBiystb-5ldWzDEZTkzS1ZRsU5d7lCzzFq8J_Jgp3VHK4Y9UOIA6lVV=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCfxLuDIVfwArsz5waYMMLDQ&#34;,&#34;title&#34;:&#34;Gerardo Ortiz&#34;},&#34;badges&#34;:[&#34;4K&#34;,&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Music video by Gerardo Ortiz performing Tranquilito (Official Video). (P) 2021 Badsin Entertainment LLC http: / /vevo.ly /ZjQLDF.&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:189,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /bibIWBTD_tE /mqdefault_6s.webp?du=3000&amp;sqp=CN_mkpoG&amp;rs=AOn4CLBwIOQoM0EDCH03Wmz3IF7Jg4LLpw&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;1 year ago&#34;,&#34;stats&#34;:{&#34;views&#34;:73592155},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /bibIWBTD_tE /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDgHUUGofpYASvTPoxVmz2vN9dJxw&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /bibIWBTD_tE /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDSLmV2F0HHDQYRm0bVfBGTp2Baxg&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Gerardo Ortiz - Tranquilito (Official Video)&#34;,&#34;videoId&#34;:&#34;bibIWBTD_tE&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /8Lwf4LCR2VmxD2JKiozRu7Lo2jGdnhRs42NawHmMN_xJ8TdW-30e3J9DhumEksivp1Esog4A=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCxoq-PAQeAdk_zyg8YS0JqA&#34;,&#34;title&#34;:&#34;Luis Fonsi&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34; u00a9 2017 Universal Music Latin Entertainment under exclusive license to Republic Records (RBMG /Def Jam Recordings) Music u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:229,&#34;movingThumbnails&#34;:null,&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:673355591},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /72UO0v5ESUo /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD9eRVhsetOGUVsmlaEWQlqiC-jyQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /72UO0v5ESUo /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDXTg7KrSv3MFfoZNZyIhOYFglAMA&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi, Daddy Yankee - Despacito (Remix) (Official Audio) ft. Justin Bieber&#34;,&#34;videoId&#34;:&#34;72UO0v5ESUo&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /Lp9cu-xgKL0QYxdJ268CaZ63SrmODmZT2uRJjwPHvoeLOvd1LLNJWUd45tYR_VW9z5APPIPJpw=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /fallontonight&#34;,&#34;channelId&#34;:&#34;UC8-Th83bH_thdKZDJCrn88g&#34;,&#34;title&#34;:&#34;The Tonight Show Starring Jimmy Fallon&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Music guest Luis Fonsi performs &#34;Despacito &#34; for the Tonight Show audience. Subscribe NOW to The Tonight Show Starring Jimmy u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:247,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /zrJtFy51fRo /mqdefault_6s.webp?du=3000&amp;sqp=CMqjk5oG&amp;rs=AOn4CLAajJnXCeZzvgKsppW1UWppyDovkw&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:17671100},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /zrJtFy51fRo /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCUqrotW32dSX_hoaS0vlLqvcE4vQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /zrJtFy51fRo /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBk9q0iZfgPvsBUlwKWA4f88u7TDw&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi: Despacito&#34;,&#34;videoId&#34;:&#34;zrJtFy51fRo&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /MsIpNJXzivOLzOhiS8fQ7Erm-Lby630NXjdNWUUfvuyzdpnRKs_8v7Ry9DJZilYmgU6auOw2EA=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /channel /UCu39pJCWRVFUgR3tH50Vi6Q&#34;,&#34;channelId&#34;:&#34;UCu39pJCWRVFUgR3tH50Vi6Q&#34;,&#34;title&#34;:&#34;E Hits&#34;},&#34;badges&#34;:[&#34;4K&#34;],&#34;descriptionSnippet&#34;:&#34;Luis Fonsi - Despacito (Letra /Lyrics) ft. Daddy Yankee Activa las notificaciones para mantenerte actualizado con nuevos videos u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:390,&#34;movingThumbnails&#34;:null,&#34;publishedTimeText&#34;:&#34;2 months ago&#34;,&#34;stats&#34;:{&#34;views&#34;:294904},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /Vnngj_l_J6M /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLA40quCBXnDyD-AjP-_DdcCuZp7lw&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /Vnngj_l_J6M /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLB5TZN8KxvLSPwvG6pvGX6seSDs_w&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi - Despacito (Letra /Lyrics) ft. Daddy Yankee&#34;,&#34;videoId&#34;:&#34;Vnngj_l_J6M&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /Ulu-4FEJmArHTaXtIpT2L6mhGJZ6kkgQvYT0TiJ1TxzF5xExuyv_s2Db1JBq4_AOpDLUdigiug=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /c /KIANO7HDi&#34;,&#34;channelId&#34;:&#34;UCX4Kvq7rjEvEeFG-DMRxrHw&#34;,&#34;title&#34;:&#34;KIANO7HD&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Cristiano Ronaldo (2013-14) u2022 Real Madrid u2022 Dribbling u2022 Showboating u2022 Free Kicks u2022 GOALS u00b7 u00b7 u00b7 u00b7 u00b7 u00b7 u00b7 SUBSCRIBE u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:259,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /KafZCpAp82Q /mqdefault_6s.webp?du=3000&amp;sqp=CKCLk5oG&amp;rs=AOn4CLAxk4bP-spnjQfU1S3heXIp51cADQ&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;4 months ago&#34;,&#34;stats&#34;:{&#34;views&#34;:117289},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /KafZCpAp82Q /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDmJ1BU4N0YFt7M1qNxOrXYcbV7KQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /KafZCpAp82Q /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCRDD2A8Villrp9Sq1TggBBi0_6hw&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Cristiano Ronaldo u25ba &#34;DESPACITO &#34; - Luis Fonsi u2022 Real Madrid Skills &amp; Goals 2014 | HD&#34;,&#34;videoId&#34;:&#34;KafZCpAp82Q&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /Az0dEsZTm3fSiPwHaMb2Beu3qMpQQrzg6WLmRUcxdg2PPlfk1OTEVC9y7HbVW6QHqY02WtdSsw=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /channel /UCJfM6xL3ApakncwWEb3EW3Q&#34;,&#34;channelId&#34;:&#34;UCJfM6xL3ApakncwWEb3EW3Q&#34;,&#34;title&#34;:&#34;Good Vibes Only &#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Luis Fonsi - Despacito (Lyrics) Luis Fonsi - Despacito (Lyrics) Luis Fonsi - Despacito (Lyrics) Keep your vibes with this: u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:293,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /uVrG7KPmrQo /mqdefault_6s.webp?du=3000&amp;sqp=CLCGk5oG&amp;rs=AOn4CLBO0uJgmdsblOsUVDf-zQJZC5wY4g&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 months ago&#34;,&#34;stats&#34;:{&#34;views&#34;:372293},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /uVrG7KPmrQo /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBIhyentDZsJALG-4i6oyYhla5psA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /uVrG7KPmrQo /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBfSMXwblhvaodOELWfbJsD8eVthQ&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi - Despacito (Lyrics)&#34;,&#34;videoId&#34;:&#34;uVrG7KPmrQo&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /hhTYkZ85XfQMrlB0F5WDws5SabkCDOZQMq07x9x4T2o0Fqxs5e2FLW1fXXT3IPEQ2N4RqSd7OB8=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /channel /UCoeu6do5WPyhKYkwGk83pVg&#34;,&#34;channelId&#34;:&#34;UCoeu6do5WPyhKYkwGk83pVg&#34;,&#34;title&#34;:&#34;Crusher 21&#34;},&#34;badges&#34;:[&#34;New&#34;],&#34;descriptionSnippet&#34;:&#34;In this video I made a clash royale song /diss track because I promised I would at 25k likes This is a mixed song, half of the song is u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:244,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /UL-aEOvkPaM /mqdefault_6s.webp?du=3000&amp;sqp=CMiFk5oG&amp;rs=AOn4CLAZ6xcA8PuiDPH2aGqheBGVEpZQQA&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;4 days ago&#34;,&#34;stats&#34;:{&#34;views&#34;:82226},&#34;thumbnails&#34;:[{&#34;height&#34;:270,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /UL-aEOvkPaM /hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDTbR__FcCBek_rP6mfZozintBmDw&#34;,&#34;width&#34;:480}],&#34;title&#34;:&#34;Clash royale diss track ud83d udd25 (Despacito parody)&#34;,&#34;videoId&#34;:&#34;UL-aEOvkPaM&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /0GVrTVuuFJtAdtlI8kgX4SizbhDgFfuLn7ibmBYbpaH3VD0GXNDIV66e_Ixi8ELZquPGTM5jsg=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /channel /UCko63Qad8yL776pv820kmgg&#34;,&#34;channelId&#34;:&#34;UCko63Qad8yL776pv820kmgg&#34;,&#34;title&#34;:&#34;Fresh Vibes &#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;LuisFonsi, #Despacito, #lyricsDespacito, #Despacitolyrics, #LuisFonsiDespacito, #DespacitoLuisFonsi, u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:229,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /uCm2gedyaWw /mqdefault_6s.webp?du=3000&amp;sqp=CJCQk5oG&amp;rs=AOn4CLAtem8It37riXg6TsoJARs1HG66PQ&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;3 months ago&#34;,&#34;stats&#34;:{&#34;views&#34;:347},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /uCm2gedyaWw /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCET8mVbyL4lgor9iOx5LEHO2vTKA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /uCm2gedyaWw /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBvFlJ1B9i2G-S3NPpoxgr2Lo4B3g&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi - Despacito (Lyrics)&#34;,&#34;videoId&#34;:&#34;uCm2gedyaWw&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /7oCPt7VmM7dyshmzKEOqNWkPufPQ6cB-jE-LqiVWnw92OGuVydAuvPqKPHMA3egK0gcRjJNk9w=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /RapazMalvado&#34;,&#34;channelId&#34;:&#34;UCwTt-re6KXUv6Qm425AqvIQ&#34;,&#34;title&#34;:&#34;Rapaz Malvado&#34;},&#34;badges&#34;:[&#34;New&#34;],&#34;descriptionSnippet&#34;:&#34;Benfica VS Paris Saint German, todos diziam que o Sport Lisboa e Benfica iria ser humilhado e afinal... DEMONSTROU FOR u00c7A !&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:157,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /sZ_vS3shFBE /mqdefault_6s.webp?du=3000&amp;sqp=CJHlkpoG&amp;rs=AOn4CLDYgbiPXu5t7n2PS3D957AB_w-ZiQ&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;4 days ago&#34;,&#34;stats&#34;:{&#34;views&#34;:68219},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /sZ_vS3shFBE /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAPcSUT6sWG8YHUf2uEuKv21haQgg&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /sZ_vS3shFBE /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCCxX9xrGuUtq8xz8K8P_dFJPMKjg&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34; u266b AH POIS u00c9| BENFICA VS PSG| PAR u00d3DIA- DESPACITO |&#34;,&#34;videoId&#34;:&#34;sZ_vS3shFBE&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /bPtiuuop9_2Y3JQ04C6LS16clDGE5Vp8870MROkYIcrNxzelqMVYRTu5Y4EPhon7DnkIkS7wBw=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCCVKuOs9Wr2JSLXhT2Z-j9Q&#34;,&#34;title&#34;:&#34;Feeling Off&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Luis Fonsi &amp; Despacito (Lyrics / Lyric Video) ft. Daddy Yankee Don&#39;t forget to subscribe and turn on notifications! You can see u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:283,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /9MeAh-GdYoA /mqdefault_6s.webp?du=3000&amp;sqp=COCOk5oG&amp;rs=AOn4CLD4WIpo9ryvep5vJ15_mof3zkhPlA&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 months ago&#34;,&#34;stats&#34;:{&#34;views&#34;:8080},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /9MeAh-GdYoA /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC81bA92EUK9xxWxan5ckRYV-P7OQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /9MeAh-GdYoA /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBOAdrSdYpuJbhiybuBj0LqEFh58g&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi &amp; Despacito (Lyrics / Lyric Video) ft. Daddy Yankee&#34;,&#34;videoId&#34;:&#34;9MeAh-GdYoA&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /Bom8nHy9dZWJYju5JKDFHmSM_0Gsg4H0T8MFa5PFnDxuQq4o7dBcfyYnSmyrUjamYoIKER6WIDQ=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCTpVFH82bEU1F7kpxZahw-g&#34;,&#34;title&#34;:&#34;David Michael Frank&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Provided to YouTube by DistroKid Despacito (Remix) u00b7 Future Sunsets u00b7 David Michael Frank DMF Archives: Covers Volume 2 u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:220,&#34;movingThumbnails&#34;:null,&#34;publishedTimeText&#34;:null,&#34;stats&#34;:{&#34;views&#34;:448},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /dku9Kd8ajf8 /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBAlcpSzmJ18lsJLQasLIIMh5U4LA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /dku9Kd8ajf8 /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDVt3eE5IqNOjNAllVfv-82487ptA&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Despacito (Remix)&#34;,&#34;videoId&#34;:&#34;dku9Kd8ajf8&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /TIx2jmkZQs2XA1vR8jR3e1TBUXBTDXJ54v-9soRBc9lSExK6amBldttxdk8iknj0PB6ngVfwLw=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /MarlonAlvesMAs&#34;,&#34;channelId&#34;:&#34;UCkOfNQYegVUzsADNNZNOH2g&#34;,&#34;title&#34;:&#34;Marlon Alves&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Contrataciones: assessoriamas@outlook.com Instagram https: / /www.instagram.com /marlonalvs Fan Page u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:238,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /Q4a9uwV4nmo /mqdefault_6s.webp?du=3000&amp;sqp=CJqXk5oG&amp;rs=AOn4CLB2EOZt5kzQC7nfJKCz30UNyb4PVQ&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:108231070},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /Q4a9uwV4nmo /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDo0Pi5nzTR-dtpIxIkgLuPRoK-og&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /Q4a9uwV4nmo /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBPdtBeDKhrzgv2inbXdGA5dEUQVA&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Despacito - Luis Fonsi (ft. Daddy Yankee) - Marlon Alves Dance MAs&#34;,&#34;videoId&#34;:&#34;Q4a9uwV4nmo&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu-4mMgO8D6TmPTO2U-I-4YHH9wRiyNvNo_kgipteg=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UClkRzsdvg7_RKVhwDwiDZOA&#34;,&#34;title&#34;:&#34;JFlaMusic&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;#loveyouguys #gardeners.&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:163,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /4bmUFRxNEIg /mqdefault_6s.webp?du=3000&amp;sqp=CMCFk5oG&amp;rs=AOn4CLDBfTqa17aW507ZNNDP_RoT0jsUEg&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:208235957},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /4bmUFRxNEIg /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBXMKL1vrjL0FjuctBDMZQ4mtFyvg&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /4bmUFRxNEIg /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAF17ZchQ7aTAFTzB-Kd-77peqJyQ&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi - Despacito ( cover by J.Fla )&#34;,&#34;videoId&#34;:&#34;4bmUFRxNEIg&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu8zVAWRkHkBKShhR270SKk0QqW3xyKG8KmUyfmyfg=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /royalmusicyt&#34;,&#34;channelId&#34;:&#34;UCrC_ZFYISEAUuCu00y52Evg&#34;,&#34;title&#34;:&#34;Royal Music&#34;},&#34;badges&#34;:[&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;........ Lyrics: Justin Bieber - Despacito ft. Luis Fonsi &amp; Daddy Yankee [Intro: Justin Bieber] Comin&#39; over in my direction So u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:252,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /mnvagBdO128 /mqdefault_6s.webp?du=3000&amp;sqp=CPn4kpoG&amp;rs=AOn4CLAJML-fj0qHQnNLV6pCvBLzKUIfgQ&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:51475741},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /mnvagBdO128 /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCn_6zWiV8YzvTEn-jZC5a-FrYD8Q&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /mnvagBdO128 /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDkjbzvpLvN8xLydCc9OfEz_beZ0w&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Justin Bieber - Despacito (Lyrics) ft. Luis Fonsi &amp; Daddy Yankee&#34;,&#34;videoId&#34;:&#34;mnvagBdO128&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu-ESGQ2BgH6zXSnJ6vIO7116cmkNBj9QCl_KhC8=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /channel /UCii5lcmP8kpvRikHN1HDiAg&#34;,&#34;channelId&#34;:&#34;UCii5lcmP8kpvRikHN1HDiAg&#34;,&#34;title&#34;:&#34;Melodiam M u00f9sica&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Justin Bieber u2013 Despacito ft. Luis Fonsi &amp; Daddy Yankee (Letra /Lyrics) Subscribe and press ( ) to join the Notification Squad and u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:228,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /o18ToVy9Xsc /mqdefault_6s.webp?du=3000&amp;sqp=CKOZk5oG&amp;rs=AOn4CLAjgz-Ey9l9Va9q4eDLIdlj4okwPw&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;1 year ago&#34;,&#34;stats&#34;:{&#34;views&#34;:958365},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /o18ToVy9Xsc /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDk4VSOusRJy38iPxkhJ4QRa9wzzg&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /o18ToVy9Xsc /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAeNbG-QNNhbLmTaKipSD7sRX0YtA&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Justin Bieber u2013 Despacito ft. Luis Fonsi &amp; Daddy Yankee (Letra /Lyrics)&#34;,&#34;videoId&#34;:&#34;o18ToVy9Xsc&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /r6qbeU7L0vG6lM7CyLM6dcq6dDAvMone8ESASkELOd3r5cfsFSoIEp0pEMwytc0DEheb5d1V5V4=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /user /adilkarmans&#34;,&#34;channelId&#34;:&#34;UCoJdSYoEIK7v0kIluVYdRpw&#34;,&#34;title&#34;:&#34;Mangesh Nyati&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Original Song By : Louis Fonsi, Daddy Yankke ft Justin Bieber Vocals : Farzee ft Safdar Hafiz Songs Arranged &amp; Video Edited By u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:314,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /5QvxV_-ufZc /mqdefault_6s.webp?du=3000&amp;sqp=CIGck5oG&amp;rs=AOn4CLCKPpiwgep5N0vKrAgrKIT1ysTMmQ&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:10866747},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /5QvxV_-ufZc /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAZ1-gAEl3_sAwfEEKErloJInIDIg&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /5QvxV_-ufZc /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAi31fYuVfUv4LPS4gNuoRRBwJjyw&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Despacito - Malayalam Mashup | Farzee ft Safdar Hafiz, Aadhi De Karmans | Kasaragod&#34;,&#34;videoId&#34;:&#34;5QvxV_-ufZc&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu9ecQyF0h3YRanSYjLbCpwSza35y--aGaDQY1muHg=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /c /FredericBisson&#34;,&#34;channelId&#34;:&#34;UCKLajZenVgDyfQts99xJkPQ&#34;,&#34;title&#34;:&#34;Frederic Bisson&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Comin&#39; over in my direction So thankful for that, it&#39;s such a blessin&#39;, yeah Turn every situation into Heaven, yeah Oh, you are My u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:229,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /7YJCp6J9H8E /mqdefault_6s.webp?du=3000&amp;sqp=CIWlk5oG&amp;rs=AOn4CLDIWR5iw2-lxa5sobfco7i6rds5tg&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:1997858},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /7YJCp6J9H8E /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCFloc3KUievFryvEdaLZ0TZ1TDfA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /7YJCp6J9H8E /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCvOe5v102bsVCMwxQ_s1P4I2e3fw&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Despacito (new video) feat. Justin Bieber (Luis Fonsi &amp; Daddy Yankee)&#34;,&#34;videoId&#34;:&#34;7YJCp6J9H8E&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /CTbRTtO9SFcTVr5KWWINYwi6TfirnN703Q4sc1agROV_lSEISSa-iSn0GDqWD4NnlqTcKQZeOw=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[],&#34;canonicalBaseUrl&#34;:&#34; /c /GRANDMUSIC1&#34;,&#34;channelId&#34;:&#34;UCO_YtwFEtYcOAcFdSccrwSw&#34;,&#34;title&#34;:&#34;Grand Music&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Luis Fonsi - Despacito ft. Daddy Yankee u2714 ufe0fSONIC 2 - Despacito (Best Music Video) u25c9 Follow GRAND MUSIC owner u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:249,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /NNrSpqCd3D4 /mqdefault_6s.webp?du=3000&amp;sqp=CKyXk5oG&amp;rs=AOn4CLCVRxNbFYYI0F-50jchkq-qe_C-kg&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;9 months ago&#34;,&#34;stats&#34;:{&#34;views&#34;:980504},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /NNrSpqCd3D4 /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCcWOtY7DmcfBjczupQOwKbYEvMzw&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /NNrSpqCd3D4 /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBevH218SUnfkdcfvEHxtLgi7lM7w&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;SONIC 2 - Despacito (Best Music Video)&#34;,&#34;videoId&#34;:&#34;NNrSpqCd3D4&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /kfw_1eOpjdYASmlAnSPa7XmXrYpaKjuW4k7_oB-hD5ljRSlT7yThew72ZxgW1UrAJ1e8vX1G=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UC_x8HoD18XJkILQBreVENUQ&#34;,&#34;title&#34;:&#34;DJ Snake&#34;},&#34;badges&#34;:[&#34;4K&#34;,&#34;CC&#34;],&#34;descriptionSnippet&#34;:&#34;Music video directed by Colin Tilley.&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:232,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /ixkoVwKQaJg /mqdefault_6s.webp?du=3000&amp;sqp=COiTk5oG&amp;rs=AOn4CLCQessgeIpPnU58w2SJ1xo6kMOXHw&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;4 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:2366038786},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /ixkoVwKQaJg /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDTjznmDml_d3RH-WGI5qOCv76R9w&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /ixkoVwKQaJg /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCmncEHE-KKiIgnUQHoeGaMiIu97A&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;DJ Snake - Taki Taki ft. Selena Gomez, Ozuna, Cardi B (Official Music Video)&#34;,&#34;videoId&#34;:&#34;ixkoVwKQaJg&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /e64gAQf2QrACrdxA2FZEX0sDEwS7-17Wes8Fqdx8aLZeVySSTWRQRKTOHXNB0Q4jAO2-khvdqA=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UC-6czyMkxDi8E8akPl0c7_w&#34;,&#34;title&#34;:&#34;Enrique Iglesias&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;Watch Enrique&#39;s new music video ME PASE: https: / /www.youtube.com /watch?v=JE9urbO7bNU On Tour with Ricky Martin and u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:233,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /9sg-A-eS6Ig /mqdefault_6s.webp?du=3000&amp;sqp=CNibk5oG&amp;rs=AOn4CLA5tCoWpOx1e-_JqxCCD4WswLp7pA&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:1431569192},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /9sg-A-eS6Ig /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDPjjrFIucTXtjO9tVUBnPtnMHWhQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /9sg-A-eS6Ig /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDnTLre1U2gom0MbOo2cmdDYSXR1w&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Enrique Iglesias - SUBEME LA RADIO (Official Video) ft. Descemer Bueno, Zion &amp; Lennox&#34;,&#34;videoId&#34;:&#34;9sg-A-eS6Ig&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu8zVAWRkHkBKShhR270SKk0QqW3xyKG8KmUyfmyfg=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /royalmusicyt&#34;,&#34;channelId&#34;:&#34;UCrC_ZFYISEAUuCu00y52Evg&#34;,&#34;title&#34;:&#34;Royal Music&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;......... Lyrics: Tones and I - Dance Monkey [Verse 1] They say, &#34;Oh my god, I see the way you shine Take your hand, my dear, u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:209,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /1__CAdTJ5JU /mqdefault_6s.webp?du=3000&amp;sqp=CPaek5oG&amp;rs=AOn4CLC408jsgOAgbbIWXTRl8-VrQzSngA&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;2 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:328412534},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /1__CAdTJ5JU /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD0r_9c6e32bZayU2p2rvnEyY7zTA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /1__CAdTJ5JU /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC-rEXwJ6VQkEW8xgRdeyIGId0KNA&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Tones and I - Dance Monkey (Lyrics)&#34;,&#34;videoId&#34;:&#34;1__CAdTJ5JU&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /8Lwf4LCR2VmxD2JKiozRu7Lo2jGdnhRs42NawHmMN_xJ8TdW-30e3J9DhumEksivp1Esog4A=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCxoq-PAQeAdk_zyg8YS0JqA&#34;,&#34;title&#34;:&#34;Luis Fonsi&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;#LuisFonsi #NoMeDoyPorVencido #Remastered #OfficialMusicVideo Music video by Luis Fonsi performing No Me Doy Por u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:234,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /8hRGBcr_gJc /mqdefault_6s.webp?du=3000&amp;sqp=CLCLk5oG&amp;rs=AOn4CLCXSDu2Ezw3wBuAi-Cq05Nj4VlNCQ&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;12 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:266784886},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /8hRGBcr_gJc /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCu6YYNsK-skTLt99EnBV_kcE94WQ&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /8hRGBcr_gJc /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAX1-vVc1u3G_pBmWxrhNRaY0H1tg&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi - No Me Doy Por Vencido&#34;,&#34;videoId&#34;:&#34;8hRGBcr_gJc&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu9V7gXnpIUCJYKKY_KANCGKI-0lrr0VeoRXYVce6A=s88-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Official Artist Channel&#34;,&#34;type&#34;:&#34;OFFICIAL_ARTIST_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:null,&#34;channelId&#34;:&#34;UCyjuFsbclXyntSRMBAILzbw&#34;,&#34;title&#34;:&#34;2CELLOS&#34;},&#34;badges&#34;:[&#34;4K&#34;],&#34;descriptionSnippet&#34;:&#34;2CELLOS Luka Sulic and Hauser playing Despacito Video by Kristijan Burlovic, Medvid production Audio by Filip Vidovic, Morris u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:190,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /D9LrEXF3USs /mqdefault_6s.webp?du=3000&amp;sqp=CPufk5oG&amp;rs=AOn4CLBNuhiPvvoH5fdS7SUrctCypFR4iw&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:49296654},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /D9LrEXF3USs /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAowqvxizwyTGkfxxow1GeUCCr3iw&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /D9LrEXF3USs /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD30THNw1z7qbSJUZrcaupI5cMZVQ&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;2CELLOS - Despacito [OFFICIAL VIDEO]&#34;,&#34;videoId&#34;:&#34;D9LrEXF3USs&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /ytc /AMLnZu-a8XFPIZ0-jBW6W8vSo22fMb3PgXQOT4rBlFPJFA=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /ThevoiceGlobal&#34;,&#34;channelId&#34;:&#34;UCJYtYkiGldqX6Ne938j-k2g&#34;,&#34;title&#34;:&#34;The Voice Global&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;The single &#34;Despacito &#34; has made history as the most frequently streamed song of all time. Therefore, we created a compilation u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:457,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /PIOXABoz-34 /mqdefault_6s.webp?du=3000&amp;sqp=CNyHk5oG&amp;rs=AOn4CLAHdo1B91yzn8fqoAAF0p9IKp_Q6g&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;4 years ago&#34;,&#34;stats&#34;:{&#34;views&#34;:89599764},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /PIOXABoz-34 /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDpXixnvVKuM6_1ePREdxX0nA0clA&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /PIOXABoz-34 /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLB32CaAUKuU2FHfPfZ0SwJBLNpDUA&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;BEST DESPACITO covers in The Voice | The Voice Global&#34;,&#34;videoId&#34;:&#34;PIOXABoz-34&#34;}},{&#34;type&#34;:&#34;video&#34;,&#34;video&#34;:{&#34;author&#34;:{&#34;avatar&#34;:[{&#34;height&#34;:68,&#34;url&#34;:&#34;https: / /yt3.ggpht.com /H1MGSAOJp6N0tYUxq6jlLODjdB9JJmGpP5t_P0bJpTf7bTPSGh7LRUiuLR-9Pyv9GnI3hFrb=s68-c-k-c0x00ffffff-no-rj&#34;,&#34;width&#34;:68}],&#34;badges&#34;:[{&#34;text&#34;:&#34;Verified&#34;,&#34;type&#34;:&#34;VERIFIED_CHANNEL&#34;}],&#34;canonicalBaseUrl&#34;:&#34; /c /PolarRecords&#34;,&#34;channelId&#34;:&#34;UCPAWFYFx1K9fukU_YrofRBA&#34;,&#34;title&#34;:&#34;Polar Records&#34;},&#34;badges&#34;:[],&#34;descriptionSnippet&#34;:&#34;0:00 Luis Fonsi, Daddy Yankee, Justin Bieber - Despacito (Lyrics) 0:10 Intro (Justin Bieber) Comin&#39; over in my direction So u00a0...&#34;,&#34;isLiveNow&#34;:false,&#34;lengthSeconds&#34;:229,&#34;movingThumbnails&#34;:[{&#34;height&#34;:180,&#34;url&#34;:&#34;https: / /i.ytimg.com /an_webp /noA0Jwbzqlo /mqdefault_6s.webp?du=3000&amp;sqp=CN73kpoG&amp;rs=AOn4CLDy9SBpEBGTUW9oZpL89D1q1_b7Eg&#34;,&#34;width&#34;:320}],&#34;publishedTimeText&#34;:&#34;5 months ago&#34;,&#34;stats&#34;:{&#34;views&#34;:9019},&#34;thumbnails&#34;:[{&#34;height&#34;:202,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /noA0Jwbzqlo /hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC189L6QiFX4vbV_rfF0JQ2dJwx3Q&#34;,&#34;width&#34;:360},{&#34;height&#34;:404,&#34;url&#34;:&#34;https: / /i.ytimg.com /vi /noA0Jwbzqlo /hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCWZTL1xdwiEHH3EmMPLRkZA4M4-g&#34;,&#34;width&#34;:720}],&#34;title&#34;:&#34;Luis Fonsi, Daddy Yankee, Justin Bieber - Despacito (Lyrics)&#34;,&#34;videoId&#34;:&#34;noA0Jwbzqlo&#34;}}],&#34;cursorNext&#34;:&#34;EpgDEglkZXNwYWNpdG8aigNTQlNDQVF0clNsRlFOMnRwZHpWR2E0SUJDMmR0TXkxdE1rTkdWbGROZ2dFTFpISmZSMEZLV25acFVqQ0NBUXN5WWtoQ1ZYTXRhek5oWTRJQkMzUXpTWGxWUVZSalFXSkZnZ0VOVWtSclNsRlFOMnRwZHpWR2E0SUJDMTg0VGxKS1JVRmlOQzF6Z2dFTGQyaDNaVEJMUkY5eVIzZUNBUXMzTWxWUE1IWTFSVk5WYjRJQkMzcHlTblJHZVRVeFpsSnZnZ0VMVVRSaE9YVjNWalJ1YlctQ0FRczBZbTFWUmxKNFRrVkpaNElCQzIxdWRtRm5RbVJQTVRJNGdnRUxiekU0Vkc5V2VUbFljMk9DQVFzMVVYWjRWbDh0ZFdaYVk0SUJDemRaU2tOd05rbzVTRGhGZ2dFTFRrNXlVM0J4UTJRelJEU0NBUXRFT1V4eVJWaEdNMVZUYzRJQkMxQkpUMWhCUW05NkxUTTBnZ0VMYm05Qk1FcDNZbnB4YkcteUFRWUtCQWdZRUFJJTNEGIHg6BgiC3NlYXJjaC1mZWVk&#34;,&#34;didYouMean&#34;:null,&#34;estimatedResults&#34;:27445861,&#34;filterGroups&#34;:[{&#34;filters&#34;:[{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJSUFRJTNEJTNE&#34;,&#34;label&#34;:&#34;Last hour&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJSUFnJTNEJTNE&#34;,&#34;label&#34;:&#34;Today&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJSUF3JTNEJTNE&#34;,&#34;label&#34;:&#34;This week&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJSUJBJTNEJTNE&#34;,&#34;label&#34;:&#34;This month&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJSUJRJTNEJTNE&#34;,&#34;label&#34;:&#34;This year&#34;,&#34;selected&#34;:false}],&#34;title&#34;:&#34;Upload date&#34;},{&#34;filters&#34;:[{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJUUFRJTNEJTNE&#34;,&#34;label&#34;:&#34;Video&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJUUFnJTNEJTNE&#34;,&#34;label&#34;:&#34;Channel&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJUUF3JTNEJTNE&#34;,&#34;label&#34;:&#34;Playlist&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJUUJBJTNEJTNE&#34;,&#34;label&#34;:&#34;Movie&#34;,&#34;selected&#34;:false}],&#34;title&#34;:&#34;Type&#34;},{&#34;filters&#34;:[{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJWUFRJTNEJTNE&#34;,&#34;label&#34;:&#34;Under 4 minutes&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJWUF3JTNEJTNE&#34;,&#34;label&#34;:&#34;4 - 20 minutes&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJWUFnJTNEJTNE&#34;,&#34;label&#34;:&#34;Over 20 minutes&#34;,&#34;selected&#34;:false}],&#34;title&#34;:&#34;Duration&#34;},{&#34;filters&#34;:[{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdKQUFRJTNEJTNE&#34;,&#34;label&#34;:&#34;Live&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdKd0FRJTNEJTNE&#34;,&#34;label&#34;:&#34;4K&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJZ0FRJTNEJTNE&#34;,&#34;label&#34;:&#34;HD&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJb0FRJTNEJTNE&#34;,&#34;label&#34;:&#34;Subtitles /CC&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJd0FRJTNEJTNE&#34;,&#34;label&#34;:&#34;Creative Commons&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdKNEFRJTNEJTNE&#34;,&#34;label&#34;:&#34;360 u00b0&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdQUUFRRSUzRA==&#34;,&#34;label&#34;:&#34;VR180&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdJNEFRJTNEJTNE&#34;,&#34;label&#34;:&#34;3D&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdQSUFRRSUzRA==&#34;,&#34;label&#34;:&#34;HDR&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdPNEFRRSUzRA==&#34;,&#34;label&#34;:&#34;Location&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmRWdKSUFRJTNEJTNE&#34;,&#34;label&#34;:&#34;Purchased&#34;,&#34;selected&#34;:false}],&#34;title&#34;:&#34;Features&#34;},{&#34;filters&#34;:[{&#34;cursorSelect&#34;:null,&#34;label&#34;:&#34;Relevance&#34;,&#34;selected&#34;:true},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmQ0FJJTNE&#34;,&#34;label&#34;:&#34;Upload date&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmQ0FNJTNE&#34;,&#34;label&#34;:&#34;View count&#34;,&#34;selected&#34;:false},{&#34;cursorSelect&#34;:&#34;ZGVzcGFjaXRvJiYmQ0FFJTNE&#34;,&#34;label&#34;:&#34;Rating&#34;,&#34;selected&#34;:false}],&#34;title&#34;:&#34;Sort by&#34;}],&#34;refinements&#34;:[&#34;despacito 8d&#34;,&#34;despacito ringtone&#34;,&#34;despacito cover&#34;,&#34;despacito dance&#34;,&#34;daddy y yankee songs&#34;,&#34;luis fonsi songs&#34;,&#34;despacito slowed&#34;,&#34;despacito karaoke&#34;,&#34;despacito piano&#34;,&#34;despacito in hindi&#34;,&#34;despacito guitar&#34;,&#34;despacito justin bieber karaoke&#34;,&#34;#imposible&#34;,&#34;despacito flute&#34;]} . Formatting the API . The mess of outputs needs to be converted before it can be seen properly. This is done here with this code, which lists each search result by their author, thumbnail, title, views, and length . def print_result(v): print(&quot;Result Type: &quot;, v[&quot;type&quot;]) print(&quot;Author: &quot; + v[&quot;video&quot;][&quot;author&quot;][&quot;title&quot;]) print(&quot;Thumbnail: &quot; + v[&quot;video&quot;][&quot;thumbnails&quot;][0][&quot;url&quot;]) print(&quot;Title: &quot; + v[&quot;video&quot;][&quot;title&quot;]) views=v[&quot;video&quot;][&quot;stats&quot;][&quot;views&quot;] if views&gt;1000000000: print(&quot;Views: &quot;+str(views//1000000000)+&#39;B&#39;) elif views&gt;1000000: print(&quot;Views: &quot;+str(views//1000000)+&#39;M&#39;) elif views&gt;1000: print(&quot;Views: &quot;+str(views//100)+&#39;K&#39;) else: print(&quot;Views: &quot;+str(views)) length=v[&quot;video&quot;][&quot;lengthSeconds&quot;] if length%60&lt;10: print(&quot;Length: &quot;+str(length//60)+&#39;:0&#39;+str(length%60)) else: print(&quot;Length: &quot;+str(length//60)+&#39;:&#39;+str(length%60)) try: print(&quot;JSON data is Python type: &quot; + str(type(json))) # Test if json is processed successfully try: print(&#39;&#39;) # For each video in the json, view the results using print_results for video in json[&#39;contents&#39;]: print_result(video) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Result Type: video Author: Luis Fonsi Thumbnail: https://i.ytimg.com/vi/kJQP7kiw5Fk/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBCg9eudi8DoM9M-qjPgJBGGkuIgA Title: Luis Fonsi - Despacito ft. Daddy Yankee Views: 7B Length: 4:42 Result Type: video Author: Taz Network Thumbnail: https://i.ytimg.com/vi/gm3-m2CFVWM/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBdnMRJ4yJ6vHumS_nU46yxFLqRjQ Title: Luis Fonsi ‒ Despacito (Lyrics / Lyric Video) ft. Daddy Yankee Views: 25M Length: 4:01 Result Type: video Author: MasterDumb Thumbnail: https://i.ytimg.com/vi/dr_GAJZviR0/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD5YIkR5KbMQOxTcaRoIxBF9Vm_6w Title: Luis Fonsi, Daddy Yankee - Despacito ft. Justin Bieber Views: 25M Length: 4:11 Result Type: video Author: Luis Fonsi Thumbnail: https://i.ytimg.com/vi/2bHBUs-k3ac/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLA02SrTWMxpzWcz0nTBfWQPiUsKjQ Title: Luis Fonsi Despacito ft. Daddy Yankee (audio) Views: 1M Length: 3:49 Result Type: video Author: Luis Fonsi Thumbnail: https://i.ytimg.com/vi/t3IyUATcAbE/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLB8rLazbFNSKES97_IJvr6SM7ibsA Title: Despacito Views: 9637K Length: 3:49 Result Type: video Author: Fans Tiktok Thumbnail: https://i.ytimg.com/vi/_8NRJEAb4-s/hq720_2.jpg?sqp=-oaymwEdCJYDENAFSFXyq4qpAw8IARUAAIhCcAHAAQbQAQE=&amp;rs=AOn4CLDNHzpzX_Is1LcknUd9-h5bymStmw Title: (Despacito Magik Edit) New Chaljch Which one is more beautiful🤔 #tiktok Views: 38M Length: 0:14 Result Type: video Author: Taz Network Thumbnail: https://i.ytimg.com/vi/whwe0KD_rGw/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAHpsL01E241DCvjgTvwUb2KlYvgQ Title: Justin Bieber – Despacito (Lyrics) 🎤 ft. Luis Fonsi &amp; Daddy Yankee [Pop] Views: 348M Length: 3:51 Result Type: video Author: The Voice Global Thumbnail: https://i.ytimg.com/vi/l6xuHunzqXk/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBMaenQtNjDLaanEEA8VsqYc4SkFg Title: SURPRISING DESPACITO covers in The Voice Views: 5M Length: 6:00 Result Type: video Author: officialpsy Thumbnail: https://i.ytimg.com/vi/9bZkp7q19f0/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC2ZQhOjkk_NTkfURgVv3PC9LljiA Title: PSY - GANGNAM STYLE(강남스타일) M/V Views: 4B Length: 4:13 Result Type: video Author: χρηστος ιωαννου Thumbnail: https://i.ytimg.com/vi/dDtSsPRkxhE/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD4r5EmI7EYxFTpeoiYt0ckycqZ8Q Title: Despacito Dagostino Megamix Gigi Dag Modern Talking Cyndi Lauper Haddaway Luis Fonsi CyberBEATzz Views: 9M Length: 8:28 Result Type: video Author: The Voice Legendary Thumbnail: https://i.ytimg.com/vi/1Gv9uWFyuSI/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDHMTf1fF_yZDf3y1ZrXzMhvP0w6A Title: Top 10 performance Shocked coaches in The voice Audition 2018 Views: 79M Length: 17:35 Result Type: video Author: Top Viral Talent Thumbnail: https://i.ytimg.com/vi/auf3-2wJacU/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBt041CWXgJFVGUlvDXTU6bUQoa3Q Title: She Blows Everyone Away With DESPACITO Cover on X Factor | Live Show | The X Factor UK 2017 Views: 12M Length: 6:35 Result Type: video Author: Enrique Iglesias Thumbnail: https://i.ytimg.com/vi/NUsoVlDFqZg/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC2DhAav-5VjyevId13lvNqMiX8Zg Title: Enrique Iglesias - Bailando ft. Descemer Bueno, Gente De Zona (Español) Views: 3B Length: 4:47 Result Type: video Author: PICTURE NEWS Thumbnail: https://i.ytimg.com/vi/5xyy2m_r_GM/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAG6VPhp_6Vix2zD299EwLTYWVntQ Title: Cristiano Ronaldo vs Lionel Messi Transformation 2018 | Who is better? Views: 23M Length: 6:26 Result Type: video Author: Luis Fonsi Thumbnail: https://i.ytimg.com/vi/TyHvyGVs42U/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC3sLxZ9CZdlOjy6HeaSTIe_CitAg Title: Luis Fonsi, Demi Lovato - Échame La Culpa (Video Oficial) Views: 2B Length: 3:31 Result Type: video Author: jovy music Thumbnail: https://i.ytimg.com/vi/B3_aSQWse1c/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAfyc8hRAYg-VRGQW89d02ekgebjA Title: Learn to Sing Despacito Slowed Down Boyce Avenue Version Spanish Views: 4M Length: 4:23 Result Type: video Author: Gerardo Ortiz Thumbnail: https://i.ytimg.com/vi/bibIWBTD_tE/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDgHUUGofpYASvTPoxVmz2vN9dJxw Title: Gerardo Ortiz - Tranquilito (Official Video) Views: 73M Length: 3:09 Result Type: video Author: Luis Fonsi Thumbnail: https://i.ytimg.com/vi/72UO0v5ESUo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD9eRVhsetOGUVsmlaEWQlqiC-jyQ Title: Luis Fonsi, Daddy Yankee - Despacito (Remix) (Official Audio) ft. Justin Bieber Views: 673M Length: 3:49 Result Type: video Author: The Tonight Show Starring Jimmy Fallon Thumbnail: https://i.ytimg.com/vi/zrJtFy51fRo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCUqrotW32dSX_hoaS0vlLqvcE4vQ Title: Luis Fonsi: Despacito Views: 17M Length: 4:07 Result Type: video Author: E Hits Thumbnail: https://i.ytimg.com/vi/Vnngj_l_J6M/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLA40quCBXnDyD-AjP-_DdcCuZp7lw Title: Luis Fonsi - Despacito (Letra/Lyrics) ft. Daddy Yankee Views: 2949K Length: 6:30 Result Type: video Author: KIANO7HD Thumbnail: https://i.ytimg.com/vi/KafZCpAp82Q/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDmJ1BU4N0YFt7M1qNxOrXYcbV7KQ Title: Cristiano Ronaldo ► &#34;DESPACITO&#34; - Luis Fonsi • Real Madrid Skills &amp; Goals 2014 | HD Views: 1172K Length: 4:19 Result Type: video Author: Good Vibes Only Thumbnail: https://i.ytimg.com/vi/uVrG7KPmrQo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBIhyentDZsJALG-4i6oyYhla5psA Title: Luis Fonsi - Despacito (Lyrics) Views: 3722K Length: 4:53 Result Type: video Author: Crusher 21 Thumbnail: https://i.ytimg.com/vi/UL-aEOvkPaM/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDTbR__FcCBek_rP6mfZozintBmDw Title: Clash royale diss track🔥 (Despacito parody) Views: 822K Length: 4:04 Result Type: video Author: Fresh Vibes Thumbnail: https://i.ytimg.com/vi/uCm2gedyaWw/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCET8mVbyL4lgor9iOx5LEHO2vTKA Title: Luis Fonsi - Despacito (Lyrics) Views: 347 Length: 3:49 Result Type: video Author: Rapaz Malvado Thumbnail: https://i.ytimg.com/vi/sZ_vS3shFBE/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAPcSUT6sWG8YHUf2uEuKv21haQgg Title: ♫ AH POIS É| BENFICA VS PSG| PARÓDIA- DESPACITO | Views: 682K Length: 2:37 Result Type: video Author: Feeling Off Thumbnail: https://i.ytimg.com/vi/9MeAh-GdYoA/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC81bA92EUK9xxWxan5ckRYV-P7OQ Title: Luis Fonsi &amp; Despacito (Lyrics / Lyric Video) ft. Daddy Yankee Views: 80K Length: 4:43 Result Type: video Author: David Michael Frank Thumbnail: https://i.ytimg.com/vi/dku9Kd8ajf8/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBAlcpSzmJ18lsJLQasLIIMh5U4LA Title: Despacito (Remix) Views: 448 Length: 3:40 Result Type: video Author: Marlon Alves Thumbnail: https://i.ytimg.com/vi/Q4a9uwV4nmo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDo0Pi5nzTR-dtpIxIkgLuPRoK-og Title: Despacito - Luis Fonsi (ft. Daddy Yankee) - Marlon Alves Dance MAs Views: 108M Length: 3:58 Result Type: video Author: JFlaMusic Thumbnail: https://i.ytimg.com/vi/4bmUFRxNEIg/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBXMKL1vrjL0FjuctBDMZQ4mtFyvg Title: Luis Fonsi - Despacito ( cover by J.Fla ) Views: 208M Length: 2:43 Result Type: video Author: Royal Music Thumbnail: https://i.ytimg.com/vi/mnvagBdO128/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCn_6zWiV8YzvTEn-jZC5a-FrYD8Q Title: Justin Bieber - Despacito (Lyrics) ft. Luis Fonsi &amp; Daddy Yankee Views: 51M Length: 4:12 Result Type: video Author: Melodiam Mùsica Thumbnail: https://i.ytimg.com/vi/o18ToVy9Xsc/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDk4VSOusRJy38iPxkhJ4QRa9wzzg Title: Justin Bieber – Despacito ft. Luis Fonsi &amp; Daddy Yankee (Letra/Lyrics) Views: 9583K Length: 3:48 Result Type: video Author: Mangesh Nyati Thumbnail: https://i.ytimg.com/vi/5QvxV_-ufZc/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAZ1-gAEl3_sAwfEEKErloJInIDIg Title: Despacito - Malayalam Mashup | Farzee ft Safdar Hafiz, Aadhi De Karmans | Kasaragod Views: 10M Length: 5:14 Result Type: video Author: Frederic Bisson Thumbnail: https://i.ytimg.com/vi/7YJCp6J9H8E/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCFloc3KUievFryvEdaLZ0TZ1TDfA Title: Despacito (new video) feat. Justin Bieber (Luis Fonsi &amp; Daddy Yankee) Views: 1M Length: 3:49 Result Type: video Author: Grand Music Thumbnail: https://i.ytimg.com/vi/NNrSpqCd3D4/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCcWOtY7DmcfBjczupQOwKbYEvMzw Title: SONIC 2 - Despacito (Best Music Video) Views: 9805K Length: 4:09 Result Type: video Author: DJ Snake Thumbnail: https://i.ytimg.com/vi/ixkoVwKQaJg/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDTjznmDml_d3RH-WGI5qOCv76R9w Title: DJ Snake - Taki Taki ft. Selena Gomez, Ozuna, Cardi B (Official Music Video) Views: 2B Length: 3:52 Result Type: video Author: Enrique Iglesias Thumbnail: https://i.ytimg.com/vi/9sg-A-eS6Ig/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDPjjrFIucTXtjO9tVUBnPtnMHWhQ Title: Enrique Iglesias - SUBEME LA RADIO (Official Video) ft. Descemer Bueno, Zion &amp; Lennox Views: 1B Length: 3:53 Result Type: video Author: Royal Music Thumbnail: https://i.ytimg.com/vi/1__CAdTJ5JU/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD0r_9c6e32bZayU2p2rvnEyY7zTA Title: Tones and I - Dance Monkey (Lyrics) Views: 328M Length: 3:29 Result Type: video Author: Luis Fonsi Thumbnail: https://i.ytimg.com/vi/8hRGBcr_gJc/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCu6YYNsK-skTLt99EnBV_kcE94WQ Title: Luis Fonsi - No Me Doy Por Vencido Views: 266M Length: 3:54 Result Type: video Author: 2CELLOS Thumbnail: https://i.ytimg.com/vi/D9LrEXF3USs/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAowqvxizwyTGkfxxow1GeUCCr3iw Title: 2CELLOS - Despacito [OFFICIAL VIDEO] Views: 49M Length: 3:10 Result Type: video Author: The Voice Global Thumbnail: https://i.ytimg.com/vi/PIOXABoz-34/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDpXixnvVKuM6_1ePREdxX0nA0clA Title: BEST DESPACITO covers in The Voice | The Voice Global Views: 89M Length: 7:37 Result Type: video Author: Polar Records Thumbnail: https://i.ytimg.com/vi/noA0Jwbzqlo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC189L6QiFX4vbV_rfF0JQ2dJwx3Q Title: Luis Fonsi, Daddy Yankee, Justin Bieber - Despacito (Lyrics) Views: 90K Length: 3:49 . Simplifying Data . Simplifying data from the json to what I needed from format. . def transfer(): global json return json_of_results(json) def json_of_results(j): results={} videos=[] for v in j[&quot;contents&quot;]: video={} video[&quot;thumburl&quot;] = v[&quot;video&quot;][&quot;thumbnails&quot;][0][&quot;url&quot;] video[&quot;title&quot;] = v[&quot;video&quot;][&quot;title&quot;] video[&quot;author&quot;] = v[&quot;video&quot;][&quot;author&quot;][&quot;title&quot;] views=v[&quot;video&quot;][&quot;stats&quot;][&quot;views&quot;] if views&gt;1000000000: viewString=str(views//1000000000)+&#39;B&#39; elif views&gt;1000000: viewString=str(views//1000000)+&#39;M&#39; elif views&gt;1000: viewString=str(views//1000)+&#39;K&#39; else: viewString=str(views) video[&quot;viewsString&quot;] = viewString length=v[&quot;video&quot;][&quot;lengthSeconds&quot;] if length%60&lt;10: lengthString = str(length//60)+&#39;:0&#39;+str(length%60) else: lengthString = str(length//60)+&#39;:&#39;+str(length%60) video[&quot;lengthString&quot;] = lengthString videos.append(video) results[&quot;videos&quot;]=videos return results try: print(&quot;Example Needed variables&quot;) print_result(json[&quot;contents&quot;][0]) # Test if json is processed successfully print(&#39;&#39;) video_dict=json_of_results(json) vid_json=json.dumps(video_dict) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . Example Needed variables Result Type: video Author: Luis Fonsi Thumbnail: https://i.ytimg.com/vi/kJQP7kiw5Fk/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBCg9eudi8DoM9M-qjPgJBGGkuIgA Title: Luis Fonsi - Despacito ft. Daddy Yankee Views: 7B Length: 4:42 {&#39;videos&#39;: [{&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/kJQP7kiw5Fk/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBCg9eudi8DoM9M-qjPgJBGGkuIgA&#39;, &#39;title&#39;: &#39;Luis Fonsi - Despacito ft. Daddy Yankee&#39;, &#39;author&#39;: &#39;Luis Fonsi&#39;, &#39;viewsString&#39;: &#39;7B&#39;, &#39;lengthString&#39;: &#39;4:42&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/gm3-m2CFVWM/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBdnMRJ4yJ6vHumS_nU46yxFLqRjQ&#39;, &#39;title&#39;: &#39;Luis Fonsi ‒ Despacito (Lyrics / Lyric Video) ft. Daddy Yankee&#39;, &#39;author&#39;: &#39;Taz Network&#39;, &#39;viewsString&#39;: &#39;25M&#39;, &#39;lengthString&#39;: &#39;4:01&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/dr_GAJZviR0/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD5YIkR5KbMQOxTcaRoIxBF9Vm_6w&#39;, &#39;title&#39;: &#39;Luis Fonsi, Daddy Yankee - Despacito ft. Justin Bieber&#39;, &#39;author&#39;: &#39;MasterDumb&#39;, &#39;viewsString&#39;: &#39;25M&#39;, &#39;lengthString&#39;: &#39;4:11&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/2bHBUs-k3ac/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLA02SrTWMxpzWcz0nTBfWQPiUsKjQ&#39;, &#39;title&#39;: &#39;Luis Fonsi Despacito ft. Daddy Yankee (audio)&#39;, &#39;author&#39;: &#39;Luis Fonsi&#39;, &#39;viewsString&#39;: &#39;1M&#39;, &#39;lengthString&#39;: &#39;3:49&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/t3IyUATcAbE/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLB8rLazbFNSKES97_IJvr6SM7ibsA&#39;, &#39;title&#39;: &#39;Despacito&#39;, &#39;author&#39;: &#39;Luis Fonsi&#39;, &#39;viewsString&#39;: &#39;963K&#39;, &#39;lengthString&#39;: &#39;3:49&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/Gl6ekgobG2k/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAua2KbkFRzR5vFXNIo4IwYYazJ1Q&#39;, &#39;title&#39;: &#39;Despacito 3 (Official Minecraft Parody)&#39;, &#39;author&#39;: &#39;ReptileLegitYT&#39;, &#39;viewsString&#39;: &#39;19M&#39;, &#39;lengthString&#39;: &#39;4:05&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/_8NRJEAb4-s/hq720_2.jpg?sqp=-oaymwEdCJYDENAFSFXyq4qpAw8IARUAAIhCcAHAAQbQAQE=&amp;rs=AOn4CLDNHzpzX_Is1LcknUd9-h5bymStmw&#39;, &#39;title&#39;: &#39;(Despacito Magik Edit) New Chaljch Which one is more beautiful🤔 #tiktok&#39;, &#39;author&#39;: &#39;Fans Tiktok&#39;, &#39;viewsString&#39;: &#39;38M&#39;, &#39;lengthString&#39;: &#39;0:14&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/l6xuHunzqXk/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBMaenQtNjDLaanEEA8VsqYc4SkFg&#39;, &#39;title&#39;: &#39;SURPRISING DESPACITO covers in The Voice&#39;, &#39;author&#39;: &#39;The Voice Global&#39;, &#39;viewsString&#39;: &#39;5M&#39;, &#39;lengthString&#39;: &#39;6:00&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/1Gv9uWFyuSI/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDHMTf1fF_yZDf3y1ZrXzMhvP0w6A&#39;, &#39;title&#39;: &#39;Top 10 performance Shocked coaches in The voice Audition 2018&#39;, &#39;author&#39;: &#39;The Voice Legendary&#39;, &#39;viewsString&#39;: &#39;79M&#39;, &#39;lengthString&#39;: &#39;17:35&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/7iT72MMoO28/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBkx_SJy0x_i3s2mEaIAnrRG-57Ug&#39;, &#39;title&#39;: &#39;Donald Trump Singing Despacito||Ft.Justin Bieber,Daddy yankee,Luis Fonsi&#39;, &#39;author&#39;: &#39;Work Smart&#39;, &#39;viewsString&#39;: &#39;3M&#39;, &#39;lengthString&#39;: &#39;1:28&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/5xyy2m_r_GM/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAG6VPhp_6Vix2zD299EwLTYWVntQ&#39;, &#39;title&#39;: &#39;Cristiano Ronaldo vs Lionel Messi Transformation 2018 | Who is better?&#39;, &#39;author&#39;: &#39;PICTURE NEWS&#39;, &#39;viewsString&#39;: &#39;23M&#39;, &#39;lengthString&#39;: &#39;6:26&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/dDtSsPRkxhE/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD4r5EmI7EYxFTpeoiYt0ckycqZ8Q&#39;, &#39;title&#39;: &#39;Despacito Dagostino Megamix Gigi Dag Modern Talking Cyndi Lauper Haddaway Luis Fonsi CyberBEATzz&#39;, &#39;author&#39;: &#39;χρηστος ιωαννου&#39;, &#39;viewsString&#39;: &#39;9M&#39;, &#39;lengthString&#39;: &#39;8:28&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/-bCoFRsKpww/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAdO8KGL4A81MNdS0p-TWlHPqlcyg&#39;, &#39;title&#39;: &#39;Erika Ender &amp; Roberto Carlos - Despacito (En Vivo)&#39;, &#39;author&#39;: &#39;Erika Ender&#39;, &#39;viewsString&#39;: &#39;74M&#39;, &#39;lengthString&#39;: &#39;4:48&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/TyHvyGVs42U/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC3sLxZ9CZdlOjy6HeaSTIe_CitAg&#39;, &#39;title&#39;: &#39;Luis Fonsi, Demi Lovato - Échame La Culpa (Video Oficial)&#39;, &#39;author&#39;: &#39;Luis Fonsi&#39;, &#39;viewsString&#39;: &#39;2B&#39;, &#39;lengthString&#39;: &#39;3:31&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/TfkP5ubz1z4/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBXxsS53YwcBoOez5OE4zgPu99KHQ&#39;, &#39;title&#39;: &#39;Justin Bieber - Despacito (Lyrics / Letra) ft. Luis Fonsi &amp; Daddy Yankee&#39;, &#39;author&#39;: &#39;7clouds&#39;, &#39;viewsString&#39;: &#39;35M&#39;, &#39;lengthString&#39;: &#39;3:51&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/h6vj8Ryu0LI/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAyZaPu5vu8jgDSlAF4B9UcT72PRw&#39;, &#39;title&#39;: &#39;Luis Fonsi - Despacito ft. Daddy Yankee &amp; Justin Bieber (SING OFF vs. Pixie Lott)&#39;, &#39;author&#39;: &#39;Conor Maynard&#39;, &#39;viewsString&#39;: &#39;226M&#39;, &#39;lengthString&#39;: &#39;5:23&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/zvKn2RiXVfc/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLChUmjA2327X5BOjTC9lS2FJB-3EA&#39;, &#39;title&#39;: &#39;TOP 10 | THE HARDEST GENDER identifications in The Voice&#39;, &#39;author&#39;: &#39;Best of The Voice&#39;, &#39;viewsString&#39;: &#39;21M&#39;, &#39;lengthString&#39;: &#39;17:36&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/whwe0KD_rGw/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAHpsL01E241DCvjgTvwUb2KlYvgQ&#39;, &#39;title&#39;: &#39;Justin Bieber – Despacito (Lyrics) 🎤 ft. Luis Fonsi &amp; Daddy Yankee [Pop]&#39;, &#39;author&#39;: &#39;Taz Network&#39;, &#39;viewsString&#39;: &#39;348M&#39;, &#39;lengthString&#39;: &#39;3:51&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/72UO0v5ESUo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLD9eRVhsetOGUVsmlaEWQlqiC-jyQ&#39;, &#39;title&#39;: &#39;Luis Fonsi, Daddy Yankee - Despacito (Remix) (Official Audio) ft. Justin Bieber&#39;, &#39;author&#39;: &#39;Luis Fonsi&#39;, &#39;viewsString&#39;: &#39;673M&#39;, &#39;lengthString&#39;: &#39;3:49&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/Vnngj_l_J6M/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLA40quCBXnDyD-AjP-_DdcCuZp7lw&#39;, &#39;title&#39;: &#39;Luis Fonsi - Despacito (Letra/Lyrics) ft. Daddy Yankee&#39;, &#39;author&#39;: &#39;E Hits&#39;, &#39;viewsString&#39;: &#39;294K&#39;, &#39;lengthString&#39;: &#39;6:30&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/KafZCpAp82Q/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDmJ1BU4N0YFt7M1qNxOrXYcbV7KQ&#39;, &#39;title&#39;: &#39;Cristiano Ronaldo ► &#34;DESPACITO&#34; - Luis Fonsi • Real Madrid Skills &amp; Goals 2014 | HD&#39;, &#39;author&#39;: &#39;KIANO7HD&#39;, &#39;viewsString&#39;: &#39;117K&#39;, &#39;lengthString&#39;: &#39;4:19&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/uVrG7KPmrQo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBIhyentDZsJALG-4i6oyYhla5psA&#39;, &#39;title&#39;: &#39;Luis Fonsi - Despacito (Lyrics)&#39;, &#39;author&#39;: &#39;Good Vibes Only &#39;, &#39;viewsString&#39;: &#39;372K&#39;, &#39;lengthString&#39;: &#39;4:53&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/UL-aEOvkPaM/hqdefault.jpg?sqp=-oaymwEcCOADEI4CSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDTbR__FcCBek_rP6mfZozintBmDw&#39;, &#39;title&#39;: &#39;Clash royale diss track🔥 (Despacito parody)&#39;, &#39;author&#39;: &#39;Crusher 21&#39;, &#39;viewsString&#39;: &#39;82K&#39;, &#39;lengthString&#39;: &#39;4:04&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/XkJKY72OOew/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCbGn4t33W0vsg2erF9-1EsqyU-dg&#39;, &#39;title&#39;: &#39;Despacito - Luis Fonsi (Lyrics)&#39;, &#39;author&#39;: &#39;Dandelion &#39;, &#39;viewsString&#39;: &#39;165&#39;, &#39;lengthString&#39;: &#39;4:51&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/sZ_vS3shFBE/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAPcSUT6sWG8YHUf2uEuKv21haQgg&#39;, &#39;title&#39;: &#39;♫ AH POIS É| BENFICA VS PSG| PARÓDIA- DESPACITO |&#39;, &#39;author&#39;: &#39;Rapaz Malvado&#39;, &#39;viewsString&#39;: &#39;68K&#39;, &#39;lengthString&#39;: &#39;2:37&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/9MeAh-GdYoA/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC81bA92EUK9xxWxan5ckRYV-P7OQ&#39;, &#39;title&#39;: &#39;Luis Fonsi &amp; Despacito (Lyrics / Lyric Video) ft. Daddy Yankee&#39;, &#39;author&#39;: &#39;Feeling Off&#39;, &#39;viewsString&#39;: &#39;8K&#39;, &#39;lengthString&#39;: &#39;4:43&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/dku9Kd8ajf8/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBAlcpSzmJ18lsJLQasLIIMh5U4LA&#39;, &#39;title&#39;: &#39;Despacito (Remix)&#39;, &#39;author&#39;: &#39;David Michael Frank&#39;, &#39;viewsString&#39;: &#39;448&#39;, &#39;lengthString&#39;: &#39;3:40&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/zrJtFy51fRo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCUqrotW32dSX_hoaS0vlLqvcE4vQ&#39;, &#39;title&#39;: &#39;Luis Fonsi: Despacito&#39;, &#39;author&#39;: &#39;The Tonight Show Starring Jimmy Fallon&#39;, &#39;viewsString&#39;: &#39;17M&#39;, &#39;lengthString&#39;: &#39;4:07&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/Q4a9uwV4nmo/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDo0Pi5nzTR-dtpIxIkgLuPRoK-og&#39;, &#39;title&#39;: &#39;Despacito - Luis Fonsi (ft. Daddy Yankee) - Marlon Alves Dance MAs&#39;, &#39;author&#39;: &#39;Marlon Alves&#39;, &#39;viewsString&#39;: &#39;108M&#39;, &#39;lengthString&#39;: &#39;3:58&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/mnvagBdO128/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCn_6zWiV8YzvTEn-jZC5a-FrYD8Q&#39;, &#39;title&#39;: &#39;Justin Bieber - Despacito (Lyrics) ft. Luis Fonsi &amp; Daddy Yankee&#39;, &#39;author&#39;: &#39;Royal Music&#39;, &#39;viewsString&#39;: &#39;51M&#39;, &#39;lengthString&#39;: &#39;4:12&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/4bmUFRxNEIg/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBXMKL1vrjL0FjuctBDMZQ4mtFyvg&#39;, &#39;title&#39;: &#39;Luis Fonsi - Despacito ( cover by J.Fla )&#39;, &#39;author&#39;: &#39;JFlaMusic&#39;, &#39;viewsString&#39;: &#39;208M&#39;, &#39;lengthString&#39;: &#39;2:43&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/o18ToVy9Xsc/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDk4VSOusRJy38iPxkhJ4QRa9wzzg&#39;, &#39;title&#39;: &#39;Justin Bieber – Despacito ft. Luis Fonsi &amp; Daddy Yankee (Letra/Lyrics)&#39;, &#39;author&#39;: &#39;Melodiam Mùsica&#39;, &#39;viewsString&#39;: &#39;958K&#39;, &#39;lengthString&#39;: &#39;3:48&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/YItSoGdKSqI/hq720_2.jpg?sqp=-oaymwEdCJYDENAFSFXyq4qpAw8IARUAAIhCcAHAAQbQAQE=&amp;rs=AOn4CLBgNDf9WwNRNAmZqs9Tjol2spcgxQ&#39;, &#39;title&#39;: &#39;Ronaldo And Messi🔥🥶|Despacito (Now) (All time) 10 M + Views&#39;, &#39;author&#39;: &#39;Terminator Rono&#39;, &#39;viewsString&#39;: &#39;10M&#39;, &#39;lengthString&#39;: &#39;0:59&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/7YJCp6J9H8E/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCFloc3KUievFryvEdaLZ0TZ1TDfA&#39;, &#39;title&#39;: &#39;Despacito (new video) feat. Justin Bieber (Luis Fonsi &amp; Daddy Yankee)&#39;, &#39;author&#39;: &#39;Frederic Bisson&#39;, &#39;viewsString&#39;: &#39;1M&#39;, &#39;lengthString&#39;: &#39;3:49&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/TyHvyGVs42U/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLC3sLxZ9CZdlOjy6HeaSTIe_CitAg&#39;, &#39;title&#39;: &#39;Luis Fonsi, Demi Lovato - Échame La Culpa (Video Oficial)&#39;, &#39;author&#39;: &#39;Luis Fonsi&#39;, &#39;viewsString&#39;: &#39;2B&#39;, &#39;lengthString&#39;: &#39;3:31&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/ixkoVwKQaJg/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLDTjznmDml_d3RH-WGI5qOCv76R9w&#39;, &#39;title&#39;: &#39;DJ Snake - Taki Taki ft. Selena Gomez, Ozuna, Cardi B (Official Music Video)&#39;, &#39;author&#39;: &#39;DJ Snake&#39;, &#39;viewsString&#39;: &#39;2B&#39;, &#39;lengthString&#39;: &#39;3:52&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/q0hyYWKXF0Q/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLBM6Yht9a2IVk4AeL6whUm4s9ra8Q&#39;, &#39;title&#39;: &#39;TONES AND I - DANCE MONKEY (OFFICIAL VIDEO)&#39;, &#39;author&#39;: &#39;Tones And I&#39;, &#39;viewsString&#39;: &#39;1B&#39;, &#39;lengthString&#39;: &#39;3:57&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/8hRGBcr_gJc/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCu6YYNsK-skTLt99EnBV_kcE94WQ&#39;, &#39;title&#39;: &#39;Luis Fonsi - No Me Doy Por Vencido&#39;, &#39;author&#39;: &#39;Luis Fonsi&#39;, &#39;viewsString&#39;: &#39;266M&#39;, &#39;lengthString&#39;: &#39;3:54&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/NNrSpqCd3D4/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLCcWOtY7DmcfBjczupQOwKbYEvMzw&#39;, &#39;title&#39;: &#39;SONIC 2 - Despacito (Best Music Video)&#39;, &#39;author&#39;: &#39;Grand Music&#39;, &#39;viewsString&#39;: &#39;980K&#39;, &#39;lengthString&#39;: &#39;4:09&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/5QvxV_-ufZc/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAZ1-gAEl3_sAwfEEKErloJInIDIg&#39;, &#39;title&#39;: &#39;Despacito - Malayalam Mashup | Farzee ft Safdar Hafiz, Aadhi De Karmans | Kasaragod&#39;, &#39;author&#39;: &#39;Mangesh Nyati&#39;, &#39;viewsString&#39;: &#39;10M&#39;, &#39;lengthString&#39;: &#39;5:14&#39;}, {&#39;thumburl&#39;: &#39;https://i.ytimg.com/vi/D9LrEXF3USs/hq720.jpg?sqp=-oaymwEcCOgCEMoBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&amp;rs=AOn4CLAowqvxizwyTGkfxxow1GeUCCr3iw&#39;, &#39;title&#39;: &#39;2CELLOS - Despacito [OFFICIAL VIDEO]&#39;, &#39;author&#39;: &#39;2CELLOS&#39;, &#39;viewsString&#39;: &#39;49M&#39;, &#39;lengthString&#39;: &#39;3:10&#39;}]} .",
            "url": "https://jasoxddd.github.io/FastProject2/youtubeapi",
            "relUrl": "/youtubeapi",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;6615470177msh2eb9d9776c82332p163317jsn65585d1a22d9&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;status&#34;:&#34;success&#34;,&#34;data&#34;:{&#34;stats&#34;:{&#34;total&#34;:1488,&#34;totalCoins&#34;:21256,&#34;totalMarkets&#34;:29445,&#34;totalExchanges&#34;:171,&#34;totalMarketCap&#34;:&#34;942500653145&#34;,&#34;total24hVolume&#34;:&#34;56470853554&#34;},&#34;coins&#34;:[{&#34;uuid&#34;:&#34;Qwsogvtv82FCd&#34;,&#34;symbol&#34;:&#34;BTC&#34;,&#34;name&#34;:&#34;Bitcoin&#34;,&#34;color&#34;:&#34;#f7931A&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg&#34;,&#34;marketCap&#34;:&#34;365436919376&#34;,&#34;price&#34;:&#34;19057.280343776176&#34;,&#34;listedAt&#34;:1330214400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.94&#34;,&#34;rank&#34;:1,&#34;sparkline&#34;:[&#34;19488.1506450618&#34;,&#34;19512.288719015418&#34;,&#34;19491.89908856991&#34;,&#34;19460.76987970102&#34;,&#34;19465.456163058043&#34;,&#34;19434.89948882122&#34;,&#34;19424.768739053052&#34;,&#34;19381.495949060733&#34;,&#34;19255.508791978747&#34;,&#34;19304.796794285616&#34;,&#34;19320.029567506706&#34;,&#34;19342.555032513174&#34;,&#34;19393.206439966132&#34;,&#34;19353.356689246357&#34;,&#34;19295.4730157485&#34;,&#34;19277.110522578794&#34;,&#34;19205.507401280112&#34;,&#34;19230.513330824815&#34;,&#34;19269.20760106672&#34;,&#34;19226.28810639702&#34;,&#34;19233.1885342983&#34;,&#34;19245.24660168312&#34;,&#34;19194.126587054343&#34;,&#34;19166.758434710086&#34;,&#34;19115.42500868895&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc&#34;,&#34;24hVolume&#34;:&#34;28792587963&#34;,&#34;btcPrice&#34;:&#34;1&#34;},{&#34;uuid&#34;:&#34;razxDUgYGNAdQ&#34;,&#34;symbol&#34;:&#34;ETH&#34;,&#34;name&#34;:&#34;Ethereum&#34;,&#34;color&#34;:&#34;#3C3C3D&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rk4RKHOuW/eth.svg&#34;,&#34;marketCap&#34;:&#34;156488062964&#34;,&#34;price&#34;:&#34;1278.7448565611858&#34;,&#34;listedAt&#34;:1438905600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-3.37&#34;,&#34;rank&#34;:2,&#34;sparkline&#34;:[&#34;1331.5044546621384&#34;,&#34;1330.4653962139093&#34;,&#34;1325.955519830478&#34;,&#34;1323.9386642517868&#34;,&#34;1324.313403721748&#34;,&#34;1319.7955940519878&#34;,&#34;1317.963290856793&#34;,&#34;1315.2610947850062&#34;,&#34;1306.4389281042727&#34;,&#34;1310.8645857269105&#34;,&#34;1312.9170218694812&#34;,&#34;1315.0839615355765&#34;,&#34;1316.8018884207568&#34;,&#34;1312.9151771475322&#34;,&#34;1309.4402032235853&#34;,&#34;1308.7145413566764&#34;,&#34;1304.3906358981922&#34;,&#34;1305.8987603903568&#34;,&#34;1309.2574980594059&#34;,&#34;1308.3399813540152&#34;,&#34;1308.156914595738&#34;,&#34;1306.9719788418965&#34;,&#34;1299.4746424816135&#34;,&#34;1294.312920524021&#34;,&#34;1285.7931534436002&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/razxDUgYGNAdQ+ethereum-eth&#34;,&#34;24hVolume&#34;:&#34;9402528857&#34;,&#34;btcPrice&#34;:&#34;0.0671000706026138&#34;},{&#34;uuid&#34;:&#34;HIVsRcGKkPFtW&#34;,&#34;symbol&#34;:&#34;USDT&#34;,&#34;name&#34;:&#34;Tether USD&#34;,&#34;color&#34;:&#34;#22a079&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mgHqwlCLj/usdt.svg&#34;,&#34;marketCap&#34;:&#34;68469359310&#34;,&#34;price&#34;:&#34;1.0006942257899014&#34;,&#34;listedAt&#34;:1420761600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.06&#34;,&#34;rank&#34;:3,&#34;sparkline&#34;:[&#34;1.00001000523563&#34;,&#34;1.0011034439527615&#34;,&#34;1.001161264197156&#34;,&#34;1.0010572266113555&#34;,&#34;1.0005697814658174&#34;,&#34;1.0010922851917061&#34;,&#34;1.0008441808312771&#34;,&#34;1.0017436449079997&#34;,&#34;1.0007027635542591&#34;,&#34;0.9996645367670199&#34;,&#34;0.9999390115468976&#34;,&#34;0.9999094436014718&#34;,&#34;0.9996875863868945&#34;,&#34;1.0006879906066195&#34;,&#34;1.000484422046895&#34;,&#34;1.0000893181295456&#34;,&#34;1.0009961139938581&#34;,&#34;0.998967652984781&#34;,&#34;1.0001297995181815&#34;,&#34;1.0001812711445561&#34;,&#34;0.9998776147234318&#34;,&#34;0.9999456923398682&#34;,&#34;1.0014649584038038&#34;,&#34;1.0003745939212896&#34;,&#34;1.0017869884406445&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/HIVsRcGKkPFtW+tetherusd-usdt&#34;,&#34;24hVolume&#34;:&#34;37713786549&#34;,&#34;btcPrice&#34;:&#34;0.000052509812929142&#34;},{&#34;uuid&#34;:&#34;aKzUVe4Hh_CON&#34;,&#34;symbol&#34;:&#34;USDC&#34;,&#34;name&#34;:&#34;USDC&#34;,&#34;color&#34;:&#34;#7894b4&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/jkDf8sQbY/usdc.svg&#34;,&#34;marketCap&#34;:&#34;46060009308&#34;,&#34;price&#34;:&#34;1.001516752958171&#34;,&#34;listedAt&#34;:1539043200,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.08&#34;,&#34;rank&#34;:4,&#34;sparkline&#34;:[&#34;0.9999464672512742&#34;,&#34;1.0007495887701197&#34;,&#34;1.0008677225113292&#34;,&#34;1.0009310935906095&#34;,&#34;1.0004184750469038&#34;,&#34;1.000901250517255&#34;,&#34;1.0006467731338917&#34;,&#34;1.0014501628343724&#34;,&#34;1.0009318082864203&#34;,&#34;0.9997130987136762&#34;,&#34;1.0000317574011472&#34;,&#34;0.9998815120266752&#34;,&#34;0.9995940525470003&#34;,&#34;1.0006321859803207&#34;,&#34;1.0003801151930976&#34;,&#34;1.0000183858482248&#34;,&#34;1.001053890492374&#34;,&#34;0.9991512285146926&#34;,&#34;1.000108983581862&#34;,&#34;1.0002461692196565&#34;,&#34;0.9999650013436789&#34;,&#34;0.9999452655588404&#34;,&#34;1.0014286785732378&#34;,&#34;1.0003739370478704&#34;,&#34;1.0016810358315087&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aKzUVe4Hh_CON+usdc-usdc&#34;,&#34;24hVolume&#34;:&#34;3068036632&#34;,&#34;btcPrice&#34;:&#34;0.000052552973713547&#34;},{&#34;uuid&#34;:&#34;WcwrkfNI4FUAe&#34;,&#34;symbol&#34;:&#34;BNB&#34;,&#34;name&#34;:&#34;Binance Coin&#34;,&#34;color&#34;:&#34;#e8b342&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1N19L_dZ/bnb.svg&#34;,&#34;marketCap&#34;:&#34;39022636628&#34;,&#34;price&#34;:&#34;269.35239602160357&#34;,&#34;listedAt&#34;:1503014400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.94&#34;,&#34;rank&#34;:5,&#34;sparkline&#34;:[&#34;278.5119412738475&#34;,&#34;278.8500346304702&#34;,&#34;278.55481674988823&#34;,&#34;278.15563968131687&#34;,&#34;278.27056641644765&#34;,&#34;277.6476509793223&#34;,&#34;277.1886552863454&#34;,&#34;276.16881192663146&#34;,&#34;273.63316482987625&#34;,&#34;274.4101654979415&#34;,&#34;274.737145190874&#34;,&#34;275.07124030373643&#34;,&#34;275.68159210343777&#34;,&#34;275.0410443309801&#34;,&#34;274.73037199504836&#34;,&#34;274.8554163480047&#34;,&#34;274.10875888352996&#34;,&#34;273.8179893160553&#34;,&#34;274.4492817889739&#34;,&#34;274.298685475948&#34;,&#34;274.67159767911375&#34;,&#34;274.9198236369963&#34;,&#34;273.8718264000287&#34;,&#34;272.7249664678188&#34;,&#34;271.1536159389556&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/WcwrkfNI4FUAe+binancecoin-bnb&#34;,&#34;24hVolume&#34;:&#34;779280699&#34;,&#34;btcPrice&#34;:&#34;0.014133831856525636&#34;},{&#34;uuid&#34;:&#34;-l8Mn2pVlRs-p&#34;,&#34;symbol&#34;:&#34;XRP&#34;,&#34;name&#34;:&#34;XRP&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1oPuTyfX/xrp.svg&#34;,&#34;marketCap&#34;:&#34;24617482897&#34;,&#34;price&#34;:&#34;0.49374621214983844&#34;,&#34;listedAt&#34;:1421798400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-7.11&#34;,&#34;rank&#34;:6,&#34;sparkline&#34;:[&#34;0.536001262965347&#34;,&#34;0.5331938666039274&#34;,&#34;0.5313677614997179&#34;,&#34;0.5321125340805518&#34;,&#34;0.5336003513686314&#34;,&#34;0.5289865890366551&#34;,&#34;0.5274128004730656&#34;,&#34;0.5219989218017307&#34;,&#34;0.5149385991747175&#34;,&#34;0.515854485381372&#34;,&#34;0.5167502267788407&#34;,&#34;0.5195469975711722&#34;,&#34;0.5202397696232272&#34;,&#34;0.5187425583816472&#34;,&#34;0.5183839704304823&#34;,&#34;0.5212630900119376&#34;,&#34;0.5199601816307717&#34;,&#34;0.5240089606534403&#34;,&#34;0.5255371203584706&#34;,&#34;0.5220263314887269&#34;,&#34;0.5221018096191841&#34;,&#34;0.5200142891397306&#34;,&#34;0.509361052693131&#34;,&#34;0.5013384770579202&#34;,&#34;0.4942989996608993&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/-l8Mn2pVlRs-p+xrp-xrp&#34;,&#34;24hVolume&#34;:&#34;3324267632&#34;,&#34;btcPrice&#34;:&#34;0.000025908534861381&#34;},{&#34;uuid&#34;:&#34;vSo2fu9iE1s0Y&#34;,&#34;symbol&#34;:&#34;BUSD&#34;,&#34;name&#34;:&#34;Binance USD&#34;,&#34;color&#34;:&#34;#f0b90b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/6SJHRfClq/busd.svg&#34;,&#34;marketCap&#34;:&#34;21560959768&#34;,&#34;price&#34;:&#34;1.0011741265983014&#34;,&#34;listedAt&#34;:1563197940,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.03&#34;,&#34;rank&#34;:7,&#34;sparkline&#34;:[&#34;1.0001030171416907&#34;,&#34;1.0010235858029901&#34;,&#34;1.0010528890095072&#34;,&#34;1.0009938666952272&#34;,&#34;1.000515128673911&#34;,&#34;1.0009273118659494&#34;,&#34;1.000611336250255&#34;,&#34;1.0014579970628081&#34;,&#34;1.000677349251088&#34;,&#34;0.9996807797683624&#34;,&#34;0.9998433930116546&#34;,&#34;0.9998522489705708&#34;,&#34;0.9996381055262161&#34;,&#34;1.0005974243549933&#34;,&#34;1.0004023284216412&#34;,&#34;1.000163659472327&#34;,&#34;1.0011862812978658&#34;,&#34;0.9990864256357932&#34;,&#34;1.0002355212738534&#34;,&#34;1.000269157695084&#34;,&#34;0.9999944965812787&#34;,&#34;1.0000100050682832&#34;,&#34;1.0016481968703868&#34;,&#34;1.000480327014256&#34;,&#34;1.0019087447403483&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/vSo2fu9iE1s0Y+binanceusd-busd&#34;,&#34;24hVolume&#34;:&#34;6511001667&#34;,&#34;btcPrice&#34;:&#34;0.000052534994948808&#34;},{&#34;uuid&#34;:&#34;qzawljRxB5bYu&#34;,&#34;symbol&#34;:&#34;ADA&#34;,&#34;name&#34;:&#34;Cardano&#34;,&#34;color&#34;:&#34;#3cc8c8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ryY28nXhW/ada.svg&#34;,&#34;marketCap&#34;:&#34;12234133405&#34;,&#34;price&#34;:&#34;0.3932226405369482&#34;,&#34;listedAt&#34;:1506902400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-7.00&#34;,&#34;rank&#34;:8,&#34;sparkline&#34;:[&#34;0.4248395839110206&#34;,&#34;0.4248859870710071&#34;,&#34;0.42454957159336026&#34;,&#34;0.42404560267712815&#34;,&#34;0.4238259339792199&#34;,&#34;0.4224438148871179&#34;,&#34;0.42209194632395824&#34;,&#34;0.42035582181732495&#34;,&#34;0.41547852410275193&#34;,&#34;0.4163366130530005&#34;,&#34;0.41765797260465715&#34;,&#34;0.4166603341689174&#34;,&#34;0.4168702171759364&#34;,&#34;0.41686684548569847&#34;,&#34;0.41583769229358947&#34;,&#34;0.41579821380978654&#34;,&#34;0.4143870909718264&#34;,&#34;0.4142685976806404&#34;,&#34;0.41513707858303306&#34;,&#34;0.41453684658495676&#34;,&#34;0.41379894391748345&#34;,&#34;0.4123725462795601&#34;,&#34;0.4080055032169277&#34;,&#34;0.405883954412975&#34;,&#34;0.39798476436528485&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qzawljRxB5bYu+cardano-ada&#34;,&#34;24hVolume&#34;:&#34;651377338&#34;,&#34;btcPrice&#34;:&#34;0.000020633722831567&#34;},{&#34;uuid&#34;:&#34;zNZHO_Sjf&#34;,&#34;symbol&#34;:&#34;SOL&#34;,&#34;name&#34;:&#34;Solana&#34;,&#34;color&#34;:&#34;#9cddec&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/yvUG4Qex5/solana.svg&#34;,&#34;marketCap&#34;:&#34;11268218358&#34;,&#34;price&#34;:&#34;31.523242018327903&#34;,&#34;listedAt&#34;:1586539320,&#34;tier&#34;:1,&#34;change&#34;:&#34;-4.29&#34;,&#34;rank&#34;:9,&#34;sparkline&#34;:[&#34;33.18789770753263&#34;,&#34;33.1927134280568&#34;,&#34;33.19781898483588&#34;,&#34;33.07642217617395&#34;,&#34;33.07172091668538&#34;,&#34;32.9266503861911&#34;,&#34;32.90455854621633&#34;,&#34;32.866187416403854&#34;,&#34;32.57602885895038&#34;,&#34;32.65354100721354&#34;,&#34;32.669857987515854&#34;,&#34;32.71817993307914&#34;,&#34;32.782767093985&#34;,&#34;32.63642525532733&#34;,&#34;32.572546699830895&#34;,&#34;32.6156230593697&#34;,&#34;32.51286713479698&#34;,&#34;32.43893950895768&#34;,&#34;32.463358235308455&#34;,&#34;32.521387492368184&#34;,&#34;32.48604760280608&#34;,&#34;32.4560223157472&#34;,&#34;32.26253486449203&#34;,&#34;32.150713790979786&#34;,&#34;31.78444656514117&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/zNZHO_Sjf+solana-sol&#34;,&#34;24hVolume&#34;:&#34;790085096&#34;,&#34;btcPrice&#34;:&#34;0.001654131200763016&#34;},{&#34;uuid&#34;:&#34;a91GCGd_u96cF&#34;,&#34;symbol&#34;:&#34;DOGE&#34;,&#34;name&#34;:&#34;Dogecoin&#34;,&#34;color&#34;:&#34;#c2a633&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/H1arXIuOZ/doge.svg&#34;,&#34;marketCap&#34;:&#34;7998544130&#34;,&#34;price&#34;:&#34;0.05863166282740626&#34;,&#34;listedAt&#34;:1391212800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.58&#34;,&#34;rank&#34;:10,&#34;sparkline&#34;:[&#34;0.062287345702963244&#34;,&#34;0.06241885274946726&#34;,&#34;0.062432991553733636&#34;,&#34;0.06229428237013838&#34;,&#34;0.06231802722929127&#34;,&#34;0.06218238985620366&#34;,&#34;0.06199532843621824&#34;,&#34;0.061597915389598704&#34;,&#34;0.06055655313562343&#34;,&#34;0.06077028914052766&#34;,&#34;0.06084247892627089&#34;,&#34;0.06094204711090153&#34;,&#34;0.06096044184402653&#34;,&#34;0.060875339606219436&#34;,&#34;0.060666134063607935&#34;,&#34;0.060640941337122084&#34;,&#34;0.060400845558136254&#34;,&#34;0.060447501789056966&#34;,&#34;0.06061659164177599&#34;,&#34;0.060621170829840004&#34;,&#34;0.06057544989711385&#34;,&#34;0.06060266085866204&#34;,&#34;0.06008729508201146&#34;,&#34;0.05976915584680669&#34;,&#34;0.05900134807559886&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/a91GCGd_u96cF+dogecoin-doge&#34;,&#34;24hVolume&#34;:&#34;364432574&#34;,&#34;btcPrice&#34;:&#34;0.000003076601790483&#34;},{&#34;uuid&#34;:&#34;25W7FG7om&#34;,&#34;symbol&#34;:&#34;DOT&#34;,&#34;name&#34;:&#34;Polkadot&#34;,&#34;color&#34;:&#34;#d64cA8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/RsljYqnbu/polkadot.svg&#34;,&#34;marketCap&#34;:&#34;7130690799&#34;,&#34;price&#34;:&#34;6.190998900134086&#34;,&#34;listedAt&#34;:1598365200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-4.63&#34;,&#34;rank&#34;:11,&#34;sparkline&#34;:[&#34;6.522414668255934&#34;,&#34;6.520203263943129&#34;,&#34;6.493546547021137&#34;,&#34;6.4578997776453795&#34;,&#34;6.461761001965112&#34;,&#34;6.433328310449588&#34;,&#34;6.416466404167233&#34;,&#34;6.395067921292741&#34;,&#34;6.321212748572312&#34;,&#34;6.347002042078148&#34;,&#34;6.352722958380046&#34;,&#34;6.356290684071334&#34;,&#34;6.377871401905183&#34;,&#34;6.365844008519976&#34;,&#34;6.349456462131741&#34;,&#34;6.345065195560296&#34;,&#34;6.330472921445338&#34;,&#34;6.341417794562836&#34;,&#34;6.347150210132025&#34;,&#34;6.354097666999308&#34;,&#34;6.35742194931169&#34;,&#34;6.352193159517849&#34;,&#34;6.322081551689837&#34;,&#34;6.305088908171669&#34;,&#34;6.2315585242715965&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/25W7FG7om+polkadot-dot&#34;,&#34;24hVolume&#34;:&#34;274965800&#34;,&#34;btcPrice&#34;:&#34;0.000324862666049617&#34;},{&#34;uuid&#34;:&#34;uW2tk-ILY0ii&#34;,&#34;symbol&#34;:&#34;MATIC&#34;,&#34;name&#34;:&#34;Polygon&#34;,&#34;color&#34;:&#34;#8247e5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WulYRq14o/polygon.png&#34;,&#34;marketCap&#34;:&#34;7045070277&#34;,&#34;price&#34;:&#34;0.8046293570356682&#34;,&#34;listedAt&#34;:1558961160,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.77&#34;,&#34;rank&#34;:12,&#34;sparkline&#34;:[&#34;0.8355947783401839&#34;,&#34;0.8338055756126723&#34;,&#34;0.8324855038415062&#34;,&#34;0.8311784328288198&#34;,&#34;0.8320848378678446&#34;,&#34;0.8292640573568149&#34;,&#34;0.8292414803865568&#34;,&#34;0.8266214710142122&#34;,&#34;0.8185179143282095&#34;,&#34;0.8218278450071256&#34;,&#34;0.8225911804857766&#34;,&#34;0.8251238788232297&#34;,&#34;0.8362829959709097&#34;,&#34;0.8345234984931166&#34;,&#34;0.8338413152773577&#34;,&#34;0.8361717933703776&#34;,&#34;0.8355817885790918&#34;,&#34;0.8361330733155342&#34;,&#34;0.8379349680654332&#34;,&#34;0.8358692173695744&#34;,&#34;0.8361429404775895&#34;,&#34;0.837381294126906&#34;,&#34;0.8328412171573272&#34;,&#34;0.8241211720588503&#34;,&#34;0.811636490175781&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/uW2tk-ILY0ii+polygon-matic&#34;,&#34;24hVolume&#34;:&#34;341018405&#34;,&#34;btcPrice&#34;:&#34;0.000042221625673804&#34;},{&#34;uuid&#34;:&#34;MoTuySvg7&#34;,&#34;symbol&#34;:&#34;DAI&#34;,&#34;name&#34;:&#34;Dai&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mAZ_7LwOE/mutli-collateral-dai.svg&#34;,&#34;marketCap&#34;:&#34;6290473766&#34;,&#34;price&#34;:&#34;1.0016189326906015&#34;,&#34;listedAt&#34;:1585574040,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.12&#34;,&#34;rank&#34;:13,&#34;sparkline&#34;:[&#34;0.9995952797984599&#34;,&#34;1.0005944275946466&#34;,&#34;1.0006989278642797&#34;,&#34;1.0006570846371072&#34;,&#34;1.00014172207927&#34;,&#34;1.000607221507067&#34;,&#34;1.0004256035942012&#34;,&#34;1.0010836396182805&#34;,&#34;1.0006642958554737&#34;,&#34;0.999512025173032&#34;,&#34;0.9998341824770189&#34;,&#34;0.999745222484189&#34;,&#34;0.9995131455916638&#34;,&#34;1.0003442549883552&#34;,&#34;1.000418137069989&#34;,&#34;0.9996749185659772&#34;,&#34;1.00033783566407&#34;,&#34;0.9998953811696848&#34;,&#34;0.9996573747638419&#34;,&#34;1.0000083273029405&#34;,&#34;0.9998671046404827&#34;,&#34;0.9999409906864343&#34;,&#34;1.0007177269282244&#34;,&#34;1.0009040784563923&#34;,&#34;1.0010582292761356&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/MoTuySvg7+dai-dai&#34;,&#34;24hVolume&#34;:&#34;107751594&#34;,&#34;btcPrice&#34;:&#34;0.000052558335429941&#34;},{&#34;uuid&#34;:&#34;xz24e0BjL&#34;,&#34;symbol&#34;:&#34;SHIB&#34;,&#34;name&#34;:&#34;Shiba Inu&#34;,&#34;color&#34;:&#34;#fda32b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/D69LfI-tm/shib.png&#34;,&#34;marketCap&#34;:&#34;5955829983&#34;,&#34;price&#34;:&#34;0.00001010227002507&#34;,&#34;listedAt&#34;:1620650373,&#34;tier&#34;:1,&#34;change&#34;:&#34;-8.58&#34;,&#34;rank&#34;:14,&#34;sparkline&#34;:[&#34;0.000011085667477873&#34;,&#34;0.000011085427478335&#34;,&#34;0.000011057891826386&#34;,&#34;0.000011035159861281&#34;,&#34;0.000011034400237589&#34;,&#34;0.000011011657864712&#34;,&#34;0.000010995230528756&#34;,&#34;0.000010948690684111&#34;,&#34;0.000010847302094506&#34;,&#34;0.000010877766772867&#34;,&#34;0.000010874859587745&#34;,&#34;0.000010875576263496&#34;,&#34;0.000010880901926293&#34;,&#34;0.000010844023987075&#34;,&#34;0.000010804528806046&#34;,&#34;0.000010809603041135&#34;,&#34;0.000010745372617173&#34;,&#34;0.0000107213976394&#34;,&#34;0.000010741628745016&#34;,&#34;0.000010739063895767&#34;,&#34;0.000010742733707646&#34;,&#34;0.0000107364719857&#34;,&#34;0.000010507878122533&#34;,&#34;0.000010366535432926&#34;,&#34;0.000010158756516898&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/xz24e0BjL+shibainu-shib&#34;,&#34;24hVolume&#34;:&#34;331561288&#34;,&#34;btcPrice&#34;:&#34;5.301003e-10&#34;},{&#34;uuid&#34;:&#34;qUhEFk1I61atv&#34;,&#34;symbol&#34;:&#34;TRX&#34;,&#34;name&#34;:&#34;TRON&#34;,&#34;color&#34;:&#34;#eb0029&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/behejNqQs/trx.svg&#34;,&#34;marketCap&#34;:&#34;5738503869&#34;,&#34;price&#34;:&#34;0.06215358754277865&#34;,&#34;listedAt&#34;:1505260800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.72&#34;,&#34;rank&#34;:15,&#34;sparkline&#34;:[&#34;0.06247616120182798&#34;,&#34;0.06246937156935979&#34;,&#34;0.06253567388706331&#34;,&#34;0.06329507247095194&#34;,&#34;0.06386497553291684&#34;,&#34;0.06409887046474316&#34;,&#34;0.0644208178957639&#34;,&#34;0.06421192875139836&#34;,&#34;0.0640879476466854&#34;,&#34;0.06450582979819015&#34;,&#34;0.06418713281497941&#34;,&#34;0.06389192711997757&#34;,&#34;0.06385196700333104&#34;,&#34;0.06384764698414129&#34;,&#34;0.06370402395413473&#34;,&#34;0.06365255134176188&#34;,&#34;0.06345367803143843&#34;,&#34;0.06337662524119668&#34;,&#34;0.06348631048281347&#34;,&#34;0.06351012216233788&#34;,&#34;0.0635182991486947&#34;,&#34;0.06376266708708926&#34;,&#34;0.06370716120506523&#34;,&#34;0.06309971001866953&#34;,&#34;0.06264473407430877&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qUhEFk1I61atv+tron-trx&#34;,&#34;24hVolume&#34;:&#34;582562592&#34;,&#34;btcPrice&#34;:&#34;0.000003261409100437&#34;},{&#34;uuid&#34;:&#34;Mtfb0obXVh59u&#34;,&#34;symbol&#34;:&#34;WETH&#34;,&#34;name&#34;:&#34;Wrapped Ether&#34;,&#34;color&#34;:&#34;#303030&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/KIviQyZlt/weth.svg&#34;,&#34;marketCap&#34;:&#34;5232991603&#34;,&#34;price&#34;:&#34;1283.4302597229096&#34;,&#34;listedAt&#34;:1600259445,&#34;tier&#34;:1,&#34;change&#34;:&#34;-3.23&#34;,&#34;rank&#34;:16,&#34;sparkline&#34;:[&#34;1326.8994579417572&#34;,&#34;1329.082588936404&#34;,&#34;1325.3806266699617&#34;,&#34;1327.9636361826838&#34;,&#34;1322.658292904248&#34;,&#34;1318.291837008896&#34;,&#34;1323.8570639083352&#34;,&#34;1318.2953627197976&#34;,&#34;1310.2980526689626&#34;,&#34;1312.270149865777&#34;,&#34;1312.8128282299035&#34;,&#34;1314.505568224447&#34;,&#34;1316.0722115717056&#34;,&#34;1313.86091043222&#34;,&#34;1314.5406743552123&#34;,&#34;1312.221165655094&#34;,&#34;1309.339952066803&#34;,&#34;1306.1936121052709&#34;,&#34;1311.789293601869&#34;,&#34;1310.0362605393268&#34;,&#34;1309.71409354287&#34;,&#34;1309.6868774391862&#34;,&#34;1303.9351604172366&#34;,&#34;1295.2887096839981&#34;,&#34;1290.963222894555&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Mtfb0obXVh59u+wrappedether-weth&#34;,&#34;24hVolume&#34;:&#34;60622448&#34;,&#34;btcPrice&#34;:&#34;0.06734592956450153&#34;},{&#34;uuid&#34;:&#34;_H5FVG9iW&#34;,&#34;symbol&#34;:&#34;UNI&#34;,&#34;name&#34;:&#34;Uniswap&#34;,&#34;color&#34;:&#34;#ff007a&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1heSvUgtl/uniswap-v2.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;4955985628&#34;,&#34;price&#34;:&#34;6.38200976407113&#34;,&#34;listedAt&#34;:1600323371,&#34;tier&#34;:1,&#34;change&#34;:&#34;-3.65&#34;,&#34;rank&#34;:17,&#34;sparkline&#34;:[&#34;6.68493097315378&#34;,&#34;6.6508243591566645&#34;,&#34;6.619564394233391&#34;,&#34;6.588639754638839&#34;,&#34;6.564769806187757&#34;,&#34;6.525285033982343&#34;,&#34;6.509442090421682&#34;,&#34;6.465976702400582&#34;,&#34;6.359592112172924&#34;,&#34;6.38246396339638&#34;,&#34;6.391837237499858&#34;,&#34;6.4066385130391055&#34;,&#34;6.4294186545024115&#34;,&#34;6.401093874922428&#34;,&#34;6.369940033084528&#34;,&#34;6.385004723778107&#34;,&#34;6.338066446407772&#34;,&#34;6.339321320671483&#34;,&#34;6.379166316406551&#34;,&#34;6.366083651283065&#34;,&#34;6.356164240275081&#34;,&#34;6.355178188304351&#34;,&#34;6.333594981574734&#34;,&#34;6.3803920539256795&#34;,&#34;6.365829911021807&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/_H5FVG9iW+uniswap-uni&#34;,&#34;24hVolume&#34;:&#34;94892188&#34;,&#34;btcPrice&#34;:&#34;0.000334885652566653&#34;},{&#34;uuid&#34;:&#34;dvUj0CzDZ&#34;,&#34;symbol&#34;:&#34;AVAX&#34;,&#34;name&#34;:&#34;Avalanche&#34;,&#34;color&#34;:&#34;#e84242&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/S0C6Cw2-w/avax-avalanche.png&#34;,&#34;marketCap&#34;:&#34;4713530957&#34;,&#34;price&#34;:&#34;15.916309864882791&#34;,&#34;listedAt&#34;:1600961596,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.97&#34;,&#34;rank&#34;:18,&#34;sparkline&#34;:[&#34;17.102172493689842&#34;,&#34;17.106125431403875&#34;,&#34;17.039032111565433&#34;,&#34;17.008332051978044&#34;,&#34;17.002924436167042&#34;,&#34;16.936349177621757&#34;,&#34;16.913126378328176&#34;,&#34;16.847601633714635&#34;,&#34;16.658660902198505&#34;,&#34;16.70403290401331&#34;,&#34;16.707324912529838&#34;,&#34;16.70727722123129&#34;,&#34;16.749850973650503&#34;,&#34;16.715137480599257&#34;,&#34;16.678524709275052&#34;,&#34;16.685648108045566&#34;,&#34;16.617456400020398&#34;,&#34;16.594059541623484&#34;,&#34;16.594896192785644&#34;,&#34;16.59463747940776&#34;,&#34;16.588924469841242&#34;,&#34;16.58785905301111&#34;,&#34;16.43613225433572&#34;,&#34;16.297278829294456&#34;,&#34;16.073755064596764&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/dvUj0CzDZ+avalanche-avax&#34;,&#34;24hVolume&#34;:&#34;231370659&#34;,&#34;btcPrice&#34;:&#34;0.000835182648193598&#34;},{&#34;uuid&#34;:&#34;N2IgQ9Xme&#34;,&#34;symbol&#34;:&#34;BIT&#34;,&#34;name&#34;:&#34;BitDAO &#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/0ClFW1IpO/bitdao.png&#34;,&#34;marketCap&#34;:&#34;4372940450&#34;,&#34;price&#34;:&#34;0.4372940449727807&#34;,&#34;listedAt&#34;:1639033619,&#34;tier&#34;:1,&#34;change&#34;:&#34;-4.25&#34;,&#34;rank&#34;:19,&#34;sparkline&#34;:[&#34;0.46219072056129445&#34;,&#34;0.46687259427130223&#34;,&#34;0.4692093158839787&#34;,&#34;0.46618234487860366&#34;,&#34;0.46986913457015855&#34;,&#34;0.469132056591609&#34;,&#34;0.47246686104851215&#34;,&#34;0.46690206949738644&#34;,&#34;0.4644340510926768&#34;,&#34;0.4694372404900944&#34;,&#34;0.4708098764137554&#34;,&#34;0.4645327591092195&#34;,&#34;0.4556222929795641&#34;,&#34;0.4770183163625606&#34;,&#34;0.45454390317353893&#34;,&#34;0.4443108288671447&#34;,&#34;0.4520873099391207&#34;,&#34;0.44801571799726564&#34;,&#34;0.4454577497382288&#34;,&#34;0.44055817469528386&#34;,&#34;0.4326108998559247&#34;,&#34;0.4320145274426853&#34;,&#34;0.4340533847260149&#34;,&#34;0.4333167581429271&#34;,&#34;0.4349762069503781&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/N2IgQ9Xme+bitdao-bit&#34;,&#34;24hVolume&#34;:&#34;5442752&#34;,&#34;btcPrice&#34;:&#34;0.000022946298584289&#34;},{&#34;uuid&#34;:&#34;ncYFcP709&#34;,&#34;symbol&#34;:&#34;CAKE&#34;,&#34;name&#34;:&#34;PancakeSwap&#34;,&#34;color&#34;:&#34;#fe9555&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/aRtgdw7bQ/pancakeswap-cake-logo.png&#34;,&#34;marketCap&#34;:&#34;4172002580&#34;,&#34;price&#34;:&#34;4.452946301781518&#34;,&#34;listedAt&#34;:1613642379,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.86&#34;,&#34;rank&#34;:20,&#34;sparkline&#34;:[&#34;4.541557235833156&#34;,&#34;4.553964309919697&#34;,&#34;4.573807506121347&#34;,&#34;4.583824533409134&#34;,&#34;4.58777083313669&#34;,&#34;4.578042042096431&#34;,&#34;4.56839051236663&#34;,&#34;4.556957243152516&#34;,&#34;4.514361093190037&#34;,&#34;4.51411826226915&#34;,&#34;4.515874263628293&#34;,&#34;4.521976084538046&#34;,&#34;4.532935644766504&#34;,&#34;4.521760014965639&#34;,&#34;4.520019289197111&#34;,&#34;4.517811278099297&#34;,&#34;4.511330848545448&#34;,&#34;4.505980821110556&#34;,&#34;4.522281220765949&#34;,&#34;4.520214786876497&#34;,&#34;4.535313546126254&#34;,&#34;4.5379942350086&#34;,&#34;4.5258396094226265&#34;,&#34;4.508058752658336&#34;,&#34;4.4841101289744385&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ncYFcP709+pancakeswap-cake&#34;,&#34;24hVolume&#34;:&#34;42421456&#34;,&#34;btcPrice&#34;:&#34;0.000233661163684134&#34;},{&#34;uuid&#34;:&#34;PDKcptVnzJTmN&#34;,&#34;symbol&#34;:&#34;OKB&#34;,&#34;name&#34;:&#34;OKB&#34;,&#34;color&#34;:&#34;#2d60e0&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xcZdYtX6E/okx.png&#34;,&#34;marketCap&#34;:&#34;3939997447&#34;,&#34;price&#34;:&#34;15.658048903533913&#34;,&#34;listedAt&#34;:1538524800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.62&#34;,&#34;rank&#34;:21,&#34;sparkline&#34;:[&#34;15.591467798627574&#34;,&#34;15.581556794047126&#34;,&#34;15.605175449313528&#34;,&#34;15.615289675489006&#34;,&#34;15.625038128428859&#34;,&#34;15.604174085630548&#34;,&#34;15.574545856650806&#34;,&#34;15.572868875583644&#34;,&#34;15.542121912197215&#34;,&#34;16.134833115902538&#34;,&#34;15.899972098068528&#34;,&#34;15.765470392550053&#34;,&#34;15.81243740688281&#34;,&#34;15.777447467300988&#34;,&#34;15.713267957178454&#34;,&#34;15.962280261827383&#34;,&#34;15.902858045834567&#34;,&#34;15.909962681403238&#34;,&#34;15.98501056643548&#34;,&#34;16.078829507569637&#34;,&#34;16.132642151938278&#34;,&#34;16.164743630858517&#34;,&#34;16.079039642144338&#34;,&#34;15.867529576327358&#34;,&#34;15.72388505518818&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/PDKcptVnzJTmN+okb-okb&#34;,&#34;24hVolume&#34;:&#34;31646834&#34;,&#34;btcPrice&#34;:&#34;0.000821630821453891&#34;},{&#34;uuid&#34;:&#34;Knsels4_Ol-Ny&#34;,&#34;symbol&#34;:&#34;ATOM&#34;,&#34;name&#34;:&#34;Cosmos&#34;,&#34;color&#34;:&#34;#5064fb&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HJzHboruM/atom.svg&#34;,&#34;marketCap&#34;:&#34;3838471982&#34;,&#34;price&#34;:&#34;12.310514152737007&#34;,&#34;listedAt&#34;:1552520100,&#34;tier&#34;:1,&#34;change&#34;:&#34;-6.73&#34;,&#34;rank&#34;:22,&#34;sparkline&#34;:[&#34;13.240493051122758&#34;,&#34;13.203524128662405&#34;,&#34;13.208534134223218&#34;,&#34;13.183274155293194&#34;,&#34;13.188652235304392&#34;,&#34;13.130616652861544&#34;,&#34;13.087202881216099&#34;,&#34;13.022583539133564&#34;,&#34;12.833791235932797&#34;,&#34;12.91152394466347&#34;,&#34;12.917631378513779&#34;,&#34;12.915336415870756&#34;,&#34;12.931095667137745&#34;,&#34;12.896974898580421&#34;,&#34;12.85128908107414&#34;,&#34;12.828121310377496&#34;,&#34;12.761155957427574&#34;,&#34;12.808555314335083&#34;,&#34;12.812478669821102&#34;,&#34;12.80338000836718&#34;,&#34;12.809523682571344&#34;,&#34;12.803819146764381&#34;,&#34;12.63499420421776&#34;,&#34;12.533045194692802&#34;,&#34;12.39494562316739&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Knsels4_Ol-Ny+cosmos-atom&#34;,&#34;24hVolume&#34;:&#34;226978137&#34;,&#34;btcPrice&#34;:&#34;0.00064597434317313&#34;},{&#34;uuid&#34;:&#34;D7B1x_ks7WhV5&#34;,&#34;symbol&#34;:&#34;LTC&#34;,&#34;name&#34;:&#34;Litecoin&#34;,&#34;color&#34;:&#34;#345d9d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BUvPxmc9o/ltcnew.svg&#34;,&#34;marketCap&#34;:&#34;3671778271&#34;,&#34;price&#34;:&#34;51.813480569758035&#34;,&#34;listedAt&#34;:1382572800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-3.66&#34;,&#34;rank&#34;:23,&#34;sparkline&#34;:[&#34;54.1000851431424&#34;,&#34;54.27021929978684&#34;,&#34;54.125395630457135&#34;,&#34;54.132240684743294&#34;,&#34;54.23893338997876&#34;,&#34;54.07377284759855&#34;,&#34;54.1679566579363&#34;,&#34;53.84007221876719&#34;,&#34;53.12257151076325&#34;,&#34;53.170894312134216&#34;,&#34;53.18262913302431&#34;,&#34;53.24645665562231&#34;,&#34;53.404614642325456&#34;,&#34;53.30623803791401&#34;,&#34;53.265874313817235&#34;,&#34;53.346154348056324&#34;,&#34;53.13888824994733&#34;,&#34;53.159059442536595&#34;,&#34;53.39761367045488&#34;,&#34;53.29231429107475&#34;,&#34;53.223310947009615&#34;,&#34;53.23006885366571&#34;,&#34;53.00789818578906&#34;,&#34;52.87617307993683&#34;,&#34;52.435013585432024&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/D7B1x_ks7WhV5+litecoin-ltc&#34;,&#34;24hVolume&#34;:&#34;815832184&#34;,&#34;btcPrice&#34;:&#34;0.002718828690930159&#34;},{&#34;uuid&#34;:&#34;NfeOYfNcl&#34;,&#34;symbol&#34;:&#34;FTT&#34;,&#34;name&#34;:&#34;FTX Token&#34;,&#34;color&#34;:&#34;#77d9ed&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WyBm4_EzM/ftx-exchange.svg&#34;,&#34;marketCap&#34;:&#34;3123792551&#34;,&#34;price&#34;:&#34;23.40123722292071&#34;,&#34;listedAt&#34;:1566222960,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.87&#34;,&#34;rank&#34;:24,&#34;sparkline&#34;:[&#34;24.21015183147499&#34;,&#34;24.220054760344564&#34;,&#34;24.179767250800577&#34;,&#34;24.131283799723153&#34;,&#34;24.142356189331963&#34;,&#34;24.094101705934523&#34;,&#34;24.07183800573253&#34;,&#34;23.976425552458803&#34;,&#34;23.800239511827083&#34;,&#34;23.858823356389482&#34;,&#34;23.88382507874892&#34;,&#34;23.905857316326845&#34;,&#34;23.940131427563436&#34;,&#34;23.88929633497909&#34;,&#34;23.8192436326369&#34;,&#34;23.81105431094406&#34;,&#34;23.825282932239414&#34;,&#34;23.895411807834172&#34;,&#34;23.974143097182885&#34;,&#34;23.924216793892825&#34;,&#34;23.888623840601248&#34;,&#34;23.83839708625212&#34;,&#34;23.717141798027882&#34;,&#34;23.627292896923777&#34;,&#34;23.50122731707467&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/NfeOYfNcl+ftxtoken-ftt&#34;,&#34;24hVolume&#34;:&#34;58047366&#34;,&#34;btcPrice&#34;:&#34;0.00122794211979797&#34;},{&#34;uuid&#34;:&#34;hnfQfsYfeIGUQ&#34;,&#34;symbol&#34;:&#34;ETC&#34;,&#34;name&#34;:&#34;Ethereum Classic&#34;,&#34;color&#34;:&#34;#699070&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rJfyor__W/etc.svg&#34;,&#34;marketCap&#34;:&#34;2805290677&#34;,&#34;price&#34;:&#34;24.11840005360424&#34;,&#34;listedAt&#34;:1469577600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-10.44&#34;,&#34;rank&#34;:25,&#34;sparkline&#34;:[&#34;27.05917806652507&#34;,&#34;27.085146005847005&#34;,&#34;27.021522040375903&#34;,&#34;26.98432169078792&#34;,&#34;27.027122025302848&#34;,&#34;26.938055939992594&#34;,&#34;26.88692356088141&#34;,&#34;26.733372507855588&#34;,&#34;26.07984975346962&#34;,&#34;26.203893328703757&#34;,&#34;26.196034802120074&#34;,&#34;26.21066200473368&#34;,&#34;26.215036444445808&#34;,&#34;26.09554735934327&#34;,&#34;25.996745169147832&#34;,&#34;25.96014866288886&#34;,&#34;25.723681881869403&#34;,&#34;25.485556955797403&#34;,&#34;25.433836911692385&#34;,&#34;25.389227367676206&#34;,&#34;25.39415910507938&#34;,&#34;25.272615402797435&#34;,&#34;24.566226844483666&#34;,&#34;24.0133629050694&#34;,&#34;24.092033411493283&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/hnfQfsYfeIGUQ+ethereumclassic-etc&#34;,&#34;24hVolume&#34;:&#34;655495728&#34;,&#34;btcPrice&#34;:&#34;0.001265574080799045&#34;},{&#34;uuid&#34;:&#34;3mVx2FX_iJFp5&#34;,&#34;symbol&#34;:&#34;XMR&#34;,&#34;name&#34;:&#34;Monero&#34;,&#34;color&#34;:&#34;#ff7519&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Syz-oSd_Z/xmr.svg&#34;,&#34;marketCap&#34;:&#34;2560841125&#34;,&#34;price&#34;:&#34;140.8167083471278&#34;,&#34;listedAt&#34;:1422489600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-3.06&#34;,&#34;rank&#34;:26,&#34;sparkline&#34;:[&#34;146.00566200098044&#34;,&#34;146.00792262140632&#34;,&#34;146.02250460772956&#34;,&#34;145.5932155244998&#34;,&#34;145.69944844013193&#34;,&#34;145.9766522870928&#34;,&#34;146.32630032209514&#34;,&#34;146.77317212988203&#34;,&#34;146.52768877422028&#34;,&#34;146.50833060658488&#34;,&#34;146.69928240746736&#34;,&#34;147.24593046538627&#34;,&#34;146.27781177344886&#34;,&#34;145.69001097101844&#34;,&#34;144.7291481840076&#34;,&#34;144.54447840609456&#34;,&#34;144.68891252302785&#34;,&#34;144.73928335075118&#34;,&#34;145.45297214599893&#34;,&#34;145.6421522179348&#34;,&#34;145.95049062123445&#34;,&#34;145.23398099213773&#34;,&#34;143.7977100630252&#34;,&#34;142.84670552317044&#34;,&#34;141.83157545956604&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/3mVx2FX_iJFp5+monero-xmr&#34;,&#34;24hVolume&#34;:&#34;87794579&#34;,&#34;btcPrice&#34;:&#34;0.007389129288488241&#34;},{&#34;uuid&#34;:&#34;f3iaFeCKEmkaZ&#34;,&#34;symbol&#34;:&#34;XLM&#34;,&#34;name&#34;:&#34;Stellar&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/78CxK1xsp/Stellar_symbol_black_RGB.svg&#34;,&#34;marketCap&#34;:&#34;2464228015&#34;,&#34;price&#34;:&#34;0.12195813717616484&#34;,&#34;listedAt&#34;:1484611200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.54&#34;,&#34;rank&#34;:27,&#34;sparkline&#34;:[&#34;0.12848425006001754&#34;,&#34;0.1283184926390934&#34;,&#34;0.12820990817867112&#34;,&#34;0.1277309687147149&#34;,&#34;0.12793994706722867&#34;,&#34;0.12779451373630296&#34;,&#34;0.1279981337959677&#34;,&#34;0.1275563491104387&#34;,&#34;0.12664330160790727&#34;,&#34;0.12611858328006822&#34;,&#34;0.1265770132845544&#34;,&#34;0.12713336834938954&#34;,&#34;0.12698191868487532&#34;,&#34;0.1265359451505847&#34;,&#34;0.1264093054866322&#34;,&#34;0.12682034105686052&#34;,&#34;0.1262686523687261&#34;,&#34;0.12625943495967626&#34;,&#34;0.12626773861063678&#34;,&#34;0.1256827128674751&#34;,&#34;0.12576799709600534&#34;,&#34;0.12590431001694352&#34;,&#34;0.12543067128417607&#34;,&#34;0.12468526520336248&#34;,&#34;0.12316388238292895&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/f3iaFeCKEmkaZ+stellar-xlm&#34;,&#34;24hVolume&#34;:&#34;174287473&#34;,&#34;btcPrice&#34;:&#34;0.000006399556231327&#34;},{&#34;uuid&#34;:&#34;TpHE2IShQw-sJ&#34;,&#34;symbol&#34;:&#34;ALGO&#34;,&#34;name&#34;:&#34;Algorand&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/lzbmCkUGB/algo.svg&#34;,&#34;marketCap&#34;:&#34;2198328406&#34;,&#34;price&#34;:&#34;0.31336193398363577&#34;,&#34;listedAt&#34;:1562082540,&#34;tier&#34;:1,&#34;change&#34;:&#34;-7.13&#34;,&#34;rank&#34;:28,&#34;sparkline&#34;:[&#34;0.3387279059107245&#34;,&#34;0.33960447654374765&#34;,&#34;0.3387528632782401&#34;,&#34;0.33728849659034166&#34;,&#34;0.3362320127566329&#34;,&#34;0.3353026876263522&#34;,&#34;0.33524720825683857&#34;,&#34;0.3334478138212442&#34;,&#34;0.32841029913086295&#34;,&#34;0.3298572823049579&#34;,&#34;0.3296470294960275&#34;,&#34;0.33019445864852315&#34;,&#34;0.33188733194567066&#34;,&#34;0.3306201386482936&#34;,&#34;0.32993652419443625&#34;,&#34;0.3297042437894816&#34;,&#34;0.3283348930494294&#34;,&#34;0.32910723981300416&#34;,&#34;0.33091333980253634&#34;,&#34;0.3301632231410812&#34;,&#34;0.3293750439520783&#34;,&#34;0.3293822678483606&#34;,&#34;0.3257250971984654&#34;,&#34;0.3222961123872611&#34;,&#34;0.3171107739403927&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/TpHE2IShQw-sJ+algorand-algo&#34;,&#34;24hVolume&#34;:&#34;100656678&#34;,&#34;btcPrice&#34;:&#34;0.000016443161265977&#34;},{&#34;uuid&#34;:&#34;9_jH48RBW&#34;,&#34;symbol&#34;:&#34;BTCB&#34;,&#34;name&#34;:&#34;Bitcoin BEP2&#34;,&#34;color&#34;:&#34;#ff9d14&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Swr_SeZio/4023.png&#34;,&#34;marketCap&#34;:&#34;2148089723&#34;,&#34;price&#34;:&#34;19093.961144724017&#34;,&#34;listedAt&#34;:1629334963,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.08&#34;,&#34;rank&#34;:29,&#34;sparkline&#34;:[&#34;19517.568192567353&#34;,&#34;19544.035967585016&#34;,&#34;19534.5324966652&#34;,&#34;19479.083337737316&#34;,&#34;19463.211729176997&#34;,&#34;19441.068605116212&#34;,&#34;19417.34589460331&#34;,&#34;19384.111502230724&#34;,&#34;19233.256635092377&#34;,&#34;19281.375796692217&#34;,&#34;19309.552774048192&#34;,&#34;19334.500781203707&#34;,&#34;19377.051756270946&#34;,&#34;19366.749202113468&#34;,&#34;19317.86326823132&#34;,&#34;19279.829000118752&#34;,&#34;19227.88086833714&#34;,&#34;19197.38183530521&#34;,&#34;19284.612388716956&#34;,&#34;19243.734456026377&#34;,&#34;19249.779948447147&#34;,&#34;19254.5926498183&#34;,&#34;19247.4558327948&#34;,&#34;19134.655143496842&#34;,&#34;19121.583876090168&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/9_jH48RBW+bitcoinbep2-btcb&#34;,&#34;24hVolume&#34;:&#34;22673489&#34;,&#34;btcPrice&#34;:&#34;1.0028180899287102&#34;},{&#34;uuid&#34;:&#34;ZlZpzOJo43mIo&#34;,&#34;symbol&#34;:&#34;BCH&#34;,&#34;name&#34;:&#34;Bitcoin Cash&#34;,&#34;color&#34;:&#34;#8dc451&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/By8ziihX7/bch.svg&#34;,&#34;marketCap&#34;:&#34;2112568822&#34;,&#34;price&#34;:&#34;110.42416308022558&#34;,&#34;listedAt&#34;:1541808000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.62&#34;,&#34;rank&#34;:30,&#34;sparkline&#34;:[&#34;117.56005081000826&#34;,&#34;117.71237065782286&#34;,&#34;117.74616923896222&#34;,&#34;117.33547072740411&#34;,&#34;117.53342711096377&#34;,&#34;117.06945355266835&#34;,&#34;116.94540133803127&#34;,&#34;116.4724680750463&#34;,&#34;115.13020819984767&#34;,&#34;115.43795612386734&#34;,&#34;115.69034484071328&#34;,&#34;115.74316570226732&#34;,&#34;115.8483687203122&#34;,&#34;115.71294151287276&#34;,&#34;115.28646128796524&#34;,&#34;115.01379243160117&#34;,&#34;114.47565278620961&#34;,&#34;114.35480605566333&#34;,&#34;114.2646039187397&#34;,&#34;113.59487064922739&#34;,&#34;113.54382352115324&#34;,&#34;113.44392303873478&#34;,&#34;112.68765593140844&#34;,&#34;112.00547273113798&#34;,&#34;111.11220100132405&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ZlZpzOJo43mIo+bitcoincash-bch&#34;,&#34;24hVolume&#34;:&#34;223029669&#34;,&#34;btcPrice&#34;:&#34;0.005794329573174825&#34;},{&#34;uuid&#34;:&#34;65PHZTpmE55b&#34;,&#34;symbol&#34;:&#34;CRO&#34;,&#34;name&#34;:&#34;Cronos&#34;,&#34;color&#34;:&#34;#01275d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/2o91jm73M/cro.svg&#34;,&#34;marketCap&#34;:&#34;2058413599&#34;,&#34;price&#34;:&#34;0.10207680396962117&#34;,&#34;listedAt&#34;:1548953220,&#34;tier&#34;:1,&#34;change&#34;:&#34;-4.52&#34;,&#34;rank&#34;:31,&#34;sparkline&#34;:[&#34;0.10748230279369461&#34;,&#34;0.10750938227871684&#34;,&#34;0.10776829107405585&#34;,&#34;0.1075306051725981&#34;,&#34;0.10796925406738075&#34;,&#34;0.10788907387494047&#34;,&#34;0.10785893214604376&#34;,&#34;0.10689834668953363&#34;,&#34;0.10587484287961471&#34;,&#34;0.10616196380785668&#34;,&#34;0.10615257015236526&#34;,&#34;0.10619077219395856&#34;,&#34;0.10624986878267631&#34;,&#34;0.10571793465137659&#34;,&#34;0.1054781831825434&#34;,&#34;0.10545453208501511&#34;,&#34;0.105183010893544&#34;,&#34;0.10506117337926245&#34;,&#34;0.10529779009754926&#34;,&#34;0.10529199846614694&#34;,&#34;0.10537718099274565&#34;,&#34;0.10544048393374315&#34;,&#34;0.10495535968461758&#34;,&#34;0.10452111617016623&#34;,&#34;0.10300524077820136&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/65PHZTpmE55b+cronos-cro&#34;,&#34;24hVolume&#34;:&#34;30487595&#34;,&#34;btcPrice&#34;:&#34;0.000005356315388568&#34;},{&#34;uuid&#34;:&#34;DCrsaMv68&#34;,&#34;symbol&#34;:&#34;NEAR&#34;,&#34;name&#34;:&#34;NEAR Protocol&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Cth83dCnl/near.png&#34;,&#34;marketCap&#34;:&#34;1921838896&#34;,&#34;price&#34;:&#34;3.161728743925566&#34;,&#34;listedAt&#34;:1615164591,&#34;tier&#34;:1,&#34;change&#34;:&#34;-10.05&#34;,&#34;rank&#34;:32,&#34;sparkline&#34;:[&#34;3.5365722048604558&#34;,&#34;3.535001548367229&#34;,&#34;3.528552930570017&#34;,&#34;3.5174678447812506&#34;,&#34;3.5198117298155362&#34;,&#34;3.5114170143872934&#34;,&#34;3.504589209738755&#34;,&#34;3.4914455824184447&#34;,&#34;3.455429141303092&#34;,&#34;3.462052946587881&#34;,&#34;3.466061316012953&#34;,&#34;3.4684962528351306&#34;,&#34;3.4718563219784317&#34;,&#34;3.4605307199270166&#34;,&#34;3.452890559665962&#34;,&#34;3.4514577960119355&#34;,&#34;3.434758326145947&#34;,&#34;3.4312320898841087&#34;,&#34;3.4402893640097143&#34;,&#34;3.445152665972188&#34;,&#34;3.442559966627565&#34;,&#34;3.4440253510842935&#34;,&#34;3.3649617172716804&#34;,&#34;3.2922768444781076&#34;,&#34;3.2057465977539925&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/DCrsaMv68+nearprotocol-near&#34;,&#34;24hVolume&#34;:&#34;204816973&#34;,&#34;btcPrice&#34;:&#34;0.000165906608230074&#34;},{&#34;uuid&#34;:&#34;AaQUAs2Mc&#34;,&#34;symbol&#34;:&#34;LUNC&#34;,&#34;name&#34;:&#34;Terra Classic&#34;,&#34;color&#34;:&#34;#0E3CA5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg&#34;,&#34;marketCap&#34;:&#34;1798378523&#34;,&#34;price&#34;:&#34;0.000272943653474552&#34;,&#34;listedAt&#34;:1565957940,&#34;tier&#34;:1,&#34;change&#34;:&#34;-9.95&#34;,&#34;rank&#34;:33,&#34;sparkline&#34;:[&#34;0.000303620527811495&#34;,&#34;0.000304456713391152&#34;,&#34;0.000302025160201053&#34;,&#34;0.000300638650778887&#34;,&#34;0.000300924086464382&#34;,&#34;0.000301952015765244&#34;,&#34;0.000304709853913656&#34;,&#34;0.000311446868180849&#34;,&#34;0.00030872271885206&#34;,&#34;0.000306184589403001&#34;,&#34;0.00030369670986693&#34;,&#34;0.000305299648046549&#34;,&#34;0.000305782789440931&#34;,&#34;0.000304998714155324&#34;,&#34;0.00030516279374122&#34;,&#34;0.000302035124483433&#34;,&#34;0.000298902162386491&#34;,&#34;0.000294717990591123&#34;,&#34;0.000295679419516642&#34;,&#34;0.000294547685931327&#34;,&#34;0.000293631792042232&#34;,&#34;0.00029507954149248&#34;,&#34;0.000293978958480119&#34;,&#34;0.00028678162507754&#34;,&#34;0.000281691595645392&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/AaQUAs2Mc+terraclassic-lunc&#34;,&#34;24hVolume&#34;:&#34;161213060&#34;,&#34;btcPrice&#34;:&#34;1.432227729e-8&#34;},{&#34;uuid&#34;:&#34;08CsQa-Ov&#34;,&#34;symbol&#34;:&#34;WEMIX&#34;,&#34;name&#34;:&#34;WEMIX TOKEN&#34;,&#34;color&#34;:&#34;#9bdc70&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1N84MQsoO/7548.png&#34;,&#34;marketCap&#34;:&#34;1681548705&#34;,&#34;price&#34;:&#34;1.6815487049836193&#34;,&#34;listedAt&#34;:1638249982,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.35&#34;,&#34;rank&#34;:34,&#34;sparkline&#34;:[&#34;1.7785519722561005&#34;,&#34;1.7858827078668005&#34;,&#34;1.7802645901879568&#34;,&#34;1.7764749674253342&#34;,&#34;1.7754939277589028&#34;,&#34;1.777827562747726&#34;,&#34;1.771367618664247&#34;,&#34;1.7676577036269447&#34;,&#34;1.7421153664608295&#34;,&#34;1.74018013648857&#34;,&#34;1.739447236595497&#34;,&#34;1.7467725516017982&#34;,&#34;1.7520953443350693&#34;,&#34;1.7497201629211947&#34;,&#34;1.7434300874832234&#34;,&#34;1.7410855467819677&#34;,&#34;1.7454145439804871&#34;,&#34;1.7381732777068986&#34;,&#34;1.7430858705433145&#34;,&#34;1.74422154979084&#34;,&#34;1.7416706732344704&#34;,&#34;1.7458348133550494&#34;,&#34;1.7410468949631808&#34;,&#34;1.726796062998524&#34;,&#34;1.709852670785355&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/08CsQa-Ov+wemixtoken-wemix&#34;,&#34;24hVolume&#34;:&#34;14705306&#34;,&#34;btcPrice&#34;:&#34;0.000088236551840031&#34;},{&#34;uuid&#34;:&#34;SbWqqTui-&#34;,&#34;symbol&#34;:&#34;ENS&#34;,&#34;name&#34;:&#34;EnergySwap&#34;,&#34;color&#34;:&#34;#ffda55&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/fmYxEUV5a/cropped-logo37-Converted-01-192x192.png&#34;,&#34;marketCap&#34;:&#34;1624271124&#34;,&#34;price&#34;:&#34;16.242711242778302&#34;,&#34;listedAt&#34;:1626134763,&#34;tier&#34;:1,&#34;change&#34;:&#34;-9.62&#34;,&#34;rank&#34;:35,&#34;sparkline&#34;:[&#34;17.886611128744736&#34;,&#34;17.98750167854358&#34;,&#34;17.89495459200179&#34;,&#34;17.945652772949337&#34;,&#34;17.961717330829398&#34;,&#34;17.68920864538644&#34;,&#34;17.587335784528257&#34;,&#34;17.46169325348126&#34;,&#34;17.478761771846223&#34;,&#34;17.55298689416666&#34;,&#34;17.474188627274106&#34;,&#34;17.493497716386933&#34;,&#34;17.415126957232957&#34;,&#34;17.1205273019632&#34;,&#34;16.746911333675556&#34;,&#34;16.682776901704162&#34;,&#34;16.65185204721645&#34;,&#34;16.59275573073735&#34;,&#34;16.586522851457904&#34;,&#34;16.599887206420323&#34;,&#34;16.562716013115207&#34;,&#34;16.571402638214735&#34;,&#34;16.400229974032907&#34;,&#34;16.209816101116832&#34;,&#34;16.17963770365993&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/SbWqqTui-+energyswap-ens&#34;,&#34;24hVolume&#34;:&#34;21996645&#34;,&#34;btcPrice&#34;:&#34;0.000852310033214311&#34;},{&#34;uuid&#34;:&#34;QQ0NCmjVq&#34;,&#34;symbol&#34;:&#34;FLOW&#34;,&#34;name&#34;:&#34;Flow&#34;,&#34;color&#34;:&#34;#9efad7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xh8X8QBss/flow.png&#34;,&#34;marketCap&#34;:&#34;1608551134&#34;,&#34;price&#34;:&#34;1.5523558519281844&#34;,&#34;listedAt&#34;:1614963736,&#34;tier&#34;:1,&#34;change&#34;:&#34;-8.98&#34;,&#34;rank&#34;:36,&#34;sparkline&#34;:[&#34;1.7126618274219394&#34;,&#34;1.7095554831546504&#34;,&#34;1.7074406085892582&#34;,&#34;1.7013640333391715&#34;,&#34;1.703657654228842&#34;,&#34;1.6971787183627416&#34;,&#34;1.6882451843348478&#34;,&#34;1.6802226754835359&#34;,&#34;1.652212266501822&#34;,&#34;1.6572776591145093&#34;,&#34;1.6617752743739627&#34;,&#34;1.6623334664099878&#34;,&#34;1.6696801648481165&#34;,&#34;1.663679626307038&#34;,&#34;1.6561015569342594&#34;,&#34;1.6522364242137182&#34;,&#34;1.646089924734656&#34;,&#34;1.6502065913720891&#34;,&#34;1.653127600011426&#34;,&#34;1.6563677492571192&#34;,&#34;1.646110384789078&#34;,&#34;1.6191443731879624&#34;,&#34;1.5945492504616587&#34;,&#34;1.578245729736617&#34;,&#34;1.563960546805218&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/QQ0NCmjVq+flow-flow&#34;,&#34;24hVolume&#34;:&#34;42229915&#34;,&#34;btcPrice&#34;:&#34;0.000081457365580245&#34;},{&#34;uuid&#34;:&#34;ymQub4fuB&#34;,&#34;symbol&#34;:&#34;FIL&#34;,&#34;name&#34;:&#34;Filecoin&#34;,&#34;color&#34;:&#34;#0090ff&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/vUmvv-IQA/FIL3-filecoin.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;1518147391&#34;,&#34;price&#34;:&#34;5.115300313250102&#34;,&#34;listedAt&#34;:1602839473,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.81&#34;,&#34;rank&#34;:37,&#34;sparkline&#34;:[&#34;5.461410684977759&#34;,&#34;5.46016712399476&#34;,&#34;5.448496205563744&#34;,&#34;5.430424051396227&#34;,&#34;5.436227762446354&#34;,&#34;5.412940415458087&#34;,&#34;5.408096306573797&#34;,&#34;5.3882222908284&#34;,&#34;5.316018138527317&#34;,&#34;5.331797820466268&#34;,&#34;5.3352160591954165&#34;,&#34;5.340638778204145&#34;,&#34;5.344961442248481&#34;,&#34;5.331395641661262&#34;,&#34;5.319693554981338&#34;,&#34;5.312085583952354&#34;,&#34;5.271638769077867&#34;,&#34;5.271489997640401&#34;,&#34;5.284318748010338&#34;,&#34;5.291781543272634&#34;,&#34;5.295597400836922&#34;,&#34;5.291099316023448&#34;,&#34;5.229330588428677&#34;,&#34;5.188614564751749&#34;,&#34;5.126848037216384&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ymQub4fuB+filecoin-fil&#34;,&#34;24hVolume&#34;:&#34;139569409&#34;,&#34;btcPrice&#34;:&#34;0.000268417120437685&#34;},{&#34;uuid&#34;:&#34;FEbS54wxo4oIl&#34;,&#34;symbol&#34;:&#34;VET&#34;,&#34;name&#34;:&#34;VeChain&#34;,&#34;color&#34;:&#34;#4bc0fa&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1_TDu9Dm/VEN.svg&#34;,&#34;marketCap&#34;:&#34;1499355876&#34;,&#34;price&#34;:&#34;0.022458646313399416&#34;,&#34;listedAt&#34;:1533427200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-3.92&#34;,&#34;rank&#34;:38,&#34;sparkline&#34;:[&#34;0.023439477811355726&#34;,&#34;0.023452563107489582&#34;,&#34;0.023423961982248782&#34;,&#34;0.023396276306953928&#34;,&#34;0.023418888719649176&#34;,&#34;0.023412693821209155&#34;,&#34;0.023531680002954407&#34;,&#34;0.023456675269474373&#34;,&#34;0.023233628959632283&#34;,&#34;0.023300114567050882&#34;,&#34;0.023312483171922686&#34;,&#34;0.023331705609271232&#34;,&#34;0.02336371969795962&#34;,&#34;0.023395184759605444&#34;,&#34;0.02332101164595078&#34;,&#34;0.023285768692513822&#34;,&#34;0.023126616869325173&#34;,&#34;0.02313779685062715&#34;,&#34;0.02321996219989213&#34;,&#34;0.023203917856843965&#34;,&#34;0.023216388778476732&#34;,&#34;0.02321228562709743&#34;,&#34;0.02302805292414345&#34;,&#34;0.022877554590587566&#34;,&#34;0.022660003591013063&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/FEbS54wxo4oIl+vechain-vet&#34;,&#34;24hVolume&#34;:&#34;92065569&#34;,&#34;btcPrice&#34;:&#34;0.000001178481184527&#34;},{&#34;uuid&#34;:&#34;bauj_21eYVwso&#34;,&#34;symbol&#34;:&#34;QNT&#34;,&#34;name&#34;:&#34;Quant&#34;,&#34;color&#34;:&#34;#585e63&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/a-i9Dl392/quant.png&#34;,&#34;marketCap&#34;:&#34;1464540277&#34;,&#34;price&#34;:&#34;149.7908281178745&#34;,&#34;listedAt&#34;:1533945600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-4.17&#34;,&#34;rank&#34;:39,&#34;sparkline&#34;:[&#34;157.0455387772848&#34;,&#34;154.40533995389038&#34;,&#34;153.49628345523342&#34;,&#34;153.755582164367&#34;,&#34;153.25217488581978&#34;,&#34;151.87898019349342&#34;,&#34;150.85221578616233&#34;,&#34;149.76886244644376&#34;,&#34;150.95739958263036&#34;,&#34;152.3018866867004&#34;,&#34;151.80292654893285&#34;,&#34;153.62573302969375&#34;,&#34;155.0195882167983&#34;,&#34;153.7412401330177&#34;,&#34;151.71696167021375&#34;,&#34;151.03045792339856&#34;,&#34;150.8616038853544&#34;,&#34;155.46158698130554&#34;,&#34;156.98432982407346&#34;,&#34;155.43105801262126&#34;,&#34;156.29628186364246&#34;,&#34;156.85367406322118&#34;,&#34;155.22391240579103&#34;,&#34;154.1573346245066&#34;,&#34;151.50396796957943&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/bauj_21eYVwso+quant-qnt&#34;,&#34;24hVolume&#34;:&#34;155994760&#34;,&#34;btcPrice&#34;:&#34;0.007860031726237051&#34;},{&#34;uuid&#34;:&#34;tEf7-dnwV3BXS&#34;,&#34;symbol&#34;:&#34;MANA&#34;,&#34;name&#34;:&#34;Decentraland&#34;,&#34;color&#34;:&#34;#f47e33&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ph_svUzXs/decentraland(1).svg&#34;,&#34;marketCap&#34;:&#34;1436841945&#34;,&#34;price&#34;:&#34;0.6550466721541853&#34;,&#34;listedAt&#34;:1500336000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.44&#34;,&#34;rank&#34;:40,&#34;sparkline&#34;:[&#34;0.6968165657453727&#34;,&#34;0.6965946403343043&#34;,&#34;0.6955401780631536&#34;,&#34;0.6943656752832073&#34;,&#34;0.6946904400161661&#34;,&#34;0.6920694820553807&#34;,&#34;0.6906731344821271&#34;,&#34;0.6884699559084295&#34;,&#34;0.6815064270359984&#34;,&#34;0.6834525508878408&#34;,&#34;0.6847477021508117&#34;,&#34;0.6847235914154632&#34;,&#34;0.6852890363868837&#34;,&#34;0.6845155927854775&#34;,&#34;0.683817753015771&#34;,&#34;0.6840496505842923&#34;,&#34;0.6822651916313429&#34;,&#34;0.6820176225939646&#34;,&#34;0.6839712442166291&#34;,&#34;0.6842503028554356&#34;,&#34;0.6844446277256846&#34;,&#34;0.684307758133486&#34;,&#34;0.6789510676823067&#34;,&#34;0.6742846183801096&#34;,&#34;0.6610404699288367&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/tEf7-dnwV3BXS+decentraland-mana&#34;,&#34;24hVolume&#34;:&#34;101366965&#34;,&#34;btcPrice&#34;:&#34;0.000034372515927652&#34;},{&#34;uuid&#34;:&#34;jad286TjB&#34;,&#34;symbol&#34;:&#34;HBAR&#34;,&#34;name&#34;:&#34;Hedera&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/dSCnSLilQ/hedera.svg&#34;,&#34;marketCap&#34;:&#34;1400935705&#34;,&#34;price&#34;:&#34;0.05754286243690513&#34;,&#34;listedAt&#34;:1568704980,&#34;tier&#34;:1,&#34;change&#34;:&#34;-4.23&#34;,&#34;rank&#34;:41,&#34;sparkline&#34;:[&#34;0.06026228087146397&#34;,&#34;0.06033187793028589&#34;,&#34;0.06027561883323482&#34;,&#34;0.06010492186635602&#34;,&#34;0.06003836295600198&#34;,&#34;0.05978624776086806&#34;,&#34;0.05969695187791152&#34;,&#34;0.05958137022962623&#34;,&#34;0.058789415920620036&#34;,&#34;0.05915657952754252&#34;,&#34;0.0592676454127721&#34;,&#34;0.059672945709016476&#34;,&#34;0.0603459427699299&#34;,&#34;0.059938419986995055&#34;,&#34;0.059843043756257486&#34;,&#34;0.0597100141741486&#34;,&#34;0.059472242500280194&#34;,&#34;0.059567247105076014&#34;,&#34;0.05983792950971073&#34;,&#34;0.059876114833285005&#34;,&#34;0.059895971305400274&#34;,&#34;0.059986556288869675&#34;,&#34;0.05949966691547662&#34;,&#34;0.05879487051280811&#34;,&#34;0.05804114728365785&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/jad286TjB+hedera-hbar&#34;,&#34;24hVolume&#34;:&#34;47169313&#34;,&#34;btcPrice&#34;:&#34;0.000003019468748892&#34;},{&#34;uuid&#34;:&#34;aMNLwaUbY&#34;,&#34;symbol&#34;:&#34;ICP&#34;,&#34;name&#34;:&#34;Internet Computer (DFINITY)&#34;,&#34;color&#34;:&#34;#00042b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1uJ_RVrmC/dfinity-icp.png&#34;,&#34;marketCap&#34;:&#34;1394834906&#34;,&#34;price&#34;:&#34;5.23424273507317&#34;,&#34;listedAt&#34;:1601555742,&#34;tier&#34;:1,&#34;change&#34;:&#34;-10.60&#34;,&#34;rank&#34;:42,&#34;sparkline&#34;:[&#34;5.885028940406694&#34;,&#34;5.8977558441432345&#34;,&#34;5.888637994977309&#34;,&#34;5.876190897957444&#34;,&#34;5.8222298464140465&#34;,&#34;5.803427790120461&#34;,&#34;5.789688838937986&#34;,&#34;5.7852249794365855&#34;,&#34;5.719450363443783&#34;,&#34;5.7496440651147305&#34;,&#34;5.755294808760236&#34;,&#34;5.749794727903299&#34;,&#34;5.762235632885068&#34;,&#34;5.745877673087344&#34;,&#34;5.690721800086487&#34;,&#34;5.654296523777942&#34;,&#34;5.65332263296135&#34;,&#34;5.614875784674768&#34;,&#34;5.627216943438124&#34;,&#34;5.630552413080166&#34;,&#34;5.623059660540579&#34;,&#34;5.617137362696555&#34;,&#34;5.51564065813155&#34;,&#34;5.380008089110393&#34;,&#34;5.304255859587679&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aMNLwaUbY+internetcomputerdfinity-icp&#34;,&#34;24hVolume&#34;:&#34;88973019&#34;,&#34;btcPrice&#34;:&#34;0.000274658431877589&#34;},{&#34;uuid&#34;:&#34;KfWtaeV1W&#34;,&#34;symbol&#34;:&#34;FRAX&#34;,&#34;name&#34;:&#34;Frax&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BpVNCX-NM/frax.png&#34;,&#34;marketCap&#34;:&#34;1363607806&#34;,&#34;price&#34;:&#34;1.0022041695259896&#34;,&#34;listedAt&#34;:1615299931,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.23&#34;,&#34;rank&#34;:43,&#34;sparkline&#34;:[&#34;0.9992664794249421&#34;,&#34;1.0002262738293723&#34;,&#34;1.000232302327043&#34;,&#34;1.0004305815641945&#34;,&#34;0.9997628688987996&#34;,&#34;1.0001542280862468&#34;,&#34;1.0000901813731709&#34;,&#34;1.0002726536482773&#34;,&#34;1.0004027241363154&#34;,&#34;0.9991681290039643&#34;,&#34;0.9999065715062573&#34;,&#34;0.9994459044714505&#34;,&#34;0.9989225556828486&#34;,&#34;1.0000021368171172&#34;,&#34;1.0000850899550087&#34;,&#34;0.9993757301700462&#34;,&#34;1.000001645463064&#34;,&#34;0.9986108407838368&#34;,&#34;0.9995979533832419&#34;,&#34;0.9999580952527024&#34;,&#34;0.9994610549866184&#34;,&#34;0.9994705501219832&#34;,&#34;1.0006918067028483&#34;,&#34;0.9997682453491867&#34;,&#34;1.0008650036041942&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/KfWtaeV1W+frax-frax&#34;,&#34;24hVolume&#34;:&#34;2007145&#34;,&#34;btcPrice&#34;:&#34;0.000052589044787458&#34;},{&#34;uuid&#34;:&#34;Z96jIvLU7&#34;,&#34;symbol&#34;:&#34;IMX&#34;,&#34;name&#34;:&#34;Immutable X&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/naRGT2Y_X/10603.png&#34;,&#34;marketCap&#34;:&#34;1356816211&#34;,&#34;price&#34;:&#34;0.6784081053439633&#34;,&#34;listedAt&#34;:1649387294,&#34;tier&#34;:1,&#34;change&#34;:&#34;-7.87&#34;,&#34;rank&#34;:44,&#34;sparkline&#34;:[&#34;0.7385540764733416&#34;,&#34;0.7387892107909404&#34;,&#34;0.736843563088993&#34;,&#34;0.7355272480189233&#34;,&#34;0.7352643279786405&#34;,&#34;0.7308075850806669&#34;,&#34;0.7283303584016984&#34;,&#34;0.7238233054715673&#34;,&#34;0.7133871809715906&#34;,&#34;0.712512804820701&#34;,&#34;0.708489153222375&#34;,&#34;0.7107255456602884&#34;,&#34;0.7134397229127725&#34;,&#34;0.712346711941874&#34;,&#34;0.7122751076036671&#34;,&#34;0.7136631057536917&#34;,&#34;0.7083692013840003&#34;,&#34;0.7055383865246094&#34;,&#34;0.7055438616248912&#34;,&#34;0.706730052352362&#34;,&#34;0.708779938683232&#34;,&#34;0.7092020518897018&#34;,&#34;0.7019354883795684&#34;,&#34;0.6962978896490684&#34;,&#34;0.6852037197169683&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Z96jIvLU7+immutablex-imx&#34;,&#34;24hVolume&#34;:&#34;35704153&#34;,&#34;btcPrice&#34;:&#34;0.000035598369395113&#34;},{&#34;uuid&#34;:&#34;omwkOTglq&#34;,&#34;symbol&#34;:&#34;EGLD&#34;,&#34;name&#34;:&#34;Elrond&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/X62ruAuZQ/Elrond.svg&#34;,&#34;marketCap&#34;:&#34;1326807730&#34;,&#34;price&#34;:&#34;56.10098365117234&#34;,&#34;listedAt&#34;:1612524044,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.68&#34;,&#34;rank&#34;:45,&#34;sparkline&#34;:[&#34;56.455542281647396&#34;,&#34;56.37269672595081&#34;,&#34;56.59506490012096&#34;,&#34;56.65755860848807&#34;,&#34;56.46317225403369&#34;,&#34;56.25042030082092&#34;,&#34;56.10646051365647&#34;,&#34;55.99373403445289&#34;,&#34;55.17579190312339&#34;,&#34;55.60488194774725&#34;,&#34;55.88874738983618&#34;,&#34;56.66768754640032&#34;,&#34;56.80821027855892&#34;,&#34;56.49869101825159&#34;,&#34;56.36999154412585&#34;,&#34;56.702814495523576&#34;,&#34;56.604511337062576&#34;,&#34;56.93403500717611&#34;,&#34;56.96287587606324&#34;,&#34;57.17233232257158&#34;,&#34;57.34969960951747&#34;,&#34;57.129882789838355&#34;,&#34;56.87098144117966&#34;,&#34;56.92621825878148&#34;,&#34;56.36991116030308&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/omwkOTglq+elrond-egld&#34;,&#34;24hVolume&#34;:&#34;79642695&#34;,&#34;btcPrice&#34;:&#34;0.002943808488890393&#34;},{&#34;uuid&#34;:&#34;fsIbGOEJWbzxG&#34;,&#34;symbol&#34;:&#34;XTZ&#34;,&#34;name&#34;:&#34;Tezos&#34;,&#34;color&#34;:&#34;#2c7df7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HkLUdilQ7/xtz.svg&#34;,&#34;marketCap&#34;:&#34;1222847444&#34;,&#34;price&#34;:&#34;1.3464716853331917&#34;,&#34;listedAt&#34;:1530662400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.65&#34;,&#34;rank&#34;:46,&#34;sparkline&#34;:[&#34;1.4358986631746915&#34;,&#34;1.4358190109653854&#34;,&#34;1.4346316657068616&#34;,&#34;1.4297195080813876&#34;,&#34;1.4295114026968183&#34;,&#34;1.4232982445478493&#34;,&#34;1.4208847961605975&#34;,&#34;1.416629388877603&#34;,&#34;1.3928396824392562&#34;,&#34;1.3982965147629787&#34;,&#34;1.4004435423654986&#34;,&#34;1.4018371801625011&#34;,&#34;1.404644313527332&#34;,&#34;1.399656275124715&#34;,&#34;1.397785064250421&#34;,&#34;1.3972126640240337&#34;,&#34;1.390336616800803&#34;,&#34;1.3920144310667881&#34;,&#34;1.3937870734971116&#34;,&#34;1.3970727985908602&#34;,&#34;1.3971721233632548&#34;,&#34;1.3957300374672263&#34;,&#34;1.3873062531302125&#34;,&#34;1.379944210745551&#34;,&#34;1.3594549983840765&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/fsIbGOEJWbzxG+tezos-xtz&#34;,&#34;24hVolume&#34;:&#34;21567765&#34;,&#34;btcPrice&#34;:&#34;0.000070653926533275&#34;},{&#34;uuid&#34;:&#34;pxtKbG5rg&#34;,&#34;symbol&#34;:&#34;SAND&#34;,&#34;name&#34;:&#34;The Sandbox&#34;,&#34;color&#34;:&#34;#00adef&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/kd_vwOcnI/sandbox.png&#34;,&#34;marketCap&#34;:&#34;1184610175&#34;,&#34;price&#34;:&#34;0.7878124927811557&#34;,&#34;listedAt&#34;:1613583024,&#34;tier&#34;:1,&#34;change&#34;:&#34;-5.67&#34;,&#34;rank&#34;:47,&#34;sparkline&#34;:[&#34;0.8391252245057487&#34;,&#34;0.8398353991587618&#34;,&#34;0.839447858542598&#34;,&#34;0.836777642538831&#34;,&#34;0.8357826597915352&#34;,&#34;0.8337462213938087&#34;,&#34;0.8323150469457988&#34;,&#34;0.8298854974248494&#34;,&#34;0.8217950733820105&#34;,&#34;0.8243725426081188&#34;,&#34;0.8257783489139435&#34;,&#34;0.8269930349183021&#34;,&#34;0.82834027889644&#34;,&#34;0.8273023718052273&#34;,&#34;0.8252808204274694&#34;,&#34;0.8251924025273044&#34;,&#34;0.8224711654106814&#34;,&#34;0.8226061954661672&#34;,&#34;0.8237994288791948&#34;,&#34;0.8231112056261928&#34;,&#34;0.8232512574811699&#34;,&#34;0.8229654891785493&#34;,&#34;0.8182592249811548&#34;,&#34;0.8141572943440636&#34;,&#34;0.7984772451510834&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/pxtKbG5rg+thesandbox-sand&#34;,&#34;24hVolume&#34;:&#34;67213948&#34;,&#34;btcPrice&#34;:&#34;0.000041339187888814&#34;},{&#34;uuid&#34;:&#34;GSCt2y6YSgO26&#34;,&#34;symbol&#34;:&#34;CHZ&#34;,&#34;name&#34;:&#34;Chiliz&#34;,&#34;color&#34;:&#34;#d05e72&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/gTsOlSnwR/4066.png&#34;,&#34;marketCap&#34;:&#34;1110124765&#34;,&#34;price&#34;:&#34;0.1868622362362506&#34;,&#34;listedAt&#34;:1562332440,&#34;tier&#34;:1,&#34;change&#34;:&#34;-13.59&#34;,&#34;rank&#34;:48,&#34;sparkline&#34;:[&#34;0.21687217140550805&#34;,&#34;0.2166581444556987&#34;,&#34;0.21606106951117457&#34;,&#34;0.21558453990448492&#34;,&#34;0.2155917912662132&#34;,&#34;0.21460813457565675&#34;,&#34;0.2138407144130764&#34;,&#34;0.21119334291108852&#34;,&#34;0.20406711176396244&#34;,&#34;0.20385044186873064&#34;,&#34;0.20431643074193853&#34;,&#34;0.20443402008781883&#34;,&#34;0.20509518763794296&#34;,&#34;0.2040570389389804&#34;,&#34;0.20271370825502513&#34;,&#34;0.20230245034754588&#34;,&#34;0.20007494004115414&#34;,&#34;0.19980037641227813&#34;,&#34;0.20037524578135063&#34;,&#34;0.20052244757309365&#34;,&#34;0.20046233420877863&#34;,&#34;0.2004588031725169&#34;,&#34;0.19659869555852563&#34;,&#34;0.19096343731662402&#34;,&#34;0.1880300979166308&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/GSCt2y6YSgO26+chiliz-chz&#34;,&#34;24hVolume&#34;:&#34;370876863&#34;,&#34;btcPrice&#34;:&#34;0.000009805293980328&#34;},{&#34;uuid&#34;:&#34;DXwP4wF9ksbBO&#34;,&#34;symbol&#34;:&#34;HT&#34;,&#34;name&#34;:&#34;Huobi Token&#34;,&#34;color&#34;:&#34;#2daadf&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ryFpQe0c7/ht.svg&#34;,&#34;marketCap&#34;:&#34;1069290281&#34;,&#34;price&#34;:&#34;5.21855378165937&#34;,&#34;listedAt&#34;:1517702400,&#34;tier&#34;:1,&#34;change&#34;:&#34;25.47&#34;,&#34;rank&#34;:49,&#34;sparkline&#34;:[&#34;4.2656490948475225&#34;,&#34;4.294349867609839&#34;,&#34;4.355386869302702&#34;,&#34;4.418410364414004&#34;,&#34;4.408943559093722&#34;,&#34;4.448953712936716&#34;,&#34;4.4132384268806595&#34;,&#34;4.374028634502124&#34;,&#34;4.597818695200795&#34;,&#34;5.0498599537676325&#34;,&#34;4.983095083388702&#34;,&#34;4.885459752599654&#34;,&#34;4.8819920983216285&#34;,&#34;4.9759472771240585&#34;,&#34;5.168650631763928&#34;,&#34;5.316597133508735&#34;,&#34;5.276754827428595&#34;,&#34;5.2989122312058266&#34;,&#34;5.242578842634648&#34;,&#34;5.219453685991482&#34;,&#34;5.20955615579291&#34;,&#34;5.116511352336516&#34;,&#34;5.1695972582634715&#34;,&#34;5.145985199783568&#34;,&#34;5.1614068498962515&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/DXwP4wF9ksbBO+huobitoken-ht&#34;,&#34;24hVolume&#34;:&#34;85079725&#34;,&#34;btcPrice&#34;:&#34;0.000273835179391884&#34;},{&#34;uuid&#34;:&#34;Pe93bIOD2&#34;,&#34;symbol&#34;:&#34;LDO&#34;,&#34;name&#34;:&#34;Lido DAO Token&#34;,&#34;color&#34;:&#34;#77cced&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Wp6LFY6ZZ/8000.png&#34;,&#34;marketCap&#34;:&#34;1030089802&#34;,&#34;price&#34;:&#34;1.2806928309055696&#34;,&#34;listedAt&#34;:1627361901,&#34;tier&#34;:1,&#34;change&#34;:&#34;-11.74&#34;,&#34;rank&#34;:50,&#34;sparkline&#34;:[&#34;1.45774415659554&#34;,&#34;1.461862720093767&#34;,&#34;1.459217427621416&#34;,&#34;1.4527143941446112&#34;,&#34;1.453258922823997&#34;,&#34;1.4489091517170558&#34;,&#34;1.447320561963645&#34;,&#34;1.4380087379834607&#34;,&#34;1.4051610733565734&#34;,&#34;1.4012499727629433&#34;,&#34;1.3952470870521374&#34;,&#34;1.399207810772896&#34;,&#34;1.3925478693378885&#34;,&#34;1.3818874151712748&#34;,&#34;1.367640009680698&#34;,&#34;1.3658142761855507&#34;,&#34;1.350615160377156&#34;,&#34;1.3416323940203634&#34;,&#34;1.342074404496167&#34;,&#34;1.3413397282632267&#34;,&#34;1.3463690012682163&#34;,&#34;1.3455511192372636&#34;,&#34;1.3302833848174163&#34;,&#34;1.320008326370752&#34;,&#34;1.3023846203462348&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Pe93bIOD2+lidodaotoken-ldo&#34;,&#34;24hVolume&#34;:&#34;9099559&#34;,&#34;btcPrice&#34;:&#34;0.000067202287409485&#34;}]}} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; API status: success BTC 19057.280343776176 Icon Url: https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg Rank Url: https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc ETH 1278.7448565611858 Icon Url: https://cdn.coinranking.com/rk4RKHOuW/eth.svg Rank Url: https://coinranking.com/coin/razxDUgYGNAdQ+ethereum-eth USDT 1.0006942257899014 Icon Url: https://cdn.coinranking.com/mgHqwlCLj/usdt.svg Rank Url: https://coinranking.com/coin/HIVsRcGKkPFtW+tetherusd-usdt USDC 1.001516752958171 Icon Url: https://cdn.coinranking.com/jkDf8sQbY/usdc.svg Rank Url: https://coinranking.com/coin/aKzUVe4Hh_CON+usdc-usdc BNB 269.35239602160357 Icon Url: https://cdn.coinranking.com/B1N19L_dZ/bnb.svg Rank Url: https://coinranking.com/coin/WcwrkfNI4FUAe+binancecoin-bnb XRP 0.49374621214983844 Icon Url: https://cdn.coinranking.com/B1oPuTyfX/xrp.svg Rank Url: https://coinranking.com/coin/-l8Mn2pVlRs-p+xrp-xrp BUSD 1.0011741265983014 Icon Url: https://cdn.coinranking.com/6SJHRfClq/busd.svg Rank Url: https://coinranking.com/coin/vSo2fu9iE1s0Y+binanceusd-busd ADA 0.3932226405369482 Icon Url: https://cdn.coinranking.com/ryY28nXhW/ada.svg Rank Url: https://coinranking.com/coin/qzawljRxB5bYu+cardano-ada SOL 31.523242018327903 Icon Url: https://cdn.coinranking.com/yvUG4Qex5/solana.svg Rank Url: https://coinranking.com/coin/zNZHO_Sjf+solana-sol DOGE 0.05863166282740626 Icon Url: https://cdn.coinranking.com/H1arXIuOZ/doge.svg Rank Url: https://coinranking.com/coin/a91GCGd_u96cF+dogecoin-doge DOT 6.190998900134086 Icon Url: https://cdn.coinranking.com/RsljYqnbu/polkadot.svg Rank Url: https://coinranking.com/coin/25W7FG7om+polkadot-dot MATIC 0.8046293570356682 Icon Url: https://cdn.coinranking.com/WulYRq14o/polygon.png Rank Url: https://coinranking.com/coin/uW2tk-ILY0ii+polygon-matic DAI 1.0016189326906015 Icon Url: https://cdn.coinranking.com/mAZ_7LwOE/mutli-collateral-dai.svg Rank Url: https://coinranking.com/coin/MoTuySvg7+dai-dai SHIB 0.00001010227002507 Icon Url: https://cdn.coinranking.com/D69LfI-tm/shib.png Rank Url: https://coinranking.com/coin/xz24e0BjL+shibainu-shib TRX 0.06215358754277865 Icon Url: https://cdn.coinranking.com/behejNqQs/trx.svg Rank Url: https://coinranking.com/coin/qUhEFk1I61atv+tron-trx WETH 1283.4302597229096 Icon Url: https://cdn.coinranking.com/KIviQyZlt/weth.svg Rank Url: https://coinranking.com/coin/Mtfb0obXVh59u+wrappedether-weth UNI 6.38200976407113 Icon Url: https://cdn.coinranking.com/1heSvUgtl/uniswap-v2.svg?size=48x48 Rank Url: https://coinranking.com/coin/_H5FVG9iW+uniswap-uni AVAX 15.916309864882791 Icon Url: https://cdn.coinranking.com/S0C6Cw2-w/avax-avalanche.png Rank Url: https://coinranking.com/coin/dvUj0CzDZ+avalanche-avax BIT 0.4372940449727807 Icon Url: https://cdn.coinranking.com/0ClFW1IpO/bitdao.png Rank Url: https://coinranking.com/coin/N2IgQ9Xme+bitdao-bit CAKE 4.452946301781518 Icon Url: https://cdn.coinranking.com/aRtgdw7bQ/pancakeswap-cake-logo.png Rank Url: https://coinranking.com/coin/ncYFcP709+pancakeswap-cake OKB 15.658048903533913 Icon Url: https://cdn.coinranking.com/xcZdYtX6E/okx.png Rank Url: https://coinranking.com/coin/PDKcptVnzJTmN+okb-okb ATOM 12.310514152737007 Icon Url: https://cdn.coinranking.com/HJzHboruM/atom.svg Rank Url: https://coinranking.com/coin/Knsels4_Ol-Ny+cosmos-atom LTC 51.813480569758035 Icon Url: https://cdn.coinranking.com/BUvPxmc9o/ltcnew.svg Rank Url: https://coinranking.com/coin/D7B1x_ks7WhV5+litecoin-ltc FTT 23.40123722292071 Icon Url: https://cdn.coinranking.com/WyBm4_EzM/ftx-exchange.svg Rank Url: https://coinranking.com/coin/NfeOYfNcl+ftxtoken-ftt ETC 24.11840005360424 Icon Url: https://cdn.coinranking.com/rJfyor__W/etc.svg Rank Url: https://coinranking.com/coin/hnfQfsYfeIGUQ+ethereumclassic-etc XMR 140.8167083471278 Icon Url: https://cdn.coinranking.com/Syz-oSd_Z/xmr.svg Rank Url: https://coinranking.com/coin/3mVx2FX_iJFp5+monero-xmr XLM 0.12195813717616484 Icon Url: https://cdn.coinranking.com/78CxK1xsp/Stellar_symbol_black_RGB.svg Rank Url: https://coinranking.com/coin/f3iaFeCKEmkaZ+stellar-xlm ALGO 0.31336193398363577 Icon Url: https://cdn.coinranking.com/lzbmCkUGB/algo.svg Rank Url: https://coinranking.com/coin/TpHE2IShQw-sJ+algorand-algo BTCB 19093.961144724017 Icon Url: https://cdn.coinranking.com/Swr_SeZio/4023.png Rank Url: https://coinranking.com/coin/9_jH48RBW+bitcoinbep2-btcb BCH 110.42416308022558 Icon Url: https://cdn.coinranking.com/By8ziihX7/bch.svg Rank Url: https://coinranking.com/coin/ZlZpzOJo43mIo+bitcoincash-bch CRO 0.10207680396962117 Icon Url: https://cdn.coinranking.com/2o91jm73M/cro.svg Rank Url: https://coinranking.com/coin/65PHZTpmE55b+cronos-cro NEAR 3.161728743925566 Icon Url: https://cdn.coinranking.com/Cth83dCnl/near.png Rank Url: https://coinranking.com/coin/DCrsaMv68+nearprotocol-near LUNC 0.000272943653474552 Icon Url: https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg Rank Url: https://coinranking.com/coin/AaQUAs2Mc+terraclassic-lunc WEMIX 1.6815487049836193 Icon Url: https://cdn.coinranking.com/1N84MQsoO/7548.png Rank Url: https://coinranking.com/coin/08CsQa-Ov+wemixtoken-wemix ENS 16.242711242778302 Icon Url: https://cdn.coinranking.com/fmYxEUV5a/cropped-logo37-Converted-01-192x192.png Rank Url: https://coinranking.com/coin/SbWqqTui-+energyswap-ens FLOW 1.5523558519281844 Icon Url: https://cdn.coinranking.com/xh8X8QBss/flow.png Rank Url: https://coinranking.com/coin/QQ0NCmjVq+flow-flow FIL 5.115300313250102 Icon Url: https://cdn.coinranking.com/vUmvv-IQA/FIL3-filecoin.svg?size=48x48 Rank Url: https://coinranking.com/coin/ymQub4fuB+filecoin-fil VET 0.022458646313399416 Icon Url: https://cdn.coinranking.com/B1_TDu9Dm/VEN.svg Rank Url: https://coinranking.com/coin/FEbS54wxo4oIl+vechain-vet QNT 149.7908281178745 Icon Url: https://cdn.coinranking.com/a-i9Dl392/quant.png Rank Url: https://coinranking.com/coin/bauj_21eYVwso+quant-qnt MANA 0.6550466721541853 Icon Url: https://cdn.coinranking.com/ph_svUzXs/decentraland(1).svg Rank Url: https://coinranking.com/coin/tEf7-dnwV3BXS+decentraland-mana HBAR 0.05754286243690513 Icon Url: https://cdn.coinranking.com/dSCnSLilQ/hedera.svg Rank Url: https://coinranking.com/coin/jad286TjB+hedera-hbar ICP 5.23424273507317 Icon Url: https://cdn.coinranking.com/1uJ_RVrmC/dfinity-icp.png Rank Url: https://coinranking.com/coin/aMNLwaUbY+internetcomputerdfinity-icp FRAX 1.0022041695259896 Icon Url: https://cdn.coinranking.com/BpVNCX-NM/frax.png Rank Url: https://coinranking.com/coin/KfWtaeV1W+frax-frax IMX 0.6784081053439633 Icon Url: https://cdn.coinranking.com/naRGT2Y_X/10603.png Rank Url: https://coinranking.com/coin/Z96jIvLU7+immutablex-imx EGLD 56.10098365117234 Icon Url: https://cdn.coinranking.com/X62ruAuZQ/Elrond.svg Rank Url: https://coinranking.com/coin/omwkOTglq+elrond-egld XTZ 1.3464716853331917 Icon Url: https://cdn.coinranking.com/HkLUdilQ7/xtz.svg Rank Url: https://coinranking.com/coin/fsIbGOEJWbzxG+tezos-xtz SAND 0.7878124927811557 Icon Url: https://cdn.coinranking.com/kd_vwOcnI/sandbox.png Rank Url: https://coinranking.com/coin/pxtKbG5rg+thesandbox-sand CHZ 0.1868622362362506 Icon Url: https://cdn.coinranking.com/gTsOlSnwR/4066.png Rank Url: https://coinranking.com/coin/GSCt2y6YSgO26+chiliz-chz HT 5.21855378165937 Icon Url: https://cdn.coinranking.com/ryFpQe0c7/ht.svg Rank Url: https://coinranking.com/coin/DXwP4wF9ksbBO+huobitoken-ht LDO 1.2806928309055696 Icon Url: https://cdn.coinranking.com/Wp6LFY6ZZ/8000.png Rank Url: https://coinranking.com/coin/Pe93bIOD2+lidodaotoken-ldo . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://jasoxddd.github.io/FastProject2/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 1 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter a is the 1 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 1 while i &lt;= 100: numbers.append(i) i += 1 for i in range(len(numbers)): if numbers[i] % 5 == 0 or numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times ordering = True while ordering: item = input(&quot;Please select an item from the menu&quot;) item = item.lower() if item in menu: total+=menu[item] print(item+&quot; added&quot;) while True: order=input(&quot;Do you want anything else?&quot;).lower() if order==&#39;y&#39;or order==&#39;yes&#39;: break elif order==&#39;n&#39; or order==&#39;no&#39;: ordering = False break else: print(&quot;Sorry, I didn&#39;t understand what you said.&quot;) else: print(&quot;We don&#39;t have that here.&quot;) #code should add the price of the menu items selected by the user print(&quot;Your total is &quot;+str(round(total,2))) . Menu burger $3.99 fries $1.99 drink $0.99 burger added fries added Sorry, I didn&#39;t understand what you said. We don&#39;t have that here. drink added Your total is 6.97 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://jasoxddd.github.io/FastProject2/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Javascript Test",
            "content": "The First program . We all know what it is . console.log(&quot;hello world!&quot;) . hello world! . Javascript ft. variables . Javascript program showing use of variables. . var msg = &quot;How are you today?&quot;; console.log(msg); . How are you today? . Javascript functions . Javascript program showing use of functions. . function logMsg(output){ console.log(output); } logMsg(msg); logMsg(&quot;I&#39;m doing ok&quot;); logMsg(2020); . How are you today? I&#39;m doing ok 2020 . Javascript Types . Javascript program showing Javascript&#39;s dynamic types . function logItType(output){ console.log(typeof output+&quot;:&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string: hello number: 2020 object: [ 1, 2, 3 ] . Javascript Object/Class . Javascript program showing use of instances . function Item(name,atk,price,description){ this.name = name; this.atk=atk; this.price = price; this.description = description; this.equipped = false; } Item.prototype.toggleEquiped = function(){ this.equipped=true; } Item.prototype.toJSON = function(){ const obj = {name: this.name, atk: this.atk, price: this.price, description: this.description, equipped: this.equipped}; const json = JSON.stringify(obj); return json; } Item.prototype.logItem=function(){ console.log(this.name); console.log(&quot;Atk:&quot;,this.atk); console.log(&quot;Price:&quot;,this.price); console.log(&#39;&quot;&#39;+this.description+&#39;&quot;&#39;); if (this.selected=true){ console.log(&quot;This item is equipped!&quot;) } console.log(&quot; n&quot;); } var coolSword=new Item(&quot;Cool Sword&quot;,999,9999,&quot;A very cool sword&quot;); coolSword.toggleEquiped(); logItType(coolSword+&quot; n&quot;); logItType(coolSword.toJSON()+&quot; n&quot;); coolSword.logItem(); . string: [object Object] string: {&#34;name&#34;:&#34;Cool Sword&#34;,&#34;atk&#34;:999,&#34;price&#34;:9999,&#34;description&#34;:&#34;A very cool sword&#34;,&#34;equipped&#34;:true} Cool Sword Atk: 999 Price: 9999 &#34;A very cool sword&#34; This item is equipped! . Javascript Array of Objects . Javascript program that showcases use of arrays of objects . var Inventory = [ new Item(&quot;Beginner&#39;s Blade&quot;,10,5,&quot;A weapon fit for a beginner&quot;), new Item(&quot;Adventurer&#39;s Blade&quot;,20,10,&quot;A weapon that signifies experiences in adventure&quot;), new Item(&quot;The Frost Edge&quot;,50,150,&quot;The treasured sword of Frostpeak&quot;), coolSword ]; for (let i = 0; i &lt; Inventory.length; i++){ Inventory[i].logItem(); } . Beginner&#39;s Blade Atk: 10 Price: 5 &#34;A weapon fit for a beginner&#34; This item is equipped! Adventurer&#39;s Blade Atk: 20 Price: 10 &#34;A weapon that signifies experiences in adventure&#34; This item is equipped! The Frost Edge Atk: 50 Price: 150 &#34;The treasured sword of Frostpeak&#34; This item is equipped! Cool Sword Atk: 999 Price: 9999 &#34;A very cool sword&#34; This item is equipped! . Javascript Table . A program that displays array data in a table . var style = ( &quot;display:inline-block;&quot; + &quot;background:black;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Attack&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Price&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Description&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var item of Inventory) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + item.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + item.atk + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + item.price + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + item.description + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } htmlFrag=&quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; $$.html(htmlFrag); . NameAttackPriceDescription . Beginner&#39;s Blade | 10 | 5 | A weapon fit for a beginner | Adventurer&#39;s Blade | 20 | 10 | A weapon that signifies experiences in adventure | The Frost Edge | 50 | 150 | The treasured sword of Frostpeak | Cool Sword | 999 | 9999 | A very cool sword | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://jasoxddd.github.io/FastProject2/jupyter/2022/09/23/javascript.html",
            "relUrl": "/jupyter/2022/09/23/javascript.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "App Lab Log",
            "content": "Outline . Here is my outline: 3 Questions, with one right answers each . Getting questions right go to the correct page and 1 score, incorrect page if not right | End screen depending on score | Coins to show number of correct problems | Question #1: What is the 5th offical level in Geometry Dash? Answer is in format of image + text, click on the text | The Answer is Base to Base | Three other answers Stereo Madness | Can&#39;t Let Go (without apostrophe for memes) | Jumper (My first guess) | | . | Question #2: How many Gold Coins are in the game currently? Text only answer choices | 149 coins (why robtop) | Other answers: 63, 99, 168 | . | Question #3: Which of these parts belong in Clutterfunk? Image only answers | Correct answer is the one in bottom right | Other parts from Cycles, xStep, and Theory of Everything (ToE) | . | . Logs . The following are logs of my progress each day . Day 1 - 9/9/2022 . I made a remix of the example, Renamed it to Geometry Dash Quiz . I also created the title screen, replaced the image with the GD logo and wrote the title text . I made a score variable to track the questions I got correct. . I made the Question and Options for the questions Note: it turns out that the GD wiki uses .webm files, which can&#39;t be used, I had to use thumbnails instead . I made the Incorrect and Correct Screens, and linked the options on problem #1 to their options: correct options to the correct screen and incorrect to the incorrect screen, with the level complete screen and dying at the first spike in stereo madness screen respectively. . I ran into a problem, I don&#39;t want to make a separate screen after each problem, but I can&#39;t find a way to make it link to different screens. . Summary: Overall pretty good progress, but I need to do something about the screen problem. . Day 2 - 9/11/2022 . I had to do something else last day, so this is my second day doing the project. . I figured out the solution to the problem. All I had to do is to store the id for the screen in a list and make a variable for the question that I was on, then I can just go to the question by using the variable as an index for the lsit, which would go to the right screen. I have yet to test this but it should work in theory. . Alright, it worked, so I have to link the rest of the options now. . There has to be a faster way to do this . It turns out text mode is great for copying and pasting options that are basically the same, so I used that to make a OnClick event for every option. . I made the screens for each of the scores possible, and used the list of ids trick to link the continue button to the endscreen with the score variable as index when the question variable is not less than 3, which means the player had just finished the 3rd problem. . It&#39;s getting late, so I will do the debugging tomorrow. . Summary: Pretty much done with the project, only debugging left to go. . Day 3 - 9/12/2022 . I&#39;m technically supposed to be done already, but I can use the Office Hour time to debug . There is a bug where getting one problem correct would link to the 0 coins screen. . A quick check and I figured the problem was that the list for the end screens is wrong, I fixed and it seemed to work now . Another bug, getting the last question wrong returns an error. . I figured it out after some logging, I had to have the go to endscreen code for both of the continue buttons. . It seems to be all working now, so that&#39;s good. . Summary: Finished Debugging, hopefully this is good for the full score. . Day 4 - 9/13/2022 . I noticed I forgot to remove the stretched GD logo from title screen after a failed attempt at creating the title screen, I quickly removed that, this should be all good now . My log is not showing why . I found that my log is not showing because I put the first cell in this log as code, so I copied that over . Summary: One quick UI fix and logging fix before the end, that&#39;s good. .",
            "url": "https://jasoxddd.github.io/FastProject2/jupyter/2022/09/09/quiz_log.html",
            "relUrl": "/jupyter/2022/09/09/quiz_log.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Del Norte Bell Schedule",
            "content": "Below are the (really confusing) bell schedule for Del Norte . Monday, Tuesday, Thursday . The “normal” bell schedule . Period Start Time End Time . Period 1 | 8:35 | 9:44 | . Period 2 | 9:49 | 10:58 | . Break | 10:58 | 11:08 | . Period 3 | 11:13 | 12:22 | . Lunch | 12:22 | 12:52 | . Period 4 | 12:57 | 14:06 | . Office Hours | 14:06 | 14:31 | . Period 5 | 14:36 | 15:45 | . Wednesday . The late start bell schdule . Period Start Time End Time . Period 1 | 9:55 | 10:53 | . Period 2 | 10:58 | 11:56 | . Break | 11:56 | 12:06 | . Period 3 | 12:11 | 13:09 | . Lunch | 13:09 | 13:39 | . Period 4 | 13:44 | 14:42 | . Period 5 | 14:47 | 15:45 | . Friday . The day-without-office-hours bell schedule . Period Start Time End Time . Period 1 | 8:35 | 9:49 | . Period 2 | 9:54 | 11:08 | . Break | 11:08 | 11:18 | . Period 3 | 11:23 | 12:37 | . Lunch | 12:37 | 13:07 | . Period 4 | 13:12 | 14:26 | . Period 5 | 14:31 | 15:45 | .",
            "url": "https://jasoxddd.github.io/FastProject2/markdown/2022/09/04/del-norte-schedule.html",
            "relUrl": "/markdown/2022/09/04/del-norte-schedule.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review of variables in the introduction last week. String, Integer, Float, List and Dictionary are some of the types of variables. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | # variable of type string name = &quot;John Doe&quot; print(&quot;name&quot;, name, type(name)) #string is a primitive # variable of type integer age = 18 print(&quot;age&quot;, age, type(age)) #int is a primitive # variable of type float score = 90.0 print(&quot;score&quot;, score, type(score)) #float is a primitive print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;] print(&quot;langs&quot;, langs, type(langs)) #list is a collection print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) #element in this list in a primitive print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) #dictionary is a collection print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) #string in dictionary is primitive . name John Doe &lt;class &#39;str&#39;&gt; age 18 &lt;class &#39;int&#39;&gt; score 90.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;John Doe&#39;, &#39;age&#39;: 18, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] John Doe &lt;class &#39;str&#39;&gt; . List and Dictionary purpose . Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list | In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). | . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Haoxuan&quot;, &quot;LastName&quot;: &quot;Tong&quot;, &quot;DOB&quot;: &quot;July 9&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;haoxuantong8@gmail.com&quot;, &quot;Owns_Cars&quot;: [] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]}, {&#39;FirstName&#39;: &#39;Haoxuan&#39;, &#39;LastName&#39;: &#39;Tong&#39;, &#39;DOB&#39;: &#39;July 9&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;haoxuantong8@gmail.com&#39;, &#39;Owns_Cars&#39;: []}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) InfoDb = [] InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Haoxuan&quot;, &quot;LastName&quot;: &quot;Tong&quot;, &quot;DOB&quot;: &quot;July 9&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;haoxuantong8@gmail.com&quot;, &quot;Owns_Cars&quot;: [] }) for_loop() . For loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: . Calling a for loop with index . Instead of using elements, using the function range can create a list of indexes to output the data. . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for i in range(len(InfoDb)): #Using range(len(InfoDb)) to create an iterable of indices print_data(InfoDb[i]) for_loop() . For loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: . Outputting data in reverse . Using range(0,len(InfoDb),-1), we can output the date in reverse. . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb with indices def for_loop_indices(): print(&quot;Reverse with indices n&quot;) for i in range(len(InfoDb)-1,-1,-1): #Using range(len(InfoDb)-1,-1,-1) to create a reversed iterable of indices print_data(InfoDb[i]) for_loop_indices() . Reverse with indices Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac . Poping and Slicing from a List . Using pop() to pop values from selected indices . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for i in range(len(InfoDb)): #Using range(len(InfoDb)) to create an iterable of indices print_data(InfoDb[i]) print(&quot;pop&quot;) print(&quot;Original List n&quot;) for_loop()#printing the original list popped=InfoDb.pop(0)#popping the first element from list and storing it in a variable print(&quot;New List n&quot;) for_loop()#printing the new list print(&quot;Popped Variable n&quot;) print_data(popped)#printing the popped variable InfoDb.append(popped)#adding the popped element back into the list print(&quot;&quot;) print(&quot;slice&quot;) print(&quot;Original List n&quot;) for_loop()#printing the original list aSlice=InfoDb[1:3]#slicing the second element and third from list and storing it in a variable print(&quot;New List n&quot;) for_loop()#printing the new list, it should be the same print(&quot;Slice variables&quot;) print_data(aSlice[0])#printing the first and second variable in the slice print_data(aSlice[1]) print(&quot;&quot;) . pop Original List For loop output Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac New List For loop output Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Popped Variable Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner slice Original List For loop output Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner New List For loop output Haoxuan Tong Residence: San Diego Birth Day: July 9 Cars: John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Slice variables John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner . Adding to a Dictionary with Inputs . Using input to add a value to a dictionary with the key and value. . aDict={ &#39;a&#39;:12, &#39;b&#39;:34 }#creating a dictionary print(&quot;Original Dictionary&quot;) print(aDict) key=input(&quot;Enter your key (str): &quot;)#get the key ele=int(input(&quot;Enter your element (int): &quot;))#get the element aDict[key]=ele#adding the element to the dictionary print(&quot;New Dictionary&quot;) print(aDict)#printing the dictionary . Original Dictionary {&#39;a&#39;: 12, &#39;b&#39;: 34} New Dictionary {&#39;a&#39;: 12, &#39;b&#39;: 34, &#39;c&#39;: 28} . Quiz using Dictionaries . Using Dictionaries to create a quiz . import getpass, sys def question_with_response(prompt): #function for asking and answering print(&quot;Question: &quot; + prompt) msg = input() return msg quizQnA={ &quot;What folder is used to create markdown posts?&quot;:&quot;posts&quot;, &quot;What folder is used to create notebook posts?&quot;:&quot;notebook&quot;, &quot;What is the term for submitting a change made in editor?&quot;:&quot;commit&quot;, &quot;What command is used to include other functions that are developed?&quot;:&quot;import&quot;, &quot;What command in this example is used to evaluate a response?&quot;:&quot;if&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;:&quot;expression&quot;, }#define the questions quizLength=len(quizQnA)#measures the length of question ans=0#add variable for answered correctly for question in quizQnA: resp=question_with_response(question) if resp==quizQnA[question]: print(resp+&quot; was correct!&quot;) ans+=1 else: print(resp+&quot; was incorrect.&quot;) print(&quot;The correct answer is &quot;+quizQnA[question]) print(getpass.getuser()+&quot;, you scored &quot;+str(ans)+&quot;/&quot;+str(quizLength)+&quot;, which is &quot;+str(format(ans/quizLength*100,&quot;.2f&quot;))+&quot;%&quot;) . Question: What folder is used to create markdown posts? posts was correct! Question: What folder is used to create notebook posts? notebook was correct! Question: What is the term for submitting a change made in editor? commit was correct! Question: What command is used to include other functions that are developed? commit was incorrect. The correct answer is import Question: What command in this example is used to evaluate a response? if was correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression was correct! haoxu, you scored 5/6, which is 83.33% . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://jasoxddd.github.io/FastProject2/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Quiz",
            "content": "import getpass, sys def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;What folder is used to create markdown posts?&quot;) if rsp == &quot;posts&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What folder is used to create notebook posts?&quot;) if rsp == &quot;notebook&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What is the term for submitting a change made in editor?&quot;) if rsp == &quot;commit&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, haoxu running c: Users haoxu AppData Local Programs Python Python310 python.exe You will be asked 3 questions. Question: Are you ready to take a test? Answer: y Question: What folder is used to create markdown posts? posts is correct! Question: What folder is used to create notebook posts? notebook is correct! Question: What is the term for submitting a change made in editor? commit is correct! haoxu you scored 3/3 .",
            "url": "https://jasoxddd.github.io/FastProject2/jupyter/2022/08/27/quiz.html",
            "relUrl": "/jupyter/2022/08/27/quiz.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "An test Markdown Post",
            "content": "Test . Does this work? .",
            "url": "https://jasoxddd.github.io/FastProject2/markdown/2022/08/23/new-post.html",
            "relUrl": "/markdown/2022/08/23/new-post.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Test Notebook Post",
            "content": "print(&#39;hello world&#39;) . hello world . .",
            "url": "https://jasoxddd.github.io/FastProject2/jupyter/2022/08/23/new-notebook.html",
            "relUrl": "/jupyter/2022/08/23/new-notebook.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Bash Test",
            "content": "Prerequisites for Bash on Jupyter . Being able to find a Bash Reference. Here is a Bash Cheat Sheet Install the Bash Kernel for Jupyter notebooks. Expectations are pip3 and python3 are defined within the path. The bash shell allowed construction of this tutorial. . pip install bash_kernel | python -m bash_kernel.install | . Selecting a kernel in &quot;code --project--&quot; or &quot;jupyter notebook --file.ipynb--&quot; that have bash in options. . Prerequisites for Project Directory . Practice pulling code from git to your machine. This will create a project directory and add APCSP github project to the directory. There is conditional logic to make sure that directory and pull only happen if it does not (!) exist. . Hack:Change variables, make new directory, clone to that directory. | . echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/haoxuan/vscode exists. Directory /home/haoxuan/vscode/APCSP exists. . Look inside Fastpages/Github page project . All computers contain files and directories. The clone brought more files from cloud to your machine. Using the bash shell you will see some commands that show and interact with files and directories. . &quot;ls&quot; lists computer files in Unix and Unix-like operating systems | &quot;cd&quot; offers way to navigate and change working directory | &quot;pwd&quot; print working directory | &quot;echo&quot; used to display line of text/string that are passed as an argument | . ls . Volume in drive C is Windows Volume Serial Number is A6D3-D43E Directory of c: AAA coding Visual Studio fastproject2 FastProject2 _notebooks 08/29/2022 02:53 PM &lt;DIR&gt; . 08/29/2022 12:08 AM &lt;DIR&gt; .. 08/23/2022 11:51 PM 3,162,569 2020-02-20-test.ipynb 08/30/2022 02:36 PM 9,754 2022-08-22-bash_test.ipynb 08/30/2022 02:36 PM 1,195 2022-08-23-new-notebook.ipynb 08/29/2022 02:47 PM 3,179 2022-08-27-quiz.ipynb 08/23/2022 11:41 PM &lt;DIR&gt; ghtop_images 08/23/2022 11:41 PM &lt;DIR&gt; my_icons 08/23/2022 11:41 PM 784 README.md 5 File(s) 3,177,481 bytes 4 Dir(s) 344,116,977,664 bytes free . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /home/haoxuan list top level or root of files with project pulled from github anaconda3 vscode list again with hidden files pulled from github . .cache .local .vscode-server .. .conda .motd_shown .wget-hsts .aws .docker .node-gyp anaconda3 .azure .gitconfig .npm vscode .bash_history .ipython .profile .bash_logout .jupyter .sudo_as_admin_successful .bashrc .landscape .vscode-remote-containers list all files in long format total 96 drwxr-xr-x 15 haoxuan haoxuan 4096 Oct 10 15:19 . drwxr-xr-x 3 root root 4096 Aug 23 23:16 .. lrwxrwxrwx 1 haoxuan haoxuan 23 Sep 20 01:15 .aws -&gt; /mnt/c/Users/haoxu/.aws lrwxrwxrwx 1 haoxuan haoxuan 25 Sep 20 01:15 .azure -&gt; /mnt/c/Users/haoxu/.azure -rw- 1 haoxuan haoxuan 9611 Oct 13 19:01 .bash_history -rw-r--r-- 1 haoxuan haoxuan 220 Aug 23 23:16 .bash_logout -rw-r--r-- 1 haoxuan haoxuan 4254 Aug 30 14:47 .bashrc drwxr-xr-x 6 haoxuan haoxuan 4096 Sep 22 14:59 .cache drwxr-xr-x 2 haoxuan haoxuan 4096 Aug 30 14:46 .conda drwxr-xr-x 5 haoxuan haoxuan 4096 Sep 20 14:29 .docker -rw-r--r-- 1 haoxuan haoxuan 59 Sep 21 01:32 .gitconfig drwxr-xr-x 3 haoxuan haoxuan 4096 Aug 30 14:57 .ipython drwxr-xr-x 2 haoxuan haoxuan 4096 Aug 30 14:59 .jupyter drwxr-xr-x 2 haoxuan haoxuan 4096 Aug 23 23:16 .landscape drwxr-xr-x 5 haoxuan haoxuan 4096 Oct 3 14:45 .local -rw-r--r-- 1 haoxuan haoxuan 0 Oct 15 14:09 .motd_shown drwxr-xr-x 3 haoxuan haoxuan 4096 Sep 21 15:15 .node-gyp drwxr-xr-x 13 haoxuan haoxuan 4096 Sep 22 14:59 .npm -rw-r--r-- 1 haoxuan haoxuan 807 Aug 23 23:16 .profile -rw-r--r-- 1 haoxuan haoxuan 0 Sep 20 14:25 .sudo_as_admin_successful drwxr-xr-x 3 haoxuan haoxuan 4096 Oct 10 15:19 .vscode-remote-containers drwxr-xr-x 5 haoxuan haoxuan 4096 Aug 30 14:52 .vscode-server -rw-r--r-- 1 haoxuan haoxuan 183 Oct 12 15:29 .wget-hsts drwxr-xr-x 28 haoxuan haoxuan 4096 Aug 30 15:01 anaconda3 drwxr-xr-x 9 haoxuan haoxuan 4096 Oct 12 15:01 vscode . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . Look for posts bash: cd: /_posts: No such file or directory /home/haoxuan total 8 drwxr-xr-x 28 haoxuan haoxuan 4096 Aug 30 15:01 anaconda3 drwxr-xr-x 9 haoxuan haoxuan 4096 Oct 12 15:01 vscode . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . Look for notebooks bash: cd: /_notebooks: No such file or directory /home/haoxuan total 8 drwxr-xr-x 28 haoxuan haoxuan 4096 Aug 30 15:01 anaconda3 drwxr-xr-x 9 haoxuan haoxuan 4096 Oct 12 15:01 vscode . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . Look for images in notebooks, print working directory, list files bash: cd: /_notebooks/images: No such file or directory /home/haoxuan total 8 drwxr-xr-x 28 haoxuan haoxuan 4096 Aug 30 15:01 anaconda3 drwxr-xr-x 9 haoxuan haoxuan 4096 Oct 12 15:01 vscode . Look inside a Markdown File . &quot;cat&quot; reads data from the file and gives its content as output . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; . Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md cat: README.md: No such file or directory end of README.md . Env, Git and GitHub . Env(ironment) is used to capture things like path to Code or Home directory. Git and GitHub is NOT Only used to exchange code between individuals, it is often used to exchange code through servers, in our case deployment for Website. All tools we use have a behind the scenes hav relationship with the system they run on (MacOS, Windows, Linus) or a relationship with servers which they are connected to (ie GitHub). There is an &quot;env&quot; command in bash. There are environment files and setting files (.git/config) for Git. They both use a key/value concept. . &quot;env&quot; show setting for your shell | &quot;git clone&quot; sets up a director of files | &quot;cd $project&quot; allows user to move inside that directory of files | &quot;.git&quot; is a hidden directory that is used by git to establish relationship between machine and the git server on GitHub. | . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 CONDA_EXE=/home/haoxuan/anaconda3/bin/conda _CE_M= APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1 WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=LAPTOP-V9GL5S0O PWD=/home/haoxuan LOGNAME=haoxuan CONDA_PREFIX=/home/haoxuan/anaconda3 MOTD_SHOWN=update-motd HOME=/home/haoxuan LANG=C.UTF-8 WSL_INTEROP=/run/WSL/11_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=haoxuan PYTHONIOENCODING=utf-8 notebooks=/_notebooks CONDA_SHLVL=1 DISPLAY=:0 SHLVL=1 PAGER=cat VSCODE_CWD=/mnt/c/AAA/coding/Visual Studio/Microsoft VS Code CONDA_PYTHON_EXE=/home/haoxuan/anaconda3/bin/python XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=VSCODE_WSL_EXT_LOCATION/up VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/haoxu/.vscode/extensions/ms-vscode-remote.remote-wsl-0.72.0 XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop PATH=/home/haoxuan/.vscode-server/bin/129500ee4c8ab7263461ffe327268ba56b9f210d/bin/remote-cli:/home/haoxuan/.local/bin:/home/haoxuan/anaconda3/bin:/home/haoxuan/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Program Files/Intel/WiFi/bin:/mnt/c/Program Files/Common Files/Intel/WirelessCommon:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/Users/haoxu/AppData/Local/Programs/Python/Python310/Scripts:/mnt/c/Users/haoxu/AppData/Local/Programs/Python/Python310:/mnt/c/Users/haoxu/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/haoxu/AppData/Local/JetBrains/PyCharm Community Edition 2019.2.3/bin:/mnt/c/AAA/coding/Visual Studio/Microsoft VS Code/bin:/mnt/c/Users/haoxu/AppData/Local/Programs/Git/cmd:/snap/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 PULSE_SERVER=/mnt/wslg/PulseServer VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/haoxuan VSCODE_IPC_HOOK_CLI=/mnt/wslg/runtime-dir/vscode-ipc-c6bbfe09-49c2-4921-95fa-d98203437b83.sock _=/usr/bin/env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . show the secrets of .git bash: cd: .git: No such file or directory total 8 drwxr-xr-x 28 haoxuan haoxuan 4096 Aug 30 15:01 anaconda3 drwxr-xr-x 9 haoxuan haoxuan 4096 Oct 12 15:01 vscode look at config file cat: config: No such file or directory . . Hacks . Go back to some of the deployment procedures and think about some thing you could verify through Bash notebook. . Is there anything we use to verify tools we install? Think about versions. | Is there anything we could verify with Anaconda? | How would you update a repository? | Really cool would be automating a procedure from installation. | .",
            "url": "https://jasoxddd.github.io/FastProject2/techtalk/bash",
            "relUrl": "/techtalk/bash",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Fastpages Notebook Blog Post",
            "content": "Markdown changes . About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://jasoxddd.github.io/FastProject2/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post26": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://jasoxddd.github.io/FastProject2/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://jasoxddd.github.io/FastProject2/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "",
          "content": "Notebook using javascript: . Notebook",
          "url": "https://jasoxddd.github.io/FastProject2/javascript/",
          "relUrl": "/javascript/",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page7": {
          "title": "Submenu",
          "content": ".mytable{ width:50px; height:50px; } . Link Description . Link to API page Notebook | . Link to Identifying errors page Notebook | .",
          "url": "https://jasoxddd.github.io/FastProject2/submenu/",
          "relUrl": "/submenu/",
          "date": ""
      }
      
  

  

  
  

  
  

  
  

  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jasoxddd.github.io/FastProject2/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}